# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.10
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_ama', [dirname(__file__)])
        except ImportError:
            import _ama
            return _ama
        if fp is not None:
            try:
                _mod = imp.load_module('_ama', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _ama = swig_import_helper()
    del swig_import_helper
else:
    import _ama
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


try:
    import weakref
    weakref_proxy = weakref.proxy
except:
    weakref_proxy = lambda x: x


ID_BT_INDEX = _ama.ID_BT_INDEX
ID_BT_SHARES_A = _ama.ID_BT_SHARES_A
ID_BT_SHARES_B = _ama.ID_BT_SHARES_B
ID_BT_SHARES_G = _ama.ID_BT_SHARES_G
ID_BT_SHARES_KCB = _ama.ID_BT_SHARES_KCB
ID_BT_SHARES_LIST = _ama.ID_BT_SHARES_LIST
ID_BT_SHARES_PRE = _ama.ID_BT_SHARES_PRE
ID_BT_SHARES_PZ_ZB = _ama.ID_BT_SHARES_PZ_ZB
ID_BT_SHARES_PZ_CYB = _ama.ID_BT_SHARES_PZ_CYB
ID_BT_SHARES_PZ_KCB = _ama.ID_BT_SHARES_PZ_KCB
ID_BT_SHARES_OTE = _ama.ID_BT_SHARES_OTE
ID_BT_FUND_ET = _ama.ID_BT_FUND_ET
ID_BT_FUND_LO = _ama.ID_BT_FUND_LO
ID_BT_FUND_GR = _ama.ID_BT_FUND_GR
ID_BT_FUND_OPE = _ama.ID_BT_FUND_OPE
ID_BT_FUND_CLOS = _ama.ID_BT_FUND_CLOS
ID_BT_FUND_REIT = _ama.ID_BT_FUND_REIT
ID_BT_FUND_OT = _ama.ID_BT_FUND_OT
ID_BT_BOND_CO = _ama.ID_BT_BOND_CO
ID_BT_BOND_N = _ama.ID_BT_BOND_N
ID_BT_BOND_COM = _ama.ID_BT_BOND_COM
ID_BT_BOND_EN = _ama.ID_BT_BOND_EN
ID_BT_BOND_P = _ama.ID_BT_BOND_P
ID_BT_BOND_PP_E = _ama.ID_BT_BOND_PP_E
ID_BT_BOND_COM_S = _ama.ID_BT_BOND_COM_S
ID_BT_BOND_S = _ama.ID_BT_BOND_S
ID_BT_BOND_OT = _ama.ID_BT_BOND_OT
ID_BT_REPO_ZY = _ama.ID_BT_REPO_ZY
ID_BT_REPO_BOND_MD = _ama.ID_BT_REPO_BOND_MD
ID_BT_REPO_B = _ama.ID_BT_REPO_B
ID_BT_OPTION_C_G = _ama.ID_BT_OPTION_C_G
ID_BT_OPTION_P_G = _ama.ID_BT_OPTION_P_G
ID_BT_OPTION_C_ID = _ama.ID_BT_OPTION_C_ID
ID_BT_OPTION_P_IDX = _ama.ID_BT_OPTION_P_IDX
ID_BT_OPTION_C_CMD = _ama.ID_BT_OPTION_C_CMD
ID_BT_OPTION_P_CM = _ama.ID_BT_OPTION_P_CM
ID_BT_OPTION_S = _ama.ID_BT_OPTION_S
ID_BT_OPTION_ID = _ama.ID_BT_OPTION_ID
ID_BT_OPTION_SHARE = _ama.ID_BT_OPTION_SHARE
ID_BT_OPTION_OT = _ama.ID_BT_OPTION_OT
ID_BT_Q = _ama.ID_BT_Q
ID_BT_X = _ama.ID_BT_X
ID_BT_BB_G = _ama.ID_BT_BB_G
ID_BT_PLAN_CA = _ama.ID_BT_PLAN_CA
ID_BT_AB = _ama.ID_BT_AB
ID_BT_C = _ama.ID_BT_C
class MarketType(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MarketType, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MarketType, name)
    __repr__ = _swig_repr
    kNone = _ama.MarketType_kNone
    kNEEQ = _ama.MarketType_kNEEQ
    kSHFE = _ama.MarketType_kSHFE
    kCFFEX = _ama.MarketType_kCFFEX
    kDCE = _ama.MarketType_kDCE
    kCZCE = _ama.MarketType_kCZCE
    kINE = _ama.MarketType_kINE
    kSSE = _ama.MarketType_kSSE
    kSZSE = _ama.MarketType_kSZSE
    kHKEx = _ama.MarketType_kHKEx
    kCFETS = _ama.MarketType_kCFETS
    kMax = _ama.MarketType_kMax
    def __init__(self): 
        this = _ama.new_MarketType()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MarketType
    __del__ = lambda self : None;
MarketType_swigregister = _ama.MarketType_swigregister
MarketType_swigregister(MarketType)

class OrderBookType(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, OrderBookType, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, OrderBookType, name)
    __repr__ = _swig_repr
    kNone = _ama.OrderBookType_kNone
    kLocalOrderBook = _ama.OrderBookType_kLocalOrderBook
    kServerOrderBook = _ama.OrderBookType_kServerOrderBook
    def __init__(self): 
        this = _ama.new_OrderBookType()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_OrderBookType
    __del__ = lambda self : None;
OrderBookType_swigregister = _ama.OrderBookType_swigregister
OrderBookType_swigregister(OrderBookType)

class VarietyCategory(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, VarietyCategory, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, VarietyCategory, name)
    __repr__ = _swig_repr
    kNone = _ama.VarietyCategory_kNone
    kStock = _ama.VarietyCategory_kStock
    kFund = _ama.VarietyCategory_kFund
    kBond = _ama.VarietyCategory_kBond
    kOption = _ama.VarietyCategory_kOption
    kIndex = _ama.VarietyCategory_kIndex
    kHKT = _ama.VarietyCategory_kHKT
    kFutureOption = _ama.VarietyCategory_kFutureOption
    kCFETSRMB = _ama.VarietyCategory_kCFETSRMB
    kHKEx = _ama.VarietyCategory_kHKEx
    kOthers = _ama.VarietyCategory_kOthers
    def __init__(self): 
        this = _ama.new_VarietyCategory()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_VarietyCategory
    __del__ = lambda self : None;
VarietyCategory_swigregister = _ama.VarietyCategory_swigregister
VarietyCategory_swigregister(VarietyCategory)

class LogLevel(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, LogLevel, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, LogLevel, name)
    __repr__ = _swig_repr
    kTrace = _ama.LogLevel_kTrace
    kDebug = _ama.LogLevel_kDebug
    kInfo = _ama.LogLevel_kInfo
    kWarn = _ama.LogLevel_kWarn
    kError = _ama.LogLevel_kError
    kFatal = _ama.LogLevel_kFatal
    def __init__(self): 
        this = _ama.new_LogLevel()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_LogLevel
    __del__ = lambda self : None;
LogLevel_swigregister = _ama.LogLevel_swigregister
LogLevel_swigregister(LogLevel)

class ErrorCode(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ErrorCode, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ErrorCode, name)
    __repr__ = _swig_repr
    kFailure = _ama.ErrorCode_kFailure
    kInited = _ama.ErrorCode_kInited
    kUnInited = _ama.ErrorCode_kUnInited
    kNullSpi = _ama.ErrorCode_kNullSpi
    kParamIllegal = _ama.ErrorCode_kParamIllegal
    kSuccess = _ama.ErrorCode_kSuccess
    def __init__(self): 
        this = _ama.new_ErrorCode()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_ErrorCode
    __del__ = lambda self : None;
ErrorCode_swigregister = _ama.ErrorCode_swigregister
ErrorCode_swigregister(ErrorCode)

class ConstField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ConstField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ConstField, name)
    __repr__ = _swig_repr
    kIPMaxLen = _ama.ConstField_kIPMaxLen
    kUsernameLen = _ama.ConstField_kUsernameLen
    kUMSItemLen = _ama.ConstField_kUMSItemLen
    kChannelExternCfgLen = _ama.ConstField_kChannelExternCfgLen
    kPasswordLen = _ama.ConstField_kPasswordLen
    kSecurityCodeLen = _ama.ConstField_kSecurityCodeLen
    kFutureSecurityCodeLen = _ama.ConstField_kFutureSecurityCodeLen
    kSecurityNameLen = _ama.ConstField_kSecurityNameLen
    kPositionLevelLen = _ama.ConstField_kPositionLevelLen
    kPathLen = _ama.ConstField_kPathLen
    kConfirmIdLen = _ama.ConstField_kConfirmIdLen
    kContactorLen = _ama.ConstField_kContactorLen
    kContactInfoLen = _ama.ConstField_kContactInfoLen
    kTradingPhaseCodeLen = _ama.ConstField_kTradingPhaseCodeLen
    kContractIDLen = _ama.ConstField_kContractIDLen
    kContractSymbolLen = _ama.ConstField_kContractSymbolLen
    kUnderlyingTypeLen = _ama.ConstField_kUnderlyingTypeLen
    kSecurityStatusFlagLen = _ama.ConstField_kSecurityStatusFlagLen
    kExChangeInstIDLen = _ama.ConstField_kExChangeInstIDLen
    kMaxMarketType = _ama.ConstField_kMaxMarketType
    kTradingStatusLen = _ama.ConstField_kTradingStatusLen
    kSecurityStatusLen = _ama.ConstField_kSecurityStatusLen
    kMDStreamIDMaxLen = _ama.ConstField_kMDStreamIDMaxLen
    kTypesLen = _ama.ConstField_kTypesLen
    kDateLen = _ama.ConstField_kDateLen
    kTimeLen = _ama.ConstField_kTimeLen
    kSecurityAbbreviationLen = _ama.ConstField_kSecurityAbbreviationLen
    kSymbolLen = _ama.ConstField_kSymbolLen
    kMaxTypesLen = _ama.ConstField_kMaxTypesLen
    kMDStreamIDLen = _ama.ConstField_kMDStreamIDLen
    kUnitName = _ama.ConstField_kUnitName
    kSubTradingPhaseLen = _ama.ConstField_kSubTradingPhaseLen
    kQuoteIDLen = _ama.ConstField_kQuoteIDLen
    kMemberIDLen = _ama.ConstField_kMemberIDLen
    kInvestorTypeLen = _ama.ConstField_kInvestorTypeLen
    kInvestorIDLen = _ama.ConstField_kInvestorIDLen
    kInvestorNameLen = _ama.ConstField_kInvestorNameLen
    kTraderCodeLen = _ama.ConstField_kTraderCodeLen
    kSecondaryOrderIDLen = _ama.ConstField_kSecondaryOrderIDLen
    kCodeTableSecurityStatusMaxLen = _ama.ConstField_kCodeTableSecurityStatusMaxLen
    KSecurityMarketLen = _ama.ConstField_KSecurityMarketLen
    kSymbolETFLen = _ama.ConstField_kSymbolETFLen
    kManagmentETFLen = _ama.ConstField_kManagmentETFLen
    KUnderlyingSecurityIDSource = _ama.ConstField_KUnderlyingSecurityIDSource
    KUnderlyingSecurityID = _ama.ConstField_KUnderlyingSecurityID
    KReserved = _ama.ConstField_KReserved
    AllCashAmount = _ama.ConstField_AllCashAmount
    AllCashAremiumRate = _ama.ConstField_AllCashAremiumRate
    AllCashDiscountRate = _ama.ConstField_AllCashDiscountRate
    DefaultMaxOBSubNum = _ama.ConstField_DefaultMaxOBSubNum
    DefaultMaxOBOrderQueueSize = _ama.ConstField_DefaultMaxOBOrderQueueSize
    DefaultMaxOBEntrySize = _ama.ConstField_DefaultMaxOBEntrySize
    DefaultMaxOBDeliverIntervalMs = _ama.ConstField_DefaultMaxOBDeliverIntervalMs
    RegularShare = _ama.ConstField_RegularShare
    kCFETSSecurityCodeLen = _ama.ConstField_kCFETSSecurityCodeLen
    kExecIDLen = _ama.ConstField_kExecIDLen
    kSecurityGroupLen = _ama.ConstField_kSecurityGroupLen
    kBenchmarkCurveNameLen = _ama.ConstField_kBenchmarkCurveNameLen
    kUnderlyingSecurityCodeLen = _ama.ConstField_kUnderlyingSecurityCodeLen
    kUnderlyingSymbolLen = _ama.ConstField_kUnderlyingSymbolLen
    kTradeLimitDaysLen = _ama.ConstField_kTradeLimitDaysLen
    kMsgTypeLen = _ama.ConstField_kMsgTypeLen
    kTransactionMethodLen = _ama.ConstField_kTransactionMethodLen
    kMarketIndicatorLen = _ama.ConstField_kMarketIndicatorLen
    kSettlTypeLen = _ama.ConstField_kSettlTypeLen
    kExecTypeLen = _ama.ConstField_kExecTypeLen
    kSecurityTypeLen = _ama.ConstField_kSecurityTypeLen
    kSettlCurrencyLen = _ama.ConstField_kSettlCurrencyLen
    kPartyIDLen = _ama.ConstField_kPartyIDLen
    kMatchTypeLen = _ama.ConstField_kMatchTypeLen
    kPositionLevel6 = _ama.ConstField_kPositionLevel6
    kDireciveLevelLen = _ama.ConstField_kDireciveLevelLen
    kQuoteEntryIDLen = _ama.ConstField_kQuoteEntryIDLen
    kAccountSubjectTypeLen = _ama.ConstField_kAccountSubjectTypeLen
    kAccountIDLen = _ama.ConstField_kAccountIDLen
    kTraderIDLen = _ama.ConstField_kTraderIDLen
    kDescLen = _ama.ConstField_kDescLen
    kSymLen = _ama.ConstField_kSymLen
    kIDLen = _ama.ConstField_kIDLen
    kRDISecurityCodeLen = _ama.ConstField_kRDISecurityCodeLen
    kSecuritTypeCodeLen = _ama.ConstField_kSecuritTypeCodeLen
    kTermToMaturityStringLen = _ama.ConstField_kTermToMaturityStringLen
    kTermToMaturityLen = _ama.ConstField_kTermToMaturityLen
    kIssuerCodeLen = _ama.ConstField_kIssuerCodeLen
    kCreditRatingAgencyLen = _ama.ConstField_kCreditRatingAgencyLen
    kCrdRtgLen = _ama.ConstField_kCrdRtgLen
    kIssrLen = _ama.ConstField_kIssrLen
    kEvntGrpLen = _ama.ConstField_kEvntGrpLen
    kCcyLen = _ama.ConstField_kCcyLen
    kSecTypLen = _ama.ConstField_kSecTypLen
    kUndlyLen = _ama.ConstField_kUndlyLen
    kApplicableTrdgModelLen = _ama.ConstField_kApplicableTrdgModelLen
    kDataLen = _ama.ConstField_kDataLen
    kDetailLen = _ama.ConstField_kDetailLen
    kBrokerNumLen = _ama.ConstField_kBrokerNumLen
    def __init__(self): 
        this = _ama.new_ConstField()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_ConstField
    __del__ = lambda self : None;
ConstField_swigregister = _ama.ConstField_swigregister
ConstField_swigregister(ConstField)

class HighAvailableMode(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, HighAvailableMode, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, HighAvailableMode, name)
    __repr__ = _swig_repr
    kMasterSlaveA = _ama.HighAvailableMode_kMasterSlaveA
    kMasterSlaveB = _ama.HighAvailableMode_kMasterSlaveB
    kRegularDataFilter = _ama.HighAvailableMode_kRegularDataFilter
    def __init__(self): 
        this = _ama.new_HighAvailableMode()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_HighAvailableMode
    __del__ = lambda self : None;
HighAvailableMode_swigregister = _ama.HighAvailableMode_swigregister
HighAvailableMode_swigregister(HighAvailableMode)

class ChannelMode(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ChannelMode, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ChannelMode, name)
    __repr__ = _swig_repr
    kRDMA = _ama.ChannelMode_kRDMA
    kEXA = _ama.ChannelMode_kEXA
    kAMI = _ama.ChannelMode_kAMI
    kTCP = _ama.ChannelMode_kTCP
    kPCAP = _ama.ChannelMode_kPCAP
    kMDDP = _ama.ChannelMode_kMDDP
    kFPGA = _ama.ChannelMode_kFPGA
    def __init__(self): 
        this = _ama.new_ChannelMode()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_ChannelMode
    __del__ = lambda self : None;
ChannelMode_swigregister = _ama.ChannelMode_swigregister
ChannelMode_swigregister(ChannelMode)

class SubscribeType(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SubscribeType, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SubscribeType, name)
    __repr__ = _swig_repr
    kSet = _ama.SubscribeType_kSet
    kAdd = _ama.SubscribeType_kAdd
    kDel = _ama.SubscribeType_kDel
    kCancelAll = _ama.SubscribeType_kCancelAll
    def __init__(self): 
        this = _ama.new_SubscribeType()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_SubscribeType
    __del__ = lambda self : None;
SubscribeType_swigregister = _ama.SubscribeType_swigregister
SubscribeType_swigregister(SubscribeType)

class SubscribeDataType(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SubscribeDataType, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SubscribeDataType, name)
    __repr__ = _swig_repr
    kNone = _ama.SubscribeDataType_kNone
    kSnapshot = _ama.SubscribeDataType_kSnapshot
    kTickExecution = _ama.SubscribeDataType_kTickExecution
    kTickOrder = _ama.SubscribeDataType_kTickOrder
    kOrderQueue = _ama.SubscribeDataType_kOrderQueue
    kIndexSnapshot = _ama.SubscribeDataType_kIndexSnapshot
    kFutureSnapshot = _ama.SubscribeDataType_kFutureSnapshot
    kOptionSnapshot = _ama.SubscribeDataType_kOptionSnapshot
    kHKTSnapshot = _ama.SubscribeDataType_kHKTSnapshot
    kAfterHourFixedPriceSnapshot = _ama.SubscribeDataType_kAfterHourFixedPriceSnapshot
    kAfterHourFixedPriceTickExecution = _ama.SubscribeDataType_kAfterHourFixedPriceTickExecution
    kCSIIndexSnapshot = _ama.SubscribeDataType_kCSIIndexSnapshot
    kNEEQSnapshot = _ama.SubscribeDataType_kNEEQSnapshot
    kFundExpertSnapshot = _ama.SubscribeDataType_kFundExpertSnapshot
    kCFETSSnapshot = _ama.SubscribeDataType_kCFETSSnapshot
    kCFETSTickExecution = _ama.SubscribeDataType_kCFETSTickExecution
    kHKExSnapshot = _ama.SubscribeDataType_kHKExSnapshot
    kHKExTickExecution = _ama.SubscribeDataType_kHKExTickExecution
    kCFETSPrivateMarket = _ama.SubscribeDataType_kCFETSPrivateMarket
    def __init__(self): 
        this = _ama.new_SubscribeDataType()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_SubscribeDataType
    __del__ = lambda self : None;
SubscribeDataType_swigregister = _ama.SubscribeDataType_swigregister
SubscribeDataType_swigregister(SubscribeDataType)

class SubscribeSecuDataType(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SubscribeSecuDataType, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SubscribeSecuDataType, name)
    __repr__ = _swig_repr
    kNone = _ama.SubscribeSecuDataType_kNone
    kSnapshot = _ama.SubscribeSecuDataType_kSnapshot
    kTickExecution = _ama.SubscribeSecuDataType_kTickExecution
    kTickOrder = _ama.SubscribeSecuDataType_kTickOrder
    kOrderQueue = _ama.SubscribeSecuDataType_kOrderQueue
    def __init__(self): 
        this = _ama.new_SubscribeSecuDataType()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_SubscribeSecuDataType
    __del__ = lambda self : None;
SubscribeSecuDataType_swigregister = _ama.SubscribeSecuDataType_swigregister
SubscribeSecuDataType_swigregister(SubscribeSecuDataType)

class SubscribeCategoryType(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SubscribeCategoryType, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SubscribeCategoryType, name)
    __repr__ = _swig_repr
    kNone = _ama.SubscribeCategoryType_kNone
    kStock = _ama.SubscribeCategoryType_kStock
    kFund = _ama.SubscribeCategoryType_kFund
    kBond = _ama.SubscribeCategoryType_kBond
    kIndex = _ama.SubscribeCategoryType_kIndex
    kHKT = _ama.SubscribeCategoryType_kHKT
    kOption = _ama.SubscribeCategoryType_kOption
    kFutureOption = _ama.SubscribeCategoryType_kFutureOption
    kCFETSRMB = _ama.SubscribeCategoryType_kCFETSRMB
    kHKEx = _ama.SubscribeCategoryType_kHKEx
    kOthers = _ama.SubscribeCategoryType_kOthers
    def __init__(self): 
        this = _ama.new_SubscribeCategoryType()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_SubscribeCategoryType
    __del__ = lambda self : None;
SubscribeCategoryType_swigregister = _ama.SubscribeCategoryType_swigregister
SubscribeCategoryType_swigregister(SubscribeCategoryType)

class SubscribeDerivedDataType(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SubscribeDerivedDataType, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SubscribeDerivedDataType, name)
    __repr__ = _swig_repr
    kOrderBook = _ama.SubscribeDerivedDataType_kOrderBook
    kOrderBookSnapshot = _ama.SubscribeDerivedDataType_kOrderBookSnapshot
    kIOPVSnapshot = _ama.SubscribeDerivedDataType_kIOPVSnapshot
    def __init__(self): 
        this = _ama.new_SubscribeDerivedDataType()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_SubscribeDerivedDataType
    __del__ = lambda self : None;
SubscribeDerivedDataType_swigregister = _ama.SubscribeDerivedDataType_swigregister
SubscribeDerivedDataType_swigregister(SubscribeDerivedDataType)

class SubscribeOrderBookDataType(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SubscribeOrderBookDataType, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SubscribeOrderBookDataType, name)
    __repr__ = _swig_repr
    kNone = _ama.SubscribeOrderBookDataType_kNone
    kOrderBook = _ama.SubscribeOrderBookDataType_kOrderBook
    kOrderBookSnapshot = _ama.SubscribeOrderBookDataType_kOrderBookSnapshot
    def __init__(self): 
        this = _ama.new_SubscribeOrderBookDataType()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_SubscribeOrderBookDataType
    __del__ = lambda self : None;
SubscribeOrderBookDataType_swigregister = _ama.SubscribeOrderBookDataType_swigregister
SubscribeOrderBookDataType_swigregister(SubscribeOrderBookDataType)

class EventLevel(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, EventLevel, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, EventLevel, name)
    __repr__ = _swig_repr
    kInfo = _ama.EventLevel_kInfo
    kWarn = _ama.EventLevel_kWarn
    kError = _ama.EventLevel_kError
    def __init__(self): 
        this = _ama.new_EventLevel()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_EventLevel
    __del__ = lambda self : None;
EventLevel_swigregister = _ama.EventLevel_swigregister
EventLevel_swigregister(EventLevel)

class TradingPhaseCode(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, TradingPhaseCode, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, TradingPhaseCode, name)
    __repr__ = _swig_repr
    kStart = _ama.TradingPhaseCode_kStart
    kOpenAuction915 = _ama.TradingPhaseCode_kOpenAuction915
    kOpenAuction920 = _ama.TradingPhaseCode_kOpenAuction920
    kOpenAuction925 = _ama.TradingPhaseCode_kOpenAuction925
    kContTrading = _ama.TradingPhaseCode_kContTrading
    kLunchBreak = _ama.TradingPhaseCode_kLunchBreak
    kCloseAuction = _ama.TradingPhaseCode_kCloseAuction
    kEndOfTrade = _ama.TradingPhaseCode_kEndOfTrade
    kVolatility = _ama.TradingPhaseCode_kVolatility
    kHalt = _ama.TradingPhaseCode_kHalt
    kOther = _ama.TradingPhaseCode_kOther
    def __init__(self): 
        this = _ama.new_TradingPhaseCode()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_TradingPhaseCode
    __del__ = lambda self : None;
TradingPhaseCode_swigregister = _ama.TradingPhaseCode_swigregister
TradingPhaseCode_swigregister(TradingPhaseCode)

class EventCode(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, EventCode, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, EventCode, name)
    __repr__ = _swig_repr
    kUMSConnectSuccess = _ama.EventCode_kUMSConnectSuccess
    kUMSConnectFailed = _ama.EventCode_kUMSConnectFailed
    kUMSLogonSuccess = _ama.EventCode_kUMSLogonSuccess
    kUMSLogonFailed = _ama.EventCode_kUMSLogonFailed
    kUMSHeartbeatTimeout = _ama.EventCode_kUMSHeartbeatTimeout
    kChannelRDMAInitSuccess = _ama.EventCode_kChannelRDMAInitSuccess
    kChannelRDMAInitFailed = _ama.EventCode_kChannelRDMAInitFailed
    kChannelEXAInitSuccess = _ama.EventCode_kChannelEXAInitSuccess
    kChannelEXAInitFailed = _ama.EventCode_kChannelEXAInitFailed
    kChannelPCAPInitSuccess = _ama.EventCode_kChannelPCAPInitSuccess
    kChannelPCAPInitFailed = _ama.EventCode_kChannelPCAPInitFailed
    kCTPDASStreamStart = _ama.EventCode_kCTPDASStreamStart
    kCTPDASStreamFinished = _ama.EventCode_kCTPDASStreamFinished
    kSzseBinaryDASStreamStart = _ama.EventCode_kSzseBinaryDASStreamStart
    kSzseBinaryDASStreamFinished = _ama.EventCode_kSzseBinaryDASStreamFinished
    kSseLDDSDASStreamStart = _ama.EventCode_kSseLDDSDASStreamStart
    kSseLDDSDASStreamFinished = _ama.EventCode_kSseLDDSDASStreamFinished
    kChannelAMIInitSuccess = _ama.EventCode_kChannelAMIInitSuccess
    kChannelAMIInitFailed = _ama.EventCode_kChannelAMIInitFailed
    kChannelTCPInitSuccess = _ama.EventCode_kChannelTCPInitSuccess
    kChannelTCPInitFailed = _ama.EventCode_kChannelTCPInitFailed
    kChannelTCPConnectSuccess = _ama.EventCode_kChannelTCPConnectSuccess
    kChannelTCPConnectFailed = _ama.EventCode_kChannelTCPConnectFailed
    kChannelTCPLogonSuccess = _ama.EventCode_kChannelTCPLogonSuccess
    kChannelTCPLogonFailed = _ama.EventCode_kChannelTCPLogonFailed
    kChannelTCPSessionClosed = _ama.EventCode_kChannelTCPSessionClosed
    kChannelTCPHeartbeatTimeout = _ama.EventCode_kChannelTCPHeartbeatTimeout
    kChannelTCPMarketDataDegrade = _ama.EventCode_kChannelTCPMarketDataDegrade
    kChannelTCPMarketDataUpgrade = _ama.EventCode_kChannelTCPMarketDataUpgrade
    kSourceMasterSlaveChanged = _ama.EventCode_kSourceMasterSlaveChanged
    kSFSEngineInitSuccess = _ama.EventCode_kSFSEngineInitSuccess
    kSzseOrderBookRejoinSuccess = _ama.EventCode_kSzseOrderBookRejoinSuccess
    kSzseOrderBookRejoinFailed = _ama.EventCode_kSzseOrderBookRejoinFailed
    kSseOrderBookRejoinSuccess = _ama.EventCode_kSseOrderBookRejoinSuccess
    kSseOrderBookRejoinFailed = _ama.EventCode_kSseOrderBookRejoinFailed
    kOrderBookRejonConnectFailed = _ama.EventCode_kOrderBookRejonConnectFailed
    kIncompleteData = _ama.EventCode_kIncompleteData
    kOrderBookLogonSuccess = _ama.EventCode_kOrderBookLogonSuccess
    kOrderBookLogonFailed = _ama.EventCode_kOrderBookLogonFailed
    kDerivedDataLogonSuccess = _ama.EventCode_kDerivedDataLogonSuccess
    kDerivedDataLogonFailed = _ama.EventCode_kDerivedDataLogonFailed
    kChannelFPGAInitSuccess = _ama.EventCode_kChannelFPGAInitSuccess
    kChannelFPGAInitFailed = _ama.EventCode_kChannelFPGAInitFailed
    def __init__(self): 
        this = _ama.new_EventCode()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_EventCode
    __del__ = lambda self : None;
EventCode_swigregister = _ama.EventCode_swigregister
EventCode_swigregister(EventCode)

class UMSItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, UMSItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, UMSItem, name)
    __repr__ = _swig_repr
    __swig_setmethods__["local_ip"] = _ama.UMSItem_local_ip_set
    __swig_getmethods__["local_ip"] = _ama.UMSItem_local_ip_get
    if _newclass:local_ip = _swig_property(_ama.UMSItem_local_ip_get, _ama.UMSItem_local_ip_set)
    __swig_setmethods__["server_ip"] = _ama.UMSItem_server_ip_set
    __swig_getmethods__["server_ip"] = _ama.UMSItem_server_ip_get
    if _newclass:server_ip = _swig_property(_ama.UMSItem_server_ip_get, _ama.UMSItem_server_ip_set)
    __swig_setmethods__["server_port"] = _ama.UMSItem_server_port_set
    __swig_getmethods__["server_port"] = _ama.UMSItem_server_port_get
    if _newclass:server_port = _swig_property(_ama.UMSItem_server_port_get, _ama.UMSItem_server_port_set)
    def __init__(self): 
        this = _ama.new_UMSItem()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_UMSItem
    __del__ = lambda self : None;
UMSItem_swigregister = _ama.UMSItem_swigregister
UMSItem_swigregister(UMSItem)

class Cfg(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Cfg, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Cfg, name)
    __repr__ = _swig_repr
    __swig_setmethods__["channel_mode"] = _ama.Cfg_channel_mode_set
    __swig_getmethods__["channel_mode"] = _ama.Cfg_channel_mode_get
    if _newclass:channel_mode = _swig_property(_ama.Cfg_channel_mode_get, _ama.Cfg_channel_mode_set)
    __swig_setmethods__["ha_mode"] = _ama.Cfg_ha_mode_set
    __swig_getmethods__["ha_mode"] = _ama.Cfg_ha_mode_get
    if _newclass:ha_mode = _swig_property(_ama.Cfg_ha_mode_get, _ama.Cfg_ha_mode_set)
    __swig_setmethods__["min_log_level"] = _ama.Cfg_min_log_level_set
    __swig_getmethods__["min_log_level"] = _ama.Cfg_min_log_level_get
    if _newclass:min_log_level = _swig_property(_ama.Cfg_min_log_level_get, _ama.Cfg_min_log_level_set)
    __swig_setmethods__["is_output_mon_data"] = _ama.Cfg_is_output_mon_data_set
    __swig_getmethods__["is_output_mon_data"] = _ama.Cfg_is_output_mon_data_get
    if _newclass:is_output_mon_data = _swig_property(_ama.Cfg_is_output_mon_data_get, _ama.Cfg_is_output_mon_data_set)
    __swig_setmethods__["is_thread_safe"] = _ama.Cfg_is_thread_safe_set
    __swig_getmethods__["is_thread_safe"] = _ama.Cfg_is_thread_safe_get
    if _newclass:is_thread_safe = _swig_property(_ama.Cfg_is_thread_safe_get, _ama.Cfg_is_thread_safe_set)
    __swig_setmethods__["keep_order"] = _ama.Cfg_keep_order_set
    __swig_getmethods__["keep_order"] = _ama.Cfg_keep_order_get
    if _newclass:keep_order = _swig_property(_ama.Cfg_keep_order_get, _ama.Cfg_keep_order_set)
    __swig_setmethods__["keep_order_timeout_ms"] = _ama.Cfg_keep_order_timeout_ms_set
    __swig_getmethods__["keep_order_timeout_ms"] = _ama.Cfg_keep_order_timeout_ms_get
    if _newclass:keep_order_timeout_ms = _swig_property(_ama.Cfg_keep_order_timeout_ms_get, _ama.Cfg_keep_order_timeout_ms_set)
    __swig_setmethods__["is_subscribe_full"] = _ama.Cfg_is_subscribe_full_set
    __swig_getmethods__["is_subscribe_full"] = _ama.Cfg_is_subscribe_full_get
    if _newclass:is_subscribe_full = _swig_property(_ama.Cfg_is_subscribe_full_get, _ama.Cfg_is_subscribe_full_set)
    __swig_setmethods__["ums_servers"] = _ama.Cfg_ums_servers_set
    __swig_getmethods__["ums_servers"] = _ama.Cfg_ums_servers_get
    if _newclass:ums_servers = _swig_property(_ama.Cfg_ums_servers_get, _ama.Cfg_ums_servers_set)
    __swig_setmethods__["ums_server_cnt"] = _ama.Cfg_ums_server_cnt_set
    __swig_getmethods__["ums_server_cnt"] = _ama.Cfg_ums_server_cnt_get
    if _newclass:ums_server_cnt = _swig_property(_ama.Cfg_ums_server_cnt_get, _ama.Cfg_ums_server_cnt_set)
    __swig_setmethods__["username"] = _ama.Cfg_username_set
    __swig_getmethods__["username"] = _ama.Cfg_username_get
    if _newclass:username = _swig_property(_ama.Cfg_username_get, _ama.Cfg_username_set)
    __swig_setmethods__["password"] = _ama.Cfg_password_set
    __swig_getmethods__["password"] = _ama.Cfg_password_get
    if _newclass:password = _swig_property(_ama.Cfg_password_get, _ama.Cfg_password_set)
    __swig_setmethods__["tcp_compress_mode"] = _ama.Cfg_tcp_compress_mode_set
    __swig_getmethods__["tcp_compress_mode"] = _ama.Cfg_tcp_compress_mode_get
    if _newclass:tcp_compress_mode = _swig_property(_ama.Cfg_tcp_compress_mode_get, _ama.Cfg_tcp_compress_mode_set)
    __swig_setmethods__["enable_order_book"] = _ama.Cfg_enable_order_book_set
    __swig_getmethods__["enable_order_book"] = _ama.Cfg_enable_order_book_get
    if _newclass:enable_order_book = _swig_property(_ama.Cfg_enable_order_book_get, _ama.Cfg_enable_order_book_set)
    __swig_setmethods__["entry_size"] = _ama.Cfg_entry_size_set
    __swig_getmethods__["entry_size"] = _ama.Cfg_entry_size_get
    if _newclass:entry_size = _swig_property(_ama.Cfg_entry_size_get, _ama.Cfg_entry_size_set)
    __swig_setmethods__["thread_num"] = _ama.Cfg_thread_num_set
    __swig_getmethods__["thread_num"] = _ama.Cfg_thread_num_get
    if _newclass:thread_num = _swig_property(_ama.Cfg_thread_num_get, _ama.Cfg_thread_num_set)
    __swig_setmethods__["order_queue_size"] = _ama.Cfg_order_queue_size_set
    __swig_getmethods__["order_queue_size"] = _ama.Cfg_order_queue_size_get
    if _newclass:order_queue_size = _swig_property(_ama.Cfg_order_queue_size_get, _ama.Cfg_order_queue_size_set)
    __swig_setmethods__["order_book_deliver_interval_microsecond"] = _ama.Cfg_order_book_deliver_interval_microsecond_set
    __swig_getmethods__["order_book_deliver_interval_microsecond"] = _ama.Cfg_order_book_deliver_interval_microsecond_get
    if _newclass:order_book_deliver_interval_microsecond = _swig_property(_ama.Cfg_order_book_deliver_interval_microsecond_get, _ama.Cfg_order_book_deliver_interval_microsecond_set)
    def __init__(self): 
        this = _ama.new_Cfg()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_Cfg
    __del__ = lambda self : None;
Cfg_swigregister = _ama.Cfg_swigregister
Cfg_swigregister(Cfg)

class SubscribeItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SubscribeItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SubscribeItem, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market"] = _ama.SubscribeItem_market_set
    __swig_getmethods__["market"] = _ama.SubscribeItem_market_get
    if _newclass:market = _swig_property(_ama.SubscribeItem_market_get, _ama.SubscribeItem_market_set)
    __swig_setmethods__["flag"] = _ama.SubscribeItem_flag_set
    __swig_getmethods__["flag"] = _ama.SubscribeItem_flag_get
    if _newclass:flag = _swig_property(_ama.SubscribeItem_flag_get, _ama.SubscribeItem_flag_set)
    __swig_setmethods__["security_code"] = _ama.SubscribeItem_security_code_set
    __swig_getmethods__["security_code"] = _ama.SubscribeItem_security_code_get
    if _newclass:security_code = _swig_property(_ama.SubscribeItem_security_code_get, _ama.SubscribeItem_security_code_set)
    def __init__(self): 
        this = _ama.new_SubscribeItem()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_SubscribeItem
    __del__ = lambda self : None;
SubscribeItem_swigregister = _ama.SubscribeItem_swigregister
SubscribeItem_swigregister(SubscribeItem)

class SubCodeTableItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SubCodeTableItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SubCodeTableItem, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market"] = _ama.SubCodeTableItem_market_set
    __swig_getmethods__["market"] = _ama.SubCodeTableItem_market_get
    if _newclass:market = _swig_property(_ama.SubCodeTableItem_market_get, _ama.SubCodeTableItem_market_set)
    __swig_setmethods__["security_code"] = _ama.SubCodeTableItem_security_code_set
    __swig_getmethods__["security_code"] = _ama.SubCodeTableItem_security_code_get
    if _newclass:security_code = _swig_property(_ama.SubCodeTableItem_security_code_get, _ama.SubCodeTableItem_security_code_set)
    def __init__(self): 
        this = _ama.new_SubCodeTableItem()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_SubCodeTableItem
    __del__ = lambda self : None;
SubCodeTableItem_swigregister = _ama.SubCodeTableItem_swigregister
SubCodeTableItem_swigregister(SubCodeTableItem)

class ETFItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ETFItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ETFItem, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market"] = _ama.ETFItem_market_set
    __swig_getmethods__["market"] = _ama.ETFItem_market_get
    if _newclass:market = _swig_property(_ama.ETFItem_market_get, _ama.ETFItem_market_set)
    __swig_setmethods__["security_code"] = _ama.ETFItem_security_code_set
    __swig_getmethods__["security_code"] = _ama.ETFItem_security_code_get
    if _newclass:security_code = _swig_property(_ama.ETFItem_security_code_get, _ama.ETFItem_security_code_set)
    def __init__(self): 
        this = _ama.new_ETFItem()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_ETFItem
    __del__ = lambda self : None;
ETFItem_swigregister = _ama.ETFItem_swigregister
ETFItem_swigregister(ETFItem)

class SubscribeCategoryItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SubscribeCategoryItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SubscribeCategoryItem, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market"] = _ama.SubscribeCategoryItem_market_set
    __swig_getmethods__["market"] = _ama.SubscribeCategoryItem_market_get
    if _newclass:market = _swig_property(_ama.SubscribeCategoryItem_market_get, _ama.SubscribeCategoryItem_market_set)
    __swig_setmethods__["data_type"] = _ama.SubscribeCategoryItem_data_type_set
    __swig_getmethods__["data_type"] = _ama.SubscribeCategoryItem_data_type_get
    if _newclass:data_type = _swig_property(_ama.SubscribeCategoryItem_data_type_get, _ama.SubscribeCategoryItem_data_type_set)
    __swig_setmethods__["category_type"] = _ama.SubscribeCategoryItem_category_type_set
    __swig_getmethods__["category_type"] = _ama.SubscribeCategoryItem_category_type_get
    if _newclass:category_type = _swig_property(_ama.SubscribeCategoryItem_category_type_get, _ama.SubscribeCategoryItem_category_type_set)
    __swig_setmethods__["security_code"] = _ama.SubscribeCategoryItem_security_code_set
    __swig_getmethods__["security_code"] = _ama.SubscribeCategoryItem_security_code_get
    if _newclass:security_code = _swig_property(_ama.SubscribeCategoryItem_security_code_get, _ama.SubscribeCategoryItem_security_code_set)
    def __init__(self): 
        this = _ama.new_SubscribeCategoryItem()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_SubscribeCategoryItem
    __del__ = lambda self : None;
SubscribeCategoryItem_swigregister = _ama.SubscribeCategoryItem_swigregister
SubscribeCategoryItem_swigregister(SubscribeCategoryItem)

class SubscribeOrderBookItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SubscribeOrderBookItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SubscribeOrderBookItem, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market"] = _ama.SubscribeOrderBookItem_market_set
    __swig_getmethods__["market"] = _ama.SubscribeOrderBookItem_market_get
    if _newclass:market = _swig_property(_ama.SubscribeOrderBookItem_market_get, _ama.SubscribeOrderBookItem_market_set)
    __swig_setmethods__["flag"] = _ama.SubscribeOrderBookItem_flag_set
    __swig_getmethods__["flag"] = _ama.SubscribeOrderBookItem_flag_get
    if _newclass:flag = _swig_property(_ama.SubscribeOrderBookItem_flag_get, _ama.SubscribeOrderBookItem_flag_set)
    __swig_setmethods__["security_code"] = _ama.SubscribeOrderBookItem_security_code_set
    __swig_getmethods__["security_code"] = _ama.SubscribeOrderBookItem_security_code_get
    if _newclass:security_code = _swig_property(_ama.SubscribeOrderBookItem_security_code_get, _ama.SubscribeOrderBookItem_security_code_set)
    def __init__(self): 
        this = _ama.new_SubscribeOrderBookItem()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_SubscribeOrderBookItem
    __del__ = lambda self : None;
SubscribeOrderBookItem_swigregister = _ama.SubscribeOrderBookItem_swigregister
SubscribeOrderBookItem_swigregister(SubscribeOrderBookItem)

class SubscribeDerivedDataItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SubscribeDerivedDataItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SubscribeDerivedDataItem, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market"] = _ama.SubscribeDerivedDataItem_market_set
    __swig_getmethods__["market"] = _ama.SubscribeDerivedDataItem_market_get
    if _newclass:market = _swig_property(_ama.SubscribeDerivedDataItem_market_get, _ama.SubscribeDerivedDataItem_market_set)
    __swig_setmethods__["security_code"] = _ama.SubscribeDerivedDataItem_security_code_set
    __swig_getmethods__["security_code"] = _ama.SubscribeDerivedDataItem_security_code_get
    if _newclass:security_code = _swig_property(_ama.SubscribeDerivedDataItem_security_code_get, _ama.SubscribeDerivedDataItem_security_code_set)
    def __init__(self): 
        this = _ama.new_SubscribeDerivedDataItem()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_SubscribeDerivedDataItem
    __del__ = lambda self : None;
SubscribeDerivedDataItem_swigregister = _ama.SubscribeDerivedDataItem_swigregister
SubscribeDerivedDataItem_swigregister(SubscribeDerivedDataItem)

class CodeTableRecord(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CodeTableRecord, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CodeTableRecord, name)
    __repr__ = _swig_repr
    __swig_setmethods__["security_code"] = _ama.CodeTableRecord_security_code_set
    __swig_getmethods__["security_code"] = _ama.CodeTableRecord_security_code_get
    if _newclass:security_code = _swig_property(_ama.CodeTableRecord_security_code_get, _ama.CodeTableRecord_security_code_set)
    __swig_setmethods__["market_type"] = _ama.CodeTableRecord_market_type_set
    __swig_getmethods__["market_type"] = _ama.CodeTableRecord_market_type_get
    if _newclass:market_type = _swig_property(_ama.CodeTableRecord_market_type_get, _ama.CodeTableRecord_market_type_set)
    __swig_setmethods__["symbol"] = _ama.CodeTableRecord_symbol_set
    __swig_getmethods__["symbol"] = _ama.CodeTableRecord_symbol_get
    if _newclass:symbol = _swig_property(_ama.CodeTableRecord_symbol_get, _ama.CodeTableRecord_symbol_set)
    __swig_setmethods__["english_name"] = _ama.CodeTableRecord_english_name_set
    __swig_getmethods__["english_name"] = _ama.CodeTableRecord_english_name_get
    if _newclass:english_name = _swig_property(_ama.CodeTableRecord_english_name_get, _ama.CodeTableRecord_english_name_set)
    __swig_setmethods__["security_type"] = _ama.CodeTableRecord_security_type_set
    __swig_getmethods__["security_type"] = _ama.CodeTableRecord_security_type_get
    if _newclass:security_type = _swig_property(_ama.CodeTableRecord_security_type_get, _ama.CodeTableRecord_security_type_set)
    __swig_setmethods__["currency"] = _ama.CodeTableRecord_currency_set
    __swig_getmethods__["currency"] = _ama.CodeTableRecord_currency_get
    if _newclass:currency = _swig_property(_ama.CodeTableRecord_currency_get, _ama.CodeTableRecord_currency_set)
    __swig_setmethods__["variety_category"] = _ama.CodeTableRecord_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.CodeTableRecord_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.CodeTableRecord_variety_category_get, _ama.CodeTableRecord_variety_category_set)
    __swig_setmethods__["pre_close_price"] = _ama.CodeTableRecord_pre_close_price_set
    __swig_getmethods__["pre_close_price"] = _ama.CodeTableRecord_pre_close_price_get
    if _newclass:pre_close_price = _swig_property(_ama.CodeTableRecord_pre_close_price_get, _ama.CodeTableRecord_pre_close_price_set)
    __swig_setmethods__["close_price"] = _ama.CodeTableRecord_close_price_set
    __swig_getmethods__["close_price"] = _ama.CodeTableRecord_close_price_get
    if _newclass:close_price = _swig_property(_ama.CodeTableRecord_close_price_get, _ama.CodeTableRecord_close_price_set)
    __swig_setmethods__["underlying_security_id"] = _ama.CodeTableRecord_underlying_security_id_set
    __swig_getmethods__["underlying_security_id"] = _ama.CodeTableRecord_underlying_security_id_get
    if _newclass:underlying_security_id = _swig_property(_ama.CodeTableRecord_underlying_security_id_get, _ama.CodeTableRecord_underlying_security_id_set)
    __swig_setmethods__["contract_type"] = _ama.CodeTableRecord_contract_type_set
    __swig_getmethods__["contract_type"] = _ama.CodeTableRecord_contract_type_get
    if _newclass:contract_type = _swig_property(_ama.CodeTableRecord_contract_type_get, _ama.CodeTableRecord_contract_type_set)
    __swig_setmethods__["exercise_price"] = _ama.CodeTableRecord_exercise_price_set
    __swig_getmethods__["exercise_price"] = _ama.CodeTableRecord_exercise_price_get
    if _newclass:exercise_price = _swig_property(_ama.CodeTableRecord_exercise_price_get, _ama.CodeTableRecord_exercise_price_set)
    __swig_setmethods__["expire_date"] = _ama.CodeTableRecord_expire_date_set
    __swig_getmethods__["expire_date"] = _ama.CodeTableRecord_expire_date_get
    if _newclass:expire_date = _swig_property(_ama.CodeTableRecord_expire_date_get, _ama.CodeTableRecord_expire_date_set)
    __swig_setmethods__["high_limited"] = _ama.CodeTableRecord_high_limited_set
    __swig_getmethods__["high_limited"] = _ama.CodeTableRecord_high_limited_get
    if _newclass:high_limited = _swig_property(_ama.CodeTableRecord_high_limited_get, _ama.CodeTableRecord_high_limited_set)
    __swig_setmethods__["low_limited"] = _ama.CodeTableRecord_low_limited_set
    __swig_getmethods__["low_limited"] = _ama.CodeTableRecord_low_limited_get
    if _newclass:low_limited = _swig_property(_ama.CodeTableRecord_low_limited_get, _ama.CodeTableRecord_low_limited_set)
    __swig_setmethods__["security_status"] = _ama.CodeTableRecord_security_status_set
    __swig_getmethods__["security_status"] = _ama.CodeTableRecord_security_status_get
    if _newclass:security_status = _swig_property(_ama.CodeTableRecord_security_status_get, _ama.CodeTableRecord_security_status_set)
    __swig_setmethods__["price_tick"] = _ama.CodeTableRecord_price_tick_set
    __swig_getmethods__["price_tick"] = _ama.CodeTableRecord_price_tick_get
    if _newclass:price_tick = _swig_property(_ama.CodeTableRecord_price_tick_get, _ama.CodeTableRecord_price_tick_set)
    __swig_setmethods__["buy_qty_unit"] = _ama.CodeTableRecord_buy_qty_unit_set
    __swig_getmethods__["buy_qty_unit"] = _ama.CodeTableRecord_buy_qty_unit_get
    if _newclass:buy_qty_unit = _swig_property(_ama.CodeTableRecord_buy_qty_unit_get, _ama.CodeTableRecord_buy_qty_unit_set)
    __swig_setmethods__["sell_qty_unit"] = _ama.CodeTableRecord_sell_qty_unit_set
    __swig_getmethods__["sell_qty_unit"] = _ama.CodeTableRecord_sell_qty_unit_get
    if _newclass:sell_qty_unit = _swig_property(_ama.CodeTableRecord_sell_qty_unit_get, _ama.CodeTableRecord_sell_qty_unit_set)
    __swig_setmethods__["market_buy_qty_unit"] = _ama.CodeTableRecord_market_buy_qty_unit_set
    __swig_getmethods__["market_buy_qty_unit"] = _ama.CodeTableRecord_market_buy_qty_unit_get
    if _newclass:market_buy_qty_unit = _swig_property(_ama.CodeTableRecord_market_buy_qty_unit_get, _ama.CodeTableRecord_market_buy_qty_unit_set)
    __swig_setmethods__["market_sell_qty_unit"] = _ama.CodeTableRecord_market_sell_qty_unit_set
    __swig_getmethods__["market_sell_qty_unit"] = _ama.CodeTableRecord_market_sell_qty_unit_get
    if _newclass:market_sell_qty_unit = _swig_property(_ama.CodeTableRecord_market_sell_qty_unit_get, _ama.CodeTableRecord_market_sell_qty_unit_set)
    __swig_setmethods__["buy_qty_lower_limit"] = _ama.CodeTableRecord_buy_qty_lower_limit_set
    __swig_getmethods__["buy_qty_lower_limit"] = _ama.CodeTableRecord_buy_qty_lower_limit_get
    if _newclass:buy_qty_lower_limit = _swig_property(_ama.CodeTableRecord_buy_qty_lower_limit_get, _ama.CodeTableRecord_buy_qty_lower_limit_set)
    __swig_setmethods__["buy_qty_upper_limit"] = _ama.CodeTableRecord_buy_qty_upper_limit_set
    __swig_getmethods__["buy_qty_upper_limit"] = _ama.CodeTableRecord_buy_qty_upper_limit_get
    if _newclass:buy_qty_upper_limit = _swig_property(_ama.CodeTableRecord_buy_qty_upper_limit_get, _ama.CodeTableRecord_buy_qty_upper_limit_set)
    __swig_setmethods__["sell_qty_lower_limit"] = _ama.CodeTableRecord_sell_qty_lower_limit_set
    __swig_getmethods__["sell_qty_lower_limit"] = _ama.CodeTableRecord_sell_qty_lower_limit_get
    if _newclass:sell_qty_lower_limit = _swig_property(_ama.CodeTableRecord_sell_qty_lower_limit_get, _ama.CodeTableRecord_sell_qty_lower_limit_set)
    __swig_setmethods__["sell_qty_upper_limit"] = _ama.CodeTableRecord_sell_qty_upper_limit_set
    __swig_getmethods__["sell_qty_upper_limit"] = _ama.CodeTableRecord_sell_qty_upper_limit_get
    if _newclass:sell_qty_upper_limit = _swig_property(_ama.CodeTableRecord_sell_qty_upper_limit_get, _ama.CodeTableRecord_sell_qty_upper_limit_set)
    __swig_setmethods__["market_buy_qty_lower_limit"] = _ama.CodeTableRecord_market_buy_qty_lower_limit_set
    __swig_getmethods__["market_buy_qty_lower_limit"] = _ama.CodeTableRecord_market_buy_qty_lower_limit_get
    if _newclass:market_buy_qty_lower_limit = _swig_property(_ama.CodeTableRecord_market_buy_qty_lower_limit_get, _ama.CodeTableRecord_market_buy_qty_lower_limit_set)
    __swig_setmethods__["market_buy_qty_upper_limit"] = _ama.CodeTableRecord_market_buy_qty_upper_limit_set
    __swig_getmethods__["market_buy_qty_upper_limit"] = _ama.CodeTableRecord_market_buy_qty_upper_limit_get
    if _newclass:market_buy_qty_upper_limit = _swig_property(_ama.CodeTableRecord_market_buy_qty_upper_limit_get, _ama.CodeTableRecord_market_buy_qty_upper_limit_set)
    __swig_setmethods__["market_sell_qty_lower_limit"] = _ama.CodeTableRecord_market_sell_qty_lower_limit_set
    __swig_getmethods__["market_sell_qty_lower_limit"] = _ama.CodeTableRecord_market_sell_qty_lower_limit_get
    if _newclass:market_sell_qty_lower_limit = _swig_property(_ama.CodeTableRecord_market_sell_qty_lower_limit_get, _ama.CodeTableRecord_market_sell_qty_lower_limit_set)
    __swig_setmethods__["market_sell_qty_upper_limit"] = _ama.CodeTableRecord_market_sell_qty_upper_limit_set
    __swig_getmethods__["market_sell_qty_upper_limit"] = _ama.CodeTableRecord_market_sell_qty_upper_limit_get
    if _newclass:market_sell_qty_upper_limit = _swig_property(_ama.CodeTableRecord_market_sell_qty_upper_limit_get, _ama.CodeTableRecord_market_sell_qty_upper_limit_set)
    __swig_setmethods__["list_day"] = _ama.CodeTableRecord_list_day_set
    __swig_getmethods__["list_day"] = _ama.CodeTableRecord_list_day_get
    if _newclass:list_day = _swig_property(_ama.CodeTableRecord_list_day_get, _ama.CodeTableRecord_list_day_set)
    __swig_setmethods__["par_value"] = _ama.CodeTableRecord_par_value_set
    __swig_getmethods__["par_value"] = _ama.CodeTableRecord_par_value_get
    if _newclass:par_value = _swig_property(_ama.CodeTableRecord_par_value_get, _ama.CodeTableRecord_par_value_set)
    __swig_setmethods__["outstanding_share"] = _ama.CodeTableRecord_outstanding_share_set
    __swig_getmethods__["outstanding_share"] = _ama.CodeTableRecord_outstanding_share_get
    if _newclass:outstanding_share = _swig_property(_ama.CodeTableRecord_outstanding_share_get, _ama.CodeTableRecord_outstanding_share_set)
    __swig_setmethods__["public_float_share_quantity"] = _ama.CodeTableRecord_public_float_share_quantity_set
    __swig_getmethods__["public_float_share_quantity"] = _ama.CodeTableRecord_public_float_share_quantity_get
    if _newclass:public_float_share_quantity = _swig_property(_ama.CodeTableRecord_public_float_share_quantity_get, _ama.CodeTableRecord_public_float_share_quantity_set)
    __swig_setmethods__["contract_multiplier"] = _ama.CodeTableRecord_contract_multiplier_set
    __swig_getmethods__["contract_multiplier"] = _ama.CodeTableRecord_contract_multiplier_get
    if _newclass:contract_multiplier = _swig_property(_ama.CodeTableRecord_contract_multiplier_get, _ama.CodeTableRecord_contract_multiplier_set)
    __swig_setmethods__["regular_share"] = _ama.CodeTableRecord_regular_share_set
    __swig_getmethods__["regular_share"] = _ama.CodeTableRecord_regular_share_get
    if _newclass:regular_share = _swig_property(_ama.CodeTableRecord_regular_share_get, _ama.CodeTableRecord_regular_share_set)
    __swig_setmethods__["interest"] = _ama.CodeTableRecord_interest_set
    __swig_getmethods__["interest"] = _ama.CodeTableRecord_interest_get
    if _newclass:interest = _swig_property(_ama.CodeTableRecord_interest_get, _ama.CodeTableRecord_interest_set)
    __swig_setmethods__["coupon_rate"] = _ama.CodeTableRecord_coupon_rate_set
    __swig_getmethods__["coupon_rate"] = _ama.CodeTableRecord_coupon_rate_get
    if _newclass:coupon_rate = _swig_property(_ama.CodeTableRecord_coupon_rate_get, _ama.CodeTableRecord_coupon_rate_set)
    def __init__(self): 
        this = _ama.new_CodeTableRecord()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_CodeTableRecord
    __del__ = lambda self : None;
CodeTableRecord_swigregister = _ama.CodeTableRecord_swigregister
CodeTableRecord_swigregister(CodeTableRecord)

class CodeTableRecordList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CodeTableRecordList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CodeTableRecordList, name)
    __repr__ = _swig_repr
    __swig_setmethods__["list_nums"] = _ama.CodeTableRecordList_list_nums_set
    __swig_getmethods__["list_nums"] = _ama.CodeTableRecordList_list_nums_get
    if _newclass:list_nums = _swig_property(_ama.CodeTableRecordList_list_nums_get, _ama.CodeTableRecordList_list_nums_set)
    __swig_setmethods__["records"] = _ama.CodeTableRecordList_records_set
    __swig_getmethods__["records"] = _ama.CodeTableRecordList_records_get
    if _newclass:records = _swig_property(_ama.CodeTableRecordList_records_get, _ama.CodeTableRecordList_records_set)
    def __init__(self): 
        this = _ama.new_CodeTableRecordList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_CodeTableRecordList
    __del__ = lambda self : None;
CodeTableRecordList_swigregister = _ama.CodeTableRecordList_swigregister
CodeTableRecordList_swigregister(CodeTableRecordList)

class ConstituentStockInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ConstituentStockInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ConstituentStockInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["security_code"] = _ama.ConstituentStockInfo_security_code_set
    __swig_getmethods__["security_code"] = _ama.ConstituentStockInfo_security_code_get
    if _newclass:security_code = _swig_property(_ama.ConstituentStockInfo_security_code_get, _ama.ConstituentStockInfo_security_code_set)
    __swig_setmethods__["market_type"] = _ama.ConstituentStockInfo_market_type_set
    __swig_getmethods__["market_type"] = _ama.ConstituentStockInfo_market_type_get
    if _newclass:market_type = _swig_property(_ama.ConstituentStockInfo_market_type_get, _ama.ConstituentStockInfo_market_type_set)
    __swig_setmethods__["underlying_symbol"] = _ama.ConstituentStockInfo_underlying_symbol_set
    __swig_getmethods__["underlying_symbol"] = _ama.ConstituentStockInfo_underlying_symbol_get
    if _newclass:underlying_symbol = _swig_property(_ama.ConstituentStockInfo_underlying_symbol_get, _ama.ConstituentStockInfo_underlying_symbol_set)
    __swig_setmethods__["component_share"] = _ama.ConstituentStockInfo_component_share_set
    __swig_getmethods__["component_share"] = _ama.ConstituentStockInfo_component_share_get
    if _newclass:component_share = _swig_property(_ama.ConstituentStockInfo_component_share_get, _ama.ConstituentStockInfo_component_share_set)
    __swig_setmethods__["substitute_flag"] = _ama.ConstituentStockInfo_substitute_flag_set
    __swig_getmethods__["substitute_flag"] = _ama.ConstituentStockInfo_substitute_flag_get
    if _newclass:substitute_flag = _swig_property(_ama.ConstituentStockInfo_substitute_flag_get, _ama.ConstituentStockInfo_substitute_flag_set)
    __swig_setmethods__["premium_ratio"] = _ama.ConstituentStockInfo_premium_ratio_set
    __swig_getmethods__["premium_ratio"] = _ama.ConstituentStockInfo_premium_ratio_get
    if _newclass:premium_ratio = _swig_property(_ama.ConstituentStockInfo_premium_ratio_get, _ama.ConstituentStockInfo_premium_ratio_set)
    __swig_setmethods__["discount_ratio"] = _ama.ConstituentStockInfo_discount_ratio_set
    __swig_getmethods__["discount_ratio"] = _ama.ConstituentStockInfo_discount_ratio_get
    if _newclass:discount_ratio = _swig_property(_ama.ConstituentStockInfo_discount_ratio_get, _ama.ConstituentStockInfo_discount_ratio_set)
    __swig_setmethods__["creation_cash_substitute"] = _ama.ConstituentStockInfo_creation_cash_substitute_set
    __swig_getmethods__["creation_cash_substitute"] = _ama.ConstituentStockInfo_creation_cash_substitute_get
    if _newclass:creation_cash_substitute = _swig_property(_ama.ConstituentStockInfo_creation_cash_substitute_get, _ama.ConstituentStockInfo_creation_cash_substitute_set)
    __swig_setmethods__["redemption_cash_substitute"] = _ama.ConstituentStockInfo_redemption_cash_substitute_set
    __swig_getmethods__["redemption_cash_substitute"] = _ama.ConstituentStockInfo_redemption_cash_substitute_get
    if _newclass:redemption_cash_substitute = _swig_property(_ama.ConstituentStockInfo_redemption_cash_substitute_get, _ama.ConstituentStockInfo_redemption_cash_substitute_set)
    __swig_setmethods__["substitution_cash_amount"] = _ama.ConstituentStockInfo_substitution_cash_amount_set
    __swig_getmethods__["substitution_cash_amount"] = _ama.ConstituentStockInfo_substitution_cash_amount_get
    if _newclass:substitution_cash_amount = _swig_property(_ama.ConstituentStockInfo_substitution_cash_amount_get, _ama.ConstituentStockInfo_substitution_cash_amount_set)
    __swig_setmethods__["underlying_security_id"] = _ama.ConstituentStockInfo_underlying_security_id_set
    __swig_getmethods__["underlying_security_id"] = _ama.ConstituentStockInfo_underlying_security_id_get
    if _newclass:underlying_security_id = _swig_property(_ama.ConstituentStockInfo_underlying_security_id_get, _ama.ConstituentStockInfo_underlying_security_id_set)
    __swig_setmethods__["buy_or_sell_to_open"] = _ama.ConstituentStockInfo_buy_or_sell_to_open_set
    __swig_getmethods__["buy_or_sell_to_open"] = _ama.ConstituentStockInfo_buy_or_sell_to_open_get
    if _newclass:buy_or_sell_to_open = _swig_property(_ama.ConstituentStockInfo_buy_or_sell_to_open_get, _ama.ConstituentStockInfo_buy_or_sell_to_open_set)
    __swig_setmethods__["reserved"] = _ama.ConstituentStockInfo_reserved_set
    __swig_getmethods__["reserved"] = _ama.ConstituentStockInfo_reserved_get
    if _newclass:reserved = _swig_property(_ama.ConstituentStockInfo_reserved_get, _ama.ConstituentStockInfo_reserved_set)
    def __init__(self): 
        this = _ama.new_ConstituentStockInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_ConstituentStockInfo
    __del__ = lambda self : None;
ConstituentStockInfo_swigregister = _ama.ConstituentStockInfo_swigregister
ConstituentStockInfo_swigregister(ConstituentStockInfo)

class ETFCodeTableRecord(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ETFCodeTableRecord, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ETFCodeTableRecord, name)
    __repr__ = _swig_repr
    __swig_setmethods__["security_code"] = _ama.ETFCodeTableRecord_security_code_set
    __swig_getmethods__["security_code"] = _ama.ETFCodeTableRecord_security_code_get
    if _newclass:security_code = _swig_property(_ama.ETFCodeTableRecord_security_code_get, _ama.ETFCodeTableRecord_security_code_set)
    __swig_setmethods__["creation_redemption_unit"] = _ama.ETFCodeTableRecord_creation_redemption_unit_set
    __swig_getmethods__["creation_redemption_unit"] = _ama.ETFCodeTableRecord_creation_redemption_unit_get
    if _newclass:creation_redemption_unit = _swig_property(_ama.ETFCodeTableRecord_creation_redemption_unit_get, _ama.ETFCodeTableRecord_creation_redemption_unit_set)
    __swig_setmethods__["max_cash_ratio"] = _ama.ETFCodeTableRecord_max_cash_ratio_set
    __swig_getmethods__["max_cash_ratio"] = _ama.ETFCodeTableRecord_max_cash_ratio_get
    if _newclass:max_cash_ratio = _swig_property(_ama.ETFCodeTableRecord_max_cash_ratio_get, _ama.ETFCodeTableRecord_max_cash_ratio_set)
    __swig_setmethods__["publish"] = _ama.ETFCodeTableRecord_publish_set
    __swig_getmethods__["publish"] = _ama.ETFCodeTableRecord_publish_get
    if _newclass:publish = _swig_property(_ama.ETFCodeTableRecord_publish_get, _ama.ETFCodeTableRecord_publish_set)
    __swig_setmethods__["creation"] = _ama.ETFCodeTableRecord_creation_set
    __swig_getmethods__["creation"] = _ama.ETFCodeTableRecord_creation_get
    if _newclass:creation = _swig_property(_ama.ETFCodeTableRecord_creation_get, _ama.ETFCodeTableRecord_creation_set)
    __swig_setmethods__["redemption"] = _ama.ETFCodeTableRecord_redemption_set
    __swig_getmethods__["redemption"] = _ama.ETFCodeTableRecord_redemption_get
    if _newclass:redemption = _swig_property(_ama.ETFCodeTableRecord_redemption_get, _ama.ETFCodeTableRecord_redemption_set)
    __swig_setmethods__["creation_redemption_switch"] = _ama.ETFCodeTableRecord_creation_redemption_switch_set
    __swig_getmethods__["creation_redemption_switch"] = _ama.ETFCodeTableRecord_creation_redemption_switch_get
    if _newclass:creation_redemption_switch = _swig_property(_ama.ETFCodeTableRecord_creation_redemption_switch_get, _ama.ETFCodeTableRecord_creation_redemption_switch_set)
    __swig_setmethods__["record_num"] = _ama.ETFCodeTableRecord_record_num_set
    __swig_getmethods__["record_num"] = _ama.ETFCodeTableRecord_record_num_get
    if _newclass:record_num = _swig_property(_ama.ETFCodeTableRecord_record_num_get, _ama.ETFCodeTableRecord_record_num_set)
    __swig_setmethods__["total_record_num"] = _ama.ETFCodeTableRecord_total_record_num_set
    __swig_getmethods__["total_record_num"] = _ama.ETFCodeTableRecord_total_record_num_get
    if _newclass:total_record_num = _swig_property(_ama.ETFCodeTableRecord_total_record_num_get, _ama.ETFCodeTableRecord_total_record_num_set)
    __swig_setmethods__["estimate_cash_component"] = _ama.ETFCodeTableRecord_estimate_cash_component_set
    __swig_getmethods__["estimate_cash_component"] = _ama.ETFCodeTableRecord_estimate_cash_component_get
    if _newclass:estimate_cash_component = _swig_property(_ama.ETFCodeTableRecord_estimate_cash_component_get, _ama.ETFCodeTableRecord_estimate_cash_component_set)
    __swig_setmethods__["trading_day"] = _ama.ETFCodeTableRecord_trading_day_set
    __swig_getmethods__["trading_day"] = _ama.ETFCodeTableRecord_trading_day_get
    if _newclass:trading_day = _swig_property(_ama.ETFCodeTableRecord_trading_day_get, _ama.ETFCodeTableRecord_trading_day_set)
    __swig_setmethods__["pre_trading_day"] = _ama.ETFCodeTableRecord_pre_trading_day_set
    __swig_getmethods__["pre_trading_day"] = _ama.ETFCodeTableRecord_pre_trading_day_get
    if _newclass:pre_trading_day = _swig_property(_ama.ETFCodeTableRecord_pre_trading_day_get, _ama.ETFCodeTableRecord_pre_trading_day_set)
    __swig_setmethods__["cash_component"] = _ama.ETFCodeTableRecord_cash_component_set
    __swig_getmethods__["cash_component"] = _ama.ETFCodeTableRecord_cash_component_get
    if _newclass:cash_component = _swig_property(_ama.ETFCodeTableRecord_cash_component_get, _ama.ETFCodeTableRecord_cash_component_set)
    __swig_setmethods__["nav_per_cu"] = _ama.ETFCodeTableRecord_nav_per_cu_set
    __swig_getmethods__["nav_per_cu"] = _ama.ETFCodeTableRecord_nav_per_cu_get
    if _newclass:nav_per_cu = _swig_property(_ama.ETFCodeTableRecord_nav_per_cu_get, _ama.ETFCodeTableRecord_nav_per_cu_set)
    __swig_setmethods__["nav"] = _ama.ETFCodeTableRecord_nav_set
    __swig_getmethods__["nav"] = _ama.ETFCodeTableRecord_nav_get
    if _newclass:nav = _swig_property(_ama.ETFCodeTableRecord_nav_get, _ama.ETFCodeTableRecord_nav_set)
    __swig_setmethods__["market_type"] = _ama.ETFCodeTableRecord_market_type_set
    __swig_getmethods__["market_type"] = _ama.ETFCodeTableRecord_market_type_get
    if _newclass:market_type = _swig_property(_ama.ETFCodeTableRecord_market_type_get, _ama.ETFCodeTableRecord_market_type_set)
    __swig_setmethods__["symbol"] = _ama.ETFCodeTableRecord_symbol_set
    __swig_getmethods__["symbol"] = _ama.ETFCodeTableRecord_symbol_get
    if _newclass:symbol = _swig_property(_ama.ETFCodeTableRecord_symbol_get, _ama.ETFCodeTableRecord_symbol_set)
    __swig_setmethods__["fund_management_company"] = _ama.ETFCodeTableRecord_fund_management_company_set
    __swig_getmethods__["fund_management_company"] = _ama.ETFCodeTableRecord_fund_management_company_get
    if _newclass:fund_management_company = _swig_property(_ama.ETFCodeTableRecord_fund_management_company_get, _ama.ETFCodeTableRecord_fund_management_company_set)
    __swig_setmethods__["underlying_security_id"] = _ama.ETFCodeTableRecord_underlying_security_id_set
    __swig_getmethods__["underlying_security_id"] = _ama.ETFCodeTableRecord_underlying_security_id_get
    if _newclass:underlying_security_id = _swig_property(_ama.ETFCodeTableRecord_underlying_security_id_get, _ama.ETFCodeTableRecord_underlying_security_id_set)
    __swig_setmethods__["underlying_security_id_source"] = _ama.ETFCodeTableRecord_underlying_security_id_source_set
    __swig_getmethods__["underlying_security_id_source"] = _ama.ETFCodeTableRecord_underlying_security_id_source_get
    if _newclass:underlying_security_id_source = _swig_property(_ama.ETFCodeTableRecord_underlying_security_id_source_get, _ama.ETFCodeTableRecord_underlying_security_id_source_set)
    __swig_setmethods__["dividend_per_cu"] = _ama.ETFCodeTableRecord_dividend_per_cu_set
    __swig_getmethods__["dividend_per_cu"] = _ama.ETFCodeTableRecord_dividend_per_cu_get
    if _newclass:dividend_per_cu = _swig_property(_ama.ETFCodeTableRecord_dividend_per_cu_get, _ama.ETFCodeTableRecord_dividend_per_cu_set)
    __swig_setmethods__["creation_limit"] = _ama.ETFCodeTableRecord_creation_limit_set
    __swig_getmethods__["creation_limit"] = _ama.ETFCodeTableRecord_creation_limit_get
    if _newclass:creation_limit = _swig_property(_ama.ETFCodeTableRecord_creation_limit_get, _ama.ETFCodeTableRecord_creation_limit_set)
    __swig_setmethods__["redemption_limit"] = _ama.ETFCodeTableRecord_redemption_limit_set
    __swig_getmethods__["redemption_limit"] = _ama.ETFCodeTableRecord_redemption_limit_get
    if _newclass:redemption_limit = _swig_property(_ama.ETFCodeTableRecord_redemption_limit_get, _ama.ETFCodeTableRecord_redemption_limit_set)
    __swig_setmethods__["creation_limit_per_user"] = _ama.ETFCodeTableRecord_creation_limit_per_user_set
    __swig_getmethods__["creation_limit_per_user"] = _ama.ETFCodeTableRecord_creation_limit_per_user_get
    if _newclass:creation_limit_per_user = _swig_property(_ama.ETFCodeTableRecord_creation_limit_per_user_get, _ama.ETFCodeTableRecord_creation_limit_per_user_set)
    __swig_setmethods__["redemption_limit_per_user"] = _ama.ETFCodeTableRecord_redemption_limit_per_user_set
    __swig_getmethods__["redemption_limit_per_user"] = _ama.ETFCodeTableRecord_redemption_limit_per_user_get
    if _newclass:redemption_limit_per_user = _swig_property(_ama.ETFCodeTableRecord_redemption_limit_per_user_get, _ama.ETFCodeTableRecord_redemption_limit_per_user_set)
    __swig_setmethods__["net_creation_limit"] = _ama.ETFCodeTableRecord_net_creation_limit_set
    __swig_getmethods__["net_creation_limit"] = _ama.ETFCodeTableRecord_net_creation_limit_get
    if _newclass:net_creation_limit = _swig_property(_ama.ETFCodeTableRecord_net_creation_limit_get, _ama.ETFCodeTableRecord_net_creation_limit_set)
    __swig_setmethods__["net_redemption_limit"] = _ama.ETFCodeTableRecord_net_redemption_limit_set
    __swig_getmethods__["net_redemption_limit"] = _ama.ETFCodeTableRecord_net_redemption_limit_get
    if _newclass:net_redemption_limit = _swig_property(_ama.ETFCodeTableRecord_net_redemption_limit_get, _ama.ETFCodeTableRecord_net_redemption_limit_set)
    __swig_setmethods__["net_creation_limit_per_user"] = _ama.ETFCodeTableRecord_net_creation_limit_per_user_set
    __swig_getmethods__["net_creation_limit_per_user"] = _ama.ETFCodeTableRecord_net_creation_limit_per_user_get
    if _newclass:net_creation_limit_per_user = _swig_property(_ama.ETFCodeTableRecord_net_creation_limit_per_user_get, _ama.ETFCodeTableRecord_net_creation_limit_per_user_set)
    __swig_setmethods__["net_redemption_limit_per_user"] = _ama.ETFCodeTableRecord_net_redemption_limit_per_user_set
    __swig_getmethods__["net_redemption_limit_per_user"] = _ama.ETFCodeTableRecord_net_redemption_limit_per_user_get
    if _newclass:net_redemption_limit_per_user = _swig_property(_ama.ETFCodeTableRecord_net_redemption_limit_per_user_get, _ama.ETFCodeTableRecord_net_redemption_limit_per_user_set)
    __swig_setmethods__["all_cash_flag"] = _ama.ETFCodeTableRecord_all_cash_flag_set
    __swig_getmethods__["all_cash_flag"] = _ama.ETFCodeTableRecord_all_cash_flag_get
    if _newclass:all_cash_flag = _swig_property(_ama.ETFCodeTableRecord_all_cash_flag_get, _ama.ETFCodeTableRecord_all_cash_flag_set)
    __swig_setmethods__["all_cash_amount"] = _ama.ETFCodeTableRecord_all_cash_amount_set
    __swig_getmethods__["all_cash_amount"] = _ama.ETFCodeTableRecord_all_cash_amount_get
    if _newclass:all_cash_amount = _swig_property(_ama.ETFCodeTableRecord_all_cash_amount_get, _ama.ETFCodeTableRecord_all_cash_amount_set)
    __swig_setmethods__["all_cash_premium_rate"] = _ama.ETFCodeTableRecord_all_cash_premium_rate_set
    __swig_getmethods__["all_cash_premium_rate"] = _ama.ETFCodeTableRecord_all_cash_premium_rate_get
    if _newclass:all_cash_premium_rate = _swig_property(_ama.ETFCodeTableRecord_all_cash_premium_rate_get, _ama.ETFCodeTableRecord_all_cash_premium_rate_set)
    __swig_setmethods__["all_cash_discount_rate"] = _ama.ETFCodeTableRecord_all_cash_discount_rate_set
    __swig_getmethods__["all_cash_discount_rate"] = _ama.ETFCodeTableRecord_all_cash_discount_rate_get
    if _newclass:all_cash_discount_rate = _swig_property(_ama.ETFCodeTableRecord_all_cash_discount_rate_get, _ama.ETFCodeTableRecord_all_cash_discount_rate_set)
    __swig_setmethods__["rtgs_flag"] = _ama.ETFCodeTableRecord_rtgs_flag_set
    __swig_getmethods__["rtgs_flag"] = _ama.ETFCodeTableRecord_rtgs_flag_get
    if _newclass:rtgs_flag = _swig_property(_ama.ETFCodeTableRecord_rtgs_flag_get, _ama.ETFCodeTableRecord_rtgs_flag_set)
    __swig_setmethods__["reserved"] = _ama.ETFCodeTableRecord_reserved_set
    __swig_getmethods__["reserved"] = _ama.ETFCodeTableRecord_reserved_get
    if _newclass:reserved = _swig_property(_ama.ETFCodeTableRecord_reserved_get, _ama.ETFCodeTableRecord_reserved_set)
    __swig_setmethods__["constituent_stock_infos"] = _ama.ETFCodeTableRecord_constituent_stock_infos_set
    __swig_getmethods__["constituent_stock_infos"] = _ama.ETFCodeTableRecord_constituent_stock_infos_get
    if _newclass:constituent_stock_infos = _swig_property(_ama.ETFCodeTableRecord_constituent_stock_infos_get, _ama.ETFCodeTableRecord_constituent_stock_infos_set)
    def __init__(self): 
        this = _ama.new_ETFCodeTableRecord()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_ETFCodeTableRecord
    __del__ = lambda self : None;
ETFCodeTableRecord_swigregister = _ama.ETFCodeTableRecord_swigregister
ETFCodeTableRecord_swigregister(ETFCodeTableRecord)

class ETFCodeTableRecordList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ETFCodeTableRecordList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ETFCodeTableRecordList, name)
    __repr__ = _swig_repr
    __swig_setmethods__["etf_list_nums"] = _ama.ETFCodeTableRecordList_etf_list_nums_set
    __swig_getmethods__["etf_list_nums"] = _ama.ETFCodeTableRecordList_etf_list_nums_get
    if _newclass:etf_list_nums = _swig_property(_ama.ETFCodeTableRecordList_etf_list_nums_get, _ama.ETFCodeTableRecordList_etf_list_nums_set)
    __swig_setmethods__["etf_records"] = _ama.ETFCodeTableRecordList_etf_records_set
    __swig_getmethods__["etf_records"] = _ama.ETFCodeTableRecordList_etf_records_get
    if _newclass:etf_records = _swig_property(_ama.ETFCodeTableRecordList_etf_records_get, _ama.ETFCodeTableRecordList_etf_records_set)
    def __init__(self): 
        this = _ama.new_ETFCodeTableRecordList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_ETFCodeTableRecordList
    __del__ = lambda self : None;
ETFCodeTableRecordList_swigregister = _ama.ETFCodeTableRecordList_swigregister
ETFCodeTableRecordList_swigregister(ETFCodeTableRecordList)

class IMCExchangeRate(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IMCExchangeRate, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IMCExchangeRate, name)
    __repr__ = _swig_repr
    __swig_setmethods__["from_currency"] = _ama.IMCExchangeRate_from_currency_set
    __swig_getmethods__["from_currency"] = _ama.IMCExchangeRate_from_currency_get
    if _newclass:from_currency = _swig_property(_ama.IMCExchangeRate_from_currency_get, _ama.IMCExchangeRate_from_currency_set)
    __swig_setmethods__["to_currency"] = _ama.IMCExchangeRate_to_currency_set
    __swig_getmethods__["to_currency"] = _ama.IMCExchangeRate_to_currency_get
    if _newclass:to_currency = _swig_property(_ama.IMCExchangeRate_to_currency_get, _ama.IMCExchangeRate_to_currency_set)
    __swig_setmethods__["bid_rate"] = _ama.IMCExchangeRate_bid_rate_set
    __swig_getmethods__["bid_rate"] = _ama.IMCExchangeRate_bid_rate_get
    if _newclass:bid_rate = _swig_property(_ama.IMCExchangeRate_bid_rate_get, _ama.IMCExchangeRate_bid_rate_set)
    __swig_setmethods__["offer_rate"] = _ama.IMCExchangeRate_offer_rate_set
    __swig_getmethods__["offer_rate"] = _ama.IMCExchangeRate_offer_rate_get
    if _newclass:offer_rate = _swig_property(_ama.IMCExchangeRate_offer_rate_get, _ama.IMCExchangeRate_offer_rate_set)
    __swig_setmethods__["mid_point_rate"] = _ama.IMCExchangeRate_mid_point_rate_set
    __swig_getmethods__["mid_point_rate"] = _ama.IMCExchangeRate_mid_point_rate_get
    if _newclass:mid_point_rate = _swig_property(_ama.IMCExchangeRate_mid_point_rate_get, _ama.IMCExchangeRate_mid_point_rate_set)
    __swig_setmethods__["rate_date"] = _ama.IMCExchangeRate_rate_date_set
    __swig_getmethods__["rate_date"] = _ama.IMCExchangeRate_rate_date_get
    if _newclass:rate_date = _swig_property(_ama.IMCExchangeRate_rate_date_get, _ama.IMCExchangeRate_rate_date_set)
    def __init__(self): 
        this = _ama.new_IMCExchangeRate()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_IMCExchangeRate
    __del__ = lambda self : None;
IMCExchangeRate_swigregister = _ama.IMCExchangeRate_swigregister
IMCExchangeRate_swigregister(IMCExchangeRate)

class IMCExchangeRateList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IMCExchangeRateList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IMCExchangeRateList, name)
    __repr__ = _swig_repr
    __swig_setmethods__["imc_list_nums"] = _ama.IMCExchangeRateList_imc_list_nums_set
    __swig_getmethods__["imc_list_nums"] = _ama.IMCExchangeRateList_imc_list_nums_get
    if _newclass:imc_list_nums = _swig_property(_ama.IMCExchangeRateList_imc_list_nums_get, _ama.IMCExchangeRateList_imc_list_nums_set)
    __swig_setmethods__["imc_rate_data"] = _ama.IMCExchangeRateList_imc_rate_data_set
    __swig_getmethods__["imc_rate_data"] = _ama.IMCExchangeRateList_imc_rate_data_get
    if _newclass:imc_rate_data = _swig_property(_ama.IMCExchangeRateList_imc_rate_data_get, _ama.IMCExchangeRateList_imc_rate_data_set)
    def __init__(self): 
        this = _ama.new_IMCExchangeRateList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_IMCExchangeRateList
    __del__ = lambda self : None;
IMCExchangeRateList_swigregister = _ama.IMCExchangeRateList_swigregister
IMCExchangeRateList_swigregister(IMCExchangeRateList)

class MDIOPVSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDIOPVSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDIOPVSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDIOPVSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDIOPVSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDIOPVSnapshot_market_type_get, _ama.MDIOPVSnapshot_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDIOPVSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDIOPVSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDIOPVSnapshot_security_code_get, _ama.MDIOPVSnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDIOPVSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDIOPVSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDIOPVSnapshot_orig_time_get, _ama.MDIOPVSnapshot_orig_time_set)
    __swig_setmethods__["last_iopv"] = _ama.MDIOPVSnapshot_last_iopv_set
    __swig_getmethods__["last_iopv"] = _ama.MDIOPVSnapshot_last_iopv_get
    if _newclass:last_iopv = _swig_property(_ama.MDIOPVSnapshot_last_iopv_get, _ama.MDIOPVSnapshot_last_iopv_set)
    __swig_setmethods__["bid_iopv"] = _ama.MDIOPVSnapshot_bid_iopv_set
    __swig_getmethods__["bid_iopv"] = _ama.MDIOPVSnapshot_bid_iopv_get
    if _newclass:bid_iopv = _swig_property(_ama.MDIOPVSnapshot_bid_iopv_get, _ama.MDIOPVSnapshot_bid_iopv_set)
    __swig_setmethods__["offer_iopv"] = _ama.MDIOPVSnapshot_offer_iopv_set
    __swig_getmethods__["offer_iopv"] = _ama.MDIOPVSnapshot_offer_iopv_get
    if _newclass:offer_iopv = _swig_property(_ama.MDIOPVSnapshot_offer_iopv_get, _ama.MDIOPVSnapshot_offer_iopv_set)
    def __init__(self): 
        this = _ama.new_MDIOPVSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDIOPVSnapshot
    __del__ = lambda self : None;
MDIOPVSnapshot_swigregister = _ama.MDIOPVSnapshot_swigregister
MDIOPVSnapshot_swigregister(MDIOPVSnapshot)

class MDSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDSnapshot_market_type_get, _ama.MDSnapshot_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDSnapshot_security_code_get, _ama.MDSnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDSnapshot_orig_time_get, _ama.MDSnapshot_orig_time_set)
    __swig_setmethods__["trading_phase_code"] = _ama.MDSnapshot_trading_phase_code_set
    __swig_getmethods__["trading_phase_code"] = _ama.MDSnapshot_trading_phase_code_get
    if _newclass:trading_phase_code = _swig_property(_ama.MDSnapshot_trading_phase_code_get, _ama.MDSnapshot_trading_phase_code_set)
    __swig_setmethods__["pre_close_price"] = _ama.MDSnapshot_pre_close_price_set
    __swig_getmethods__["pre_close_price"] = _ama.MDSnapshot_pre_close_price_get
    if _newclass:pre_close_price = _swig_property(_ama.MDSnapshot_pre_close_price_get, _ama.MDSnapshot_pre_close_price_set)
    __swig_setmethods__["open_price"] = _ama.MDSnapshot_open_price_set
    __swig_getmethods__["open_price"] = _ama.MDSnapshot_open_price_get
    if _newclass:open_price = _swig_property(_ama.MDSnapshot_open_price_get, _ama.MDSnapshot_open_price_set)
    __swig_setmethods__["high_price"] = _ama.MDSnapshot_high_price_set
    __swig_getmethods__["high_price"] = _ama.MDSnapshot_high_price_get
    if _newclass:high_price = _swig_property(_ama.MDSnapshot_high_price_get, _ama.MDSnapshot_high_price_set)
    __swig_setmethods__["low_price"] = _ama.MDSnapshot_low_price_set
    __swig_getmethods__["low_price"] = _ama.MDSnapshot_low_price_get
    if _newclass:low_price = _swig_property(_ama.MDSnapshot_low_price_get, _ama.MDSnapshot_low_price_set)
    __swig_setmethods__["last_price"] = _ama.MDSnapshot_last_price_set
    __swig_getmethods__["last_price"] = _ama.MDSnapshot_last_price_get
    if _newclass:last_price = _swig_property(_ama.MDSnapshot_last_price_get, _ama.MDSnapshot_last_price_set)
    __swig_setmethods__["close_price"] = _ama.MDSnapshot_close_price_set
    __swig_getmethods__["close_price"] = _ama.MDSnapshot_close_price_get
    if _newclass:close_price = _swig_property(_ama.MDSnapshot_close_price_get, _ama.MDSnapshot_close_price_set)
    __swig_setmethods__["bid_price"] = _ama.MDSnapshot_bid_price_set
    __swig_getmethods__["bid_price"] = _ama.MDSnapshot_bid_price_get
    if _newclass:bid_price = _swig_property(_ama.MDSnapshot_bid_price_get, _ama.MDSnapshot_bid_price_set)
    __swig_setmethods__["bid_volume"] = _ama.MDSnapshot_bid_volume_set
    __swig_getmethods__["bid_volume"] = _ama.MDSnapshot_bid_volume_get
    if _newclass:bid_volume = _swig_property(_ama.MDSnapshot_bid_volume_get, _ama.MDSnapshot_bid_volume_set)
    __swig_setmethods__["offer_price"] = _ama.MDSnapshot_offer_price_set
    __swig_getmethods__["offer_price"] = _ama.MDSnapshot_offer_price_get
    if _newclass:offer_price = _swig_property(_ama.MDSnapshot_offer_price_get, _ama.MDSnapshot_offer_price_set)
    __swig_setmethods__["offer_volume"] = _ama.MDSnapshot_offer_volume_set
    __swig_getmethods__["offer_volume"] = _ama.MDSnapshot_offer_volume_get
    if _newclass:offer_volume = _swig_property(_ama.MDSnapshot_offer_volume_get, _ama.MDSnapshot_offer_volume_set)
    __swig_setmethods__["num_trades"] = _ama.MDSnapshot_num_trades_set
    __swig_getmethods__["num_trades"] = _ama.MDSnapshot_num_trades_get
    if _newclass:num_trades = _swig_property(_ama.MDSnapshot_num_trades_get, _ama.MDSnapshot_num_trades_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDSnapshot_total_volume_trade_get, _ama.MDSnapshot_total_volume_trade_set)
    __swig_setmethods__["total_value_trade"] = _ama.MDSnapshot_total_value_trade_set
    __swig_getmethods__["total_value_trade"] = _ama.MDSnapshot_total_value_trade_get
    if _newclass:total_value_trade = _swig_property(_ama.MDSnapshot_total_value_trade_get, _ama.MDSnapshot_total_value_trade_set)
    __swig_setmethods__["total_bid_volume"] = _ama.MDSnapshot_total_bid_volume_set
    __swig_getmethods__["total_bid_volume"] = _ama.MDSnapshot_total_bid_volume_get
    if _newclass:total_bid_volume = _swig_property(_ama.MDSnapshot_total_bid_volume_get, _ama.MDSnapshot_total_bid_volume_set)
    __swig_setmethods__["total_offer_volume"] = _ama.MDSnapshot_total_offer_volume_set
    __swig_getmethods__["total_offer_volume"] = _ama.MDSnapshot_total_offer_volume_get
    if _newclass:total_offer_volume = _swig_property(_ama.MDSnapshot_total_offer_volume_get, _ama.MDSnapshot_total_offer_volume_set)
    __swig_setmethods__["weighted_avg_bid_price"] = _ama.MDSnapshot_weighted_avg_bid_price_set
    __swig_getmethods__["weighted_avg_bid_price"] = _ama.MDSnapshot_weighted_avg_bid_price_get
    if _newclass:weighted_avg_bid_price = _swig_property(_ama.MDSnapshot_weighted_avg_bid_price_get, _ama.MDSnapshot_weighted_avg_bid_price_set)
    __swig_setmethods__["weighted_avg_offer_price"] = _ama.MDSnapshot_weighted_avg_offer_price_set
    __swig_getmethods__["weighted_avg_offer_price"] = _ama.MDSnapshot_weighted_avg_offer_price_get
    if _newclass:weighted_avg_offer_price = _swig_property(_ama.MDSnapshot_weighted_avg_offer_price_get, _ama.MDSnapshot_weighted_avg_offer_price_set)
    __swig_setmethods__["IOPV"] = _ama.MDSnapshot_IOPV_set
    __swig_getmethods__["IOPV"] = _ama.MDSnapshot_IOPV_get
    if _newclass:IOPV = _swig_property(_ama.MDSnapshot_IOPV_get, _ama.MDSnapshot_IOPV_set)
    __swig_setmethods__["yield_to_maturity"] = _ama.MDSnapshot_yield_to_maturity_set
    __swig_getmethods__["yield_to_maturity"] = _ama.MDSnapshot_yield_to_maturity_get
    if _newclass:yield_to_maturity = _swig_property(_ama.MDSnapshot_yield_to_maturity_get, _ama.MDSnapshot_yield_to_maturity_set)
    __swig_setmethods__["high_limited"] = _ama.MDSnapshot_high_limited_set
    __swig_getmethods__["high_limited"] = _ama.MDSnapshot_high_limited_get
    if _newclass:high_limited = _swig_property(_ama.MDSnapshot_high_limited_get, _ama.MDSnapshot_high_limited_set)
    __swig_setmethods__["low_limited"] = _ama.MDSnapshot_low_limited_set
    __swig_getmethods__["low_limited"] = _ama.MDSnapshot_low_limited_get
    if _newclass:low_limited = _swig_property(_ama.MDSnapshot_low_limited_get, _ama.MDSnapshot_low_limited_set)
    __swig_setmethods__["price_earning_ratio1"] = _ama.MDSnapshot_price_earning_ratio1_set
    __swig_getmethods__["price_earning_ratio1"] = _ama.MDSnapshot_price_earning_ratio1_get
    if _newclass:price_earning_ratio1 = _swig_property(_ama.MDSnapshot_price_earning_ratio1_get, _ama.MDSnapshot_price_earning_ratio1_set)
    __swig_setmethods__["price_earning_ratio2"] = _ama.MDSnapshot_price_earning_ratio2_set
    __swig_getmethods__["price_earning_ratio2"] = _ama.MDSnapshot_price_earning_ratio2_get
    if _newclass:price_earning_ratio2 = _swig_property(_ama.MDSnapshot_price_earning_ratio2_get, _ama.MDSnapshot_price_earning_ratio2_set)
    __swig_setmethods__["change1"] = _ama.MDSnapshot_change1_set
    __swig_getmethods__["change1"] = _ama.MDSnapshot_change1_get
    if _newclass:change1 = _swig_property(_ama.MDSnapshot_change1_get, _ama.MDSnapshot_change1_set)
    __swig_setmethods__["change2"] = _ama.MDSnapshot_change2_set
    __swig_getmethods__["change2"] = _ama.MDSnapshot_change2_get
    if _newclass:change2 = _swig_property(_ama.MDSnapshot_change2_get, _ama.MDSnapshot_change2_set)
    __swig_setmethods__["channel_no"] = _ama.MDSnapshot_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDSnapshot_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDSnapshot_channel_no_get, _ama.MDSnapshot_channel_no_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDSnapshot_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDSnapshot_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDSnapshot_md_stream_id_get, _ama.MDSnapshot_md_stream_id_set)
    __swig_setmethods__["instrument_status"] = _ama.MDSnapshot_instrument_status_set
    __swig_getmethods__["instrument_status"] = _ama.MDSnapshot_instrument_status_get
    if _newclass:instrument_status = _swig_property(_ama.MDSnapshot_instrument_status_get, _ama.MDSnapshot_instrument_status_set)
    __swig_setmethods__["pre_close_iopv"] = _ama.MDSnapshot_pre_close_iopv_set
    __swig_getmethods__["pre_close_iopv"] = _ama.MDSnapshot_pre_close_iopv_get
    if _newclass:pre_close_iopv = _swig_property(_ama.MDSnapshot_pre_close_iopv_get, _ama.MDSnapshot_pre_close_iopv_set)
    __swig_setmethods__["alt_weighted_avg_bid_price"] = _ama.MDSnapshot_alt_weighted_avg_bid_price_set
    __swig_getmethods__["alt_weighted_avg_bid_price"] = _ama.MDSnapshot_alt_weighted_avg_bid_price_get
    if _newclass:alt_weighted_avg_bid_price = _swig_property(_ama.MDSnapshot_alt_weighted_avg_bid_price_get, _ama.MDSnapshot_alt_weighted_avg_bid_price_set)
    __swig_setmethods__["alt_weighted_avg_offer_price"] = _ama.MDSnapshot_alt_weighted_avg_offer_price_set
    __swig_getmethods__["alt_weighted_avg_offer_price"] = _ama.MDSnapshot_alt_weighted_avg_offer_price_get
    if _newclass:alt_weighted_avg_offer_price = _swig_property(_ama.MDSnapshot_alt_weighted_avg_offer_price_get, _ama.MDSnapshot_alt_weighted_avg_offer_price_set)
    __swig_setmethods__["etf_buy_number"] = _ama.MDSnapshot_etf_buy_number_set
    __swig_getmethods__["etf_buy_number"] = _ama.MDSnapshot_etf_buy_number_get
    if _newclass:etf_buy_number = _swig_property(_ama.MDSnapshot_etf_buy_number_get, _ama.MDSnapshot_etf_buy_number_set)
    __swig_setmethods__["etf_buy_amount"] = _ama.MDSnapshot_etf_buy_amount_set
    __swig_getmethods__["etf_buy_amount"] = _ama.MDSnapshot_etf_buy_amount_get
    if _newclass:etf_buy_amount = _swig_property(_ama.MDSnapshot_etf_buy_amount_get, _ama.MDSnapshot_etf_buy_amount_set)
    __swig_setmethods__["etf_buy_money"] = _ama.MDSnapshot_etf_buy_money_set
    __swig_getmethods__["etf_buy_money"] = _ama.MDSnapshot_etf_buy_money_get
    if _newclass:etf_buy_money = _swig_property(_ama.MDSnapshot_etf_buy_money_get, _ama.MDSnapshot_etf_buy_money_set)
    __swig_setmethods__["etf_sell_number"] = _ama.MDSnapshot_etf_sell_number_set
    __swig_getmethods__["etf_sell_number"] = _ama.MDSnapshot_etf_sell_number_get
    if _newclass:etf_sell_number = _swig_property(_ama.MDSnapshot_etf_sell_number_get, _ama.MDSnapshot_etf_sell_number_set)
    __swig_setmethods__["etf_sell_amount"] = _ama.MDSnapshot_etf_sell_amount_set
    __swig_getmethods__["etf_sell_amount"] = _ama.MDSnapshot_etf_sell_amount_get
    if _newclass:etf_sell_amount = _swig_property(_ama.MDSnapshot_etf_sell_amount_get, _ama.MDSnapshot_etf_sell_amount_set)
    __swig_setmethods__["etf_sell_money"] = _ama.MDSnapshot_etf_sell_money_set
    __swig_getmethods__["etf_sell_money"] = _ama.MDSnapshot_etf_sell_money_get
    if _newclass:etf_sell_money = _swig_property(_ama.MDSnapshot_etf_sell_money_get, _ama.MDSnapshot_etf_sell_money_set)
    __swig_setmethods__["total_warrant_exec_volume"] = _ama.MDSnapshot_total_warrant_exec_volume_set
    __swig_getmethods__["total_warrant_exec_volume"] = _ama.MDSnapshot_total_warrant_exec_volume_get
    if _newclass:total_warrant_exec_volume = _swig_property(_ama.MDSnapshot_total_warrant_exec_volume_get, _ama.MDSnapshot_total_warrant_exec_volume_set)
    __swig_setmethods__["war_lower_price"] = _ama.MDSnapshot_war_lower_price_set
    __swig_getmethods__["war_lower_price"] = _ama.MDSnapshot_war_lower_price_get
    if _newclass:war_lower_price = _swig_property(_ama.MDSnapshot_war_lower_price_get, _ama.MDSnapshot_war_lower_price_set)
    __swig_setmethods__["war_upper_price"] = _ama.MDSnapshot_war_upper_price_set
    __swig_getmethods__["war_upper_price"] = _ama.MDSnapshot_war_upper_price_get
    if _newclass:war_upper_price = _swig_property(_ama.MDSnapshot_war_upper_price_get, _ama.MDSnapshot_war_upper_price_set)
    __swig_setmethods__["withdraw_buy_number"] = _ama.MDSnapshot_withdraw_buy_number_set
    __swig_getmethods__["withdraw_buy_number"] = _ama.MDSnapshot_withdraw_buy_number_get
    if _newclass:withdraw_buy_number = _swig_property(_ama.MDSnapshot_withdraw_buy_number_get, _ama.MDSnapshot_withdraw_buy_number_set)
    __swig_setmethods__["withdraw_buy_amount"] = _ama.MDSnapshot_withdraw_buy_amount_set
    __swig_getmethods__["withdraw_buy_amount"] = _ama.MDSnapshot_withdraw_buy_amount_get
    if _newclass:withdraw_buy_amount = _swig_property(_ama.MDSnapshot_withdraw_buy_amount_get, _ama.MDSnapshot_withdraw_buy_amount_set)
    __swig_setmethods__["withdraw_buy_money"] = _ama.MDSnapshot_withdraw_buy_money_set
    __swig_getmethods__["withdraw_buy_money"] = _ama.MDSnapshot_withdraw_buy_money_get
    if _newclass:withdraw_buy_money = _swig_property(_ama.MDSnapshot_withdraw_buy_money_get, _ama.MDSnapshot_withdraw_buy_money_set)
    __swig_setmethods__["withdraw_sell_number"] = _ama.MDSnapshot_withdraw_sell_number_set
    __swig_getmethods__["withdraw_sell_number"] = _ama.MDSnapshot_withdraw_sell_number_get
    if _newclass:withdraw_sell_number = _swig_property(_ama.MDSnapshot_withdraw_sell_number_get, _ama.MDSnapshot_withdraw_sell_number_set)
    __swig_setmethods__["withdraw_sell_amount"] = _ama.MDSnapshot_withdraw_sell_amount_set
    __swig_getmethods__["withdraw_sell_amount"] = _ama.MDSnapshot_withdraw_sell_amount_get
    if _newclass:withdraw_sell_amount = _swig_property(_ama.MDSnapshot_withdraw_sell_amount_get, _ama.MDSnapshot_withdraw_sell_amount_set)
    __swig_setmethods__["withdraw_sell_money"] = _ama.MDSnapshot_withdraw_sell_money_set
    __swig_getmethods__["withdraw_sell_money"] = _ama.MDSnapshot_withdraw_sell_money_get
    if _newclass:withdraw_sell_money = _swig_property(_ama.MDSnapshot_withdraw_sell_money_get, _ama.MDSnapshot_withdraw_sell_money_set)
    __swig_setmethods__["total_bid_number"] = _ama.MDSnapshot_total_bid_number_set
    __swig_getmethods__["total_bid_number"] = _ama.MDSnapshot_total_bid_number_get
    if _newclass:total_bid_number = _swig_property(_ama.MDSnapshot_total_bid_number_get, _ama.MDSnapshot_total_bid_number_set)
    __swig_setmethods__["total_offer_number"] = _ama.MDSnapshot_total_offer_number_set
    __swig_getmethods__["total_offer_number"] = _ama.MDSnapshot_total_offer_number_get
    if _newclass:total_offer_number = _swig_property(_ama.MDSnapshot_total_offer_number_get, _ama.MDSnapshot_total_offer_number_set)
    __swig_setmethods__["bid_trade_max_duration"] = _ama.MDSnapshot_bid_trade_max_duration_set
    __swig_getmethods__["bid_trade_max_duration"] = _ama.MDSnapshot_bid_trade_max_duration_get
    if _newclass:bid_trade_max_duration = _swig_property(_ama.MDSnapshot_bid_trade_max_duration_get, _ama.MDSnapshot_bid_trade_max_duration_set)
    __swig_setmethods__["offer_trade_max_duration"] = _ama.MDSnapshot_offer_trade_max_duration_set
    __swig_getmethods__["offer_trade_max_duration"] = _ama.MDSnapshot_offer_trade_max_duration_get
    if _newclass:offer_trade_max_duration = _swig_property(_ama.MDSnapshot_offer_trade_max_duration_get, _ama.MDSnapshot_offer_trade_max_duration_set)
    __swig_setmethods__["num_bid_orders"] = _ama.MDSnapshot_num_bid_orders_set
    __swig_getmethods__["num_bid_orders"] = _ama.MDSnapshot_num_bid_orders_get
    if _newclass:num_bid_orders = _swig_property(_ama.MDSnapshot_num_bid_orders_get, _ama.MDSnapshot_num_bid_orders_set)
    __swig_setmethods__["num_offer_orders"] = _ama.MDSnapshot_num_offer_orders_set
    __swig_getmethods__["num_offer_orders"] = _ama.MDSnapshot_num_offer_orders_get
    if _newclass:num_offer_orders = _swig_property(_ama.MDSnapshot_num_offer_orders_get, _ama.MDSnapshot_num_offer_orders_set)
    __swig_setmethods__["last_trade_time"] = _ama.MDSnapshot_last_trade_time_set
    __swig_getmethods__["last_trade_time"] = _ama.MDSnapshot_last_trade_time_get
    if _newclass:last_trade_time = _swig_property(_ama.MDSnapshot_last_trade_time_get, _ama.MDSnapshot_last_trade_time_set)
    __swig_setmethods__["variety_category"] = _ama.MDSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDSnapshot_variety_category_get, _ama.MDSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDSnapshot
    __del__ = lambda self : None;
MDSnapshot_swigregister = _ama.MDSnapshot_swigregister
MDSnapshot_swigregister(MDSnapshot)

class MDIndexSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDIndexSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDIndexSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDIndexSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDIndexSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDIndexSnapshot_market_type_get, _ama.MDIndexSnapshot_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDIndexSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDIndexSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDIndexSnapshot_security_code_get, _ama.MDIndexSnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDIndexSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDIndexSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDIndexSnapshot_orig_time_get, _ama.MDIndexSnapshot_orig_time_set)
    __swig_setmethods__["trading_phase_code"] = _ama.MDIndexSnapshot_trading_phase_code_set
    __swig_getmethods__["trading_phase_code"] = _ama.MDIndexSnapshot_trading_phase_code_get
    if _newclass:trading_phase_code = _swig_property(_ama.MDIndexSnapshot_trading_phase_code_get, _ama.MDIndexSnapshot_trading_phase_code_set)
    __swig_setmethods__["pre_close_index"] = _ama.MDIndexSnapshot_pre_close_index_set
    __swig_getmethods__["pre_close_index"] = _ama.MDIndexSnapshot_pre_close_index_get
    if _newclass:pre_close_index = _swig_property(_ama.MDIndexSnapshot_pre_close_index_get, _ama.MDIndexSnapshot_pre_close_index_set)
    __swig_setmethods__["open_index"] = _ama.MDIndexSnapshot_open_index_set
    __swig_getmethods__["open_index"] = _ama.MDIndexSnapshot_open_index_get
    if _newclass:open_index = _swig_property(_ama.MDIndexSnapshot_open_index_get, _ama.MDIndexSnapshot_open_index_set)
    __swig_setmethods__["high_index"] = _ama.MDIndexSnapshot_high_index_set
    __swig_getmethods__["high_index"] = _ama.MDIndexSnapshot_high_index_get
    if _newclass:high_index = _swig_property(_ama.MDIndexSnapshot_high_index_get, _ama.MDIndexSnapshot_high_index_set)
    __swig_setmethods__["low_index"] = _ama.MDIndexSnapshot_low_index_set
    __swig_getmethods__["low_index"] = _ama.MDIndexSnapshot_low_index_get
    if _newclass:low_index = _swig_property(_ama.MDIndexSnapshot_low_index_get, _ama.MDIndexSnapshot_low_index_set)
    __swig_setmethods__["last_index"] = _ama.MDIndexSnapshot_last_index_set
    __swig_getmethods__["last_index"] = _ama.MDIndexSnapshot_last_index_get
    if _newclass:last_index = _swig_property(_ama.MDIndexSnapshot_last_index_get, _ama.MDIndexSnapshot_last_index_set)
    __swig_setmethods__["close_index"] = _ama.MDIndexSnapshot_close_index_set
    __swig_getmethods__["close_index"] = _ama.MDIndexSnapshot_close_index_get
    if _newclass:close_index = _swig_property(_ama.MDIndexSnapshot_close_index_get, _ama.MDIndexSnapshot_close_index_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDIndexSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDIndexSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDIndexSnapshot_total_volume_trade_get, _ama.MDIndexSnapshot_total_volume_trade_set)
    __swig_setmethods__["total_value_trade"] = _ama.MDIndexSnapshot_total_value_trade_set
    __swig_getmethods__["total_value_trade"] = _ama.MDIndexSnapshot_total_value_trade_get
    if _newclass:total_value_trade = _swig_property(_ama.MDIndexSnapshot_total_value_trade_get, _ama.MDIndexSnapshot_total_value_trade_set)
    __swig_setmethods__["channel_no"] = _ama.MDIndexSnapshot_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDIndexSnapshot_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDIndexSnapshot_channel_no_get, _ama.MDIndexSnapshot_channel_no_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDIndexSnapshot_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDIndexSnapshot_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDIndexSnapshot_md_stream_id_get, _ama.MDIndexSnapshot_md_stream_id_set)
    __swig_setmethods__["variety_category"] = _ama.MDIndexSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDIndexSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDIndexSnapshot_variety_category_get, _ama.MDIndexSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDIndexSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDIndexSnapshot
    __del__ = lambda self : None;
MDIndexSnapshot_swigregister = _ama.MDIndexSnapshot_swigregister
MDIndexSnapshot_swigregister(MDIndexSnapshot)

class MDTickOrder(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDTickOrder, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDTickOrder, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDTickOrder_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDTickOrder_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDTickOrder_market_type_get, _ama.MDTickOrder_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDTickOrder_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDTickOrder_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDTickOrder_security_code_get, _ama.MDTickOrder_security_code_set)
    __swig_setmethods__["channel_no"] = _ama.MDTickOrder_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDTickOrder_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDTickOrder_channel_no_get, _ama.MDTickOrder_channel_no_set)
    __swig_setmethods__["appl_seq_num"] = _ama.MDTickOrder_appl_seq_num_set
    __swig_getmethods__["appl_seq_num"] = _ama.MDTickOrder_appl_seq_num_get
    if _newclass:appl_seq_num = _swig_property(_ama.MDTickOrder_appl_seq_num_get, _ama.MDTickOrder_appl_seq_num_set)
    __swig_setmethods__["order_time"] = _ama.MDTickOrder_order_time_set
    __swig_getmethods__["order_time"] = _ama.MDTickOrder_order_time_get
    if _newclass:order_time = _swig_property(_ama.MDTickOrder_order_time_get, _ama.MDTickOrder_order_time_set)
    __swig_setmethods__["order_price"] = _ama.MDTickOrder_order_price_set
    __swig_getmethods__["order_price"] = _ama.MDTickOrder_order_price_get
    if _newclass:order_price = _swig_property(_ama.MDTickOrder_order_price_get, _ama.MDTickOrder_order_price_set)
    __swig_setmethods__["order_volume"] = _ama.MDTickOrder_order_volume_set
    __swig_getmethods__["order_volume"] = _ama.MDTickOrder_order_volume_get
    if _newclass:order_volume = _swig_property(_ama.MDTickOrder_order_volume_get, _ama.MDTickOrder_order_volume_set)
    __swig_setmethods__["side"] = _ama.MDTickOrder_side_set
    __swig_getmethods__["side"] = _ama.MDTickOrder_side_get
    if _newclass:side = _swig_property(_ama.MDTickOrder_side_get, _ama.MDTickOrder_side_set)
    __swig_setmethods__["order_type"] = _ama.MDTickOrder_order_type_set
    __swig_getmethods__["order_type"] = _ama.MDTickOrder_order_type_get
    if _newclass:order_type = _swig_property(_ama.MDTickOrder_order_type_get, _ama.MDTickOrder_order_type_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDTickOrder_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDTickOrder_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDTickOrder_md_stream_id_get, _ama.MDTickOrder_md_stream_id_set)
    __swig_setmethods__["orig_order_no"] = _ama.MDTickOrder_orig_order_no_set
    __swig_getmethods__["orig_order_no"] = _ama.MDTickOrder_orig_order_no_get
    if _newclass:orig_order_no = _swig_property(_ama.MDTickOrder_orig_order_no_get, _ama.MDTickOrder_orig_order_no_set)
    __swig_setmethods__["biz_index"] = _ama.MDTickOrder_biz_index_set
    __swig_getmethods__["biz_index"] = _ama.MDTickOrder_biz_index_get
    if _newclass:biz_index = _swig_property(_ama.MDTickOrder_biz_index_get, _ama.MDTickOrder_biz_index_set)
    __swig_setmethods__["variety_category"] = _ama.MDTickOrder_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDTickOrder_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDTickOrder_variety_category_get, _ama.MDTickOrder_variety_category_set)
    __swig_setmethods__["traded_order_volume"] = _ama.MDTickOrder_traded_order_volume_set
    __swig_getmethods__["traded_order_volume"] = _ama.MDTickOrder_traded_order_volume_get
    if _newclass:traded_order_volume = _swig_property(_ama.MDTickOrder_traded_order_volume_get, _ama.MDTickOrder_traded_order_volume_set)
    def __init__(self): 
        this = _ama.new_MDTickOrder()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDTickOrder
    __del__ = lambda self : None;
MDTickOrder_swigregister = _ama.MDTickOrder_swigregister
MDTickOrder_swigregister(MDTickOrder)

class MDTickExecution(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDTickExecution, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDTickExecution, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDTickExecution_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDTickExecution_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDTickExecution_market_type_get, _ama.MDTickExecution_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDTickExecution_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDTickExecution_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDTickExecution_security_code_get, _ama.MDTickExecution_security_code_set)
    __swig_setmethods__["exec_time"] = _ama.MDTickExecution_exec_time_set
    __swig_getmethods__["exec_time"] = _ama.MDTickExecution_exec_time_get
    if _newclass:exec_time = _swig_property(_ama.MDTickExecution_exec_time_get, _ama.MDTickExecution_exec_time_set)
    __swig_setmethods__["channel_no"] = _ama.MDTickExecution_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDTickExecution_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDTickExecution_channel_no_get, _ama.MDTickExecution_channel_no_set)
    __swig_setmethods__["appl_seq_num"] = _ama.MDTickExecution_appl_seq_num_set
    __swig_getmethods__["appl_seq_num"] = _ama.MDTickExecution_appl_seq_num_get
    if _newclass:appl_seq_num = _swig_property(_ama.MDTickExecution_appl_seq_num_get, _ama.MDTickExecution_appl_seq_num_set)
    __swig_setmethods__["exec_price"] = _ama.MDTickExecution_exec_price_set
    __swig_getmethods__["exec_price"] = _ama.MDTickExecution_exec_price_get
    if _newclass:exec_price = _swig_property(_ama.MDTickExecution_exec_price_get, _ama.MDTickExecution_exec_price_set)
    __swig_setmethods__["exec_volume"] = _ama.MDTickExecution_exec_volume_set
    __swig_getmethods__["exec_volume"] = _ama.MDTickExecution_exec_volume_get
    if _newclass:exec_volume = _swig_property(_ama.MDTickExecution_exec_volume_get, _ama.MDTickExecution_exec_volume_set)
    __swig_setmethods__["value_trade"] = _ama.MDTickExecution_value_trade_set
    __swig_getmethods__["value_trade"] = _ama.MDTickExecution_value_trade_get
    if _newclass:value_trade = _swig_property(_ama.MDTickExecution_value_trade_get, _ama.MDTickExecution_value_trade_set)
    __swig_setmethods__["bid_appl_seq_num"] = _ama.MDTickExecution_bid_appl_seq_num_set
    __swig_getmethods__["bid_appl_seq_num"] = _ama.MDTickExecution_bid_appl_seq_num_get
    if _newclass:bid_appl_seq_num = _swig_property(_ama.MDTickExecution_bid_appl_seq_num_get, _ama.MDTickExecution_bid_appl_seq_num_set)
    __swig_setmethods__["offer_appl_seq_num"] = _ama.MDTickExecution_offer_appl_seq_num_set
    __swig_getmethods__["offer_appl_seq_num"] = _ama.MDTickExecution_offer_appl_seq_num_get
    if _newclass:offer_appl_seq_num = _swig_property(_ama.MDTickExecution_offer_appl_seq_num_get, _ama.MDTickExecution_offer_appl_seq_num_set)
    __swig_setmethods__["side"] = _ama.MDTickExecution_side_set
    __swig_getmethods__["side"] = _ama.MDTickExecution_side_get
    if _newclass:side = _swig_property(_ama.MDTickExecution_side_get, _ama.MDTickExecution_side_set)
    __swig_setmethods__["exec_type"] = _ama.MDTickExecution_exec_type_set
    __swig_getmethods__["exec_type"] = _ama.MDTickExecution_exec_type_get
    if _newclass:exec_type = _swig_property(_ama.MDTickExecution_exec_type_get, _ama.MDTickExecution_exec_type_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDTickExecution_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDTickExecution_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDTickExecution_md_stream_id_get, _ama.MDTickExecution_md_stream_id_set)
    __swig_setmethods__["biz_index"] = _ama.MDTickExecution_biz_index_set
    __swig_getmethods__["biz_index"] = _ama.MDTickExecution_biz_index_get
    if _newclass:biz_index = _swig_property(_ama.MDTickExecution_biz_index_get, _ama.MDTickExecution_biz_index_set)
    __swig_setmethods__["variety_category"] = _ama.MDTickExecution_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDTickExecution_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDTickExecution_variety_category_get, _ama.MDTickExecution_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDTickExecution()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDTickExecution
    __del__ = lambda self : None;
MDTickExecution_swigregister = _ama.MDTickExecution_swigregister
MDTickExecution_swigregister(MDTickExecution)

class MDOrderQueue(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDOrderQueue, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDOrderQueue, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDOrderQueue_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDOrderQueue_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDOrderQueue_market_type_get, _ama.MDOrderQueue_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDOrderQueue_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDOrderQueue_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDOrderQueue_security_code_get, _ama.MDOrderQueue_security_code_set)
    __swig_setmethods__["order_time"] = _ama.MDOrderQueue_order_time_set
    __swig_getmethods__["order_time"] = _ama.MDOrderQueue_order_time_get
    if _newclass:order_time = _swig_property(_ama.MDOrderQueue_order_time_get, _ama.MDOrderQueue_order_time_set)
    __swig_setmethods__["side"] = _ama.MDOrderQueue_side_set
    __swig_getmethods__["side"] = _ama.MDOrderQueue_side_get
    if _newclass:side = _swig_property(_ama.MDOrderQueue_side_get, _ama.MDOrderQueue_side_set)
    __swig_setmethods__["order_price"] = _ama.MDOrderQueue_order_price_set
    __swig_getmethods__["order_price"] = _ama.MDOrderQueue_order_price_get
    if _newclass:order_price = _swig_property(_ama.MDOrderQueue_order_price_get, _ama.MDOrderQueue_order_price_set)
    __swig_setmethods__["order_volume"] = _ama.MDOrderQueue_order_volume_set
    __swig_getmethods__["order_volume"] = _ama.MDOrderQueue_order_volume_get
    if _newclass:order_volume = _swig_property(_ama.MDOrderQueue_order_volume_get, _ama.MDOrderQueue_order_volume_set)
    __swig_setmethods__["num_of_orders"] = _ama.MDOrderQueue_num_of_orders_set
    __swig_getmethods__["num_of_orders"] = _ama.MDOrderQueue_num_of_orders_get
    if _newclass:num_of_orders = _swig_property(_ama.MDOrderQueue_num_of_orders_get, _ama.MDOrderQueue_num_of_orders_set)
    __swig_setmethods__["items"] = _ama.MDOrderQueue_items_set
    __swig_getmethods__["items"] = _ama.MDOrderQueue_items_get
    if _newclass:items = _swig_property(_ama.MDOrderQueue_items_get, _ama.MDOrderQueue_items_set)
    __swig_setmethods__["volume"] = _ama.MDOrderQueue_volume_set
    __swig_getmethods__["volume"] = _ama.MDOrderQueue_volume_get
    if _newclass:volume = _swig_property(_ama.MDOrderQueue_volume_get, _ama.MDOrderQueue_volume_set)
    __swig_setmethods__["channel_no"] = _ama.MDOrderQueue_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDOrderQueue_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDOrderQueue_channel_no_get, _ama.MDOrderQueue_channel_no_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDOrderQueue_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDOrderQueue_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDOrderQueue_md_stream_id_get, _ama.MDOrderQueue_md_stream_id_set)
    __swig_setmethods__["variety_category"] = _ama.MDOrderQueue_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDOrderQueue_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDOrderQueue_variety_category_get, _ama.MDOrderQueue_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDOrderQueue()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDOrderQueue
    __del__ = lambda self : None;
MDOrderQueue_swigregister = _ama.MDOrderQueue_swigregister
MDOrderQueue_swigregister(MDOrderQueue)

class MDOptionBasicInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDOptionBasicInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDOptionBasicInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDOptionBasicInfo_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDOptionBasicInfo_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDOptionBasicInfo_market_type_get, _ama.MDOptionBasicInfo_market_type_set)
    __swig_setmethods__["security_id"] = _ama.MDOptionBasicInfo_security_id_set
    __swig_getmethods__["security_id"] = _ama.MDOptionBasicInfo_security_id_get
    if _newclass:security_id = _swig_property(_ama.MDOptionBasicInfo_security_id_get, _ama.MDOptionBasicInfo_security_id_set)
    __swig_setmethods__["contract_id"] = _ama.MDOptionBasicInfo_contract_id_set
    __swig_getmethods__["contract_id"] = _ama.MDOptionBasicInfo_contract_id_get
    if _newclass:contract_id = _swig_property(_ama.MDOptionBasicInfo_contract_id_get, _ama.MDOptionBasicInfo_contract_id_set)
    __swig_setmethods__["contract_symbol"] = _ama.MDOptionBasicInfo_contract_symbol_set
    __swig_getmethods__["contract_symbol"] = _ama.MDOptionBasicInfo_contract_symbol_get
    if _newclass:contract_symbol = _swig_property(_ama.MDOptionBasicInfo_contract_symbol_get, _ama.MDOptionBasicInfo_contract_symbol_set)
    __swig_setmethods__["underlying_security_id"] = _ama.MDOptionBasicInfo_underlying_security_id_set
    __swig_getmethods__["underlying_security_id"] = _ama.MDOptionBasicInfo_underlying_security_id_get
    if _newclass:underlying_security_id = _swig_property(_ama.MDOptionBasicInfo_underlying_security_id_get, _ama.MDOptionBasicInfo_underlying_security_id_set)
    __swig_setmethods__["underlying_symbol"] = _ama.MDOptionBasicInfo_underlying_symbol_set
    __swig_getmethods__["underlying_symbol"] = _ama.MDOptionBasicInfo_underlying_symbol_get
    if _newclass:underlying_symbol = _swig_property(_ama.MDOptionBasicInfo_underlying_symbol_get, _ama.MDOptionBasicInfo_underlying_symbol_set)
    __swig_setmethods__["underlying_type"] = _ama.MDOptionBasicInfo_underlying_type_set
    __swig_getmethods__["underlying_type"] = _ama.MDOptionBasicInfo_underlying_type_get
    if _newclass:underlying_type = _swig_property(_ama.MDOptionBasicInfo_underlying_type_get, _ama.MDOptionBasicInfo_underlying_type_set)
    __swig_setmethods__["option_type"] = _ama.MDOptionBasicInfo_option_type_set
    __swig_getmethods__["option_type"] = _ama.MDOptionBasicInfo_option_type_get
    if _newclass:option_type = _swig_property(_ama.MDOptionBasicInfo_option_type_get, _ama.MDOptionBasicInfo_option_type_set)
    __swig_setmethods__["call_or_put"] = _ama.MDOptionBasicInfo_call_or_put_set
    __swig_getmethods__["call_or_put"] = _ama.MDOptionBasicInfo_call_or_put_get
    if _newclass:call_or_put = _swig_property(_ama.MDOptionBasicInfo_call_or_put_get, _ama.MDOptionBasicInfo_call_or_put_set)
    __swig_setmethods__["contract_multiplieri_unit"] = _ama.MDOptionBasicInfo_contract_multiplieri_unit_set
    __swig_getmethods__["contract_multiplieri_unit"] = _ama.MDOptionBasicInfo_contract_multiplieri_unit_get
    if _newclass:contract_multiplieri_unit = _swig_property(_ama.MDOptionBasicInfo_contract_multiplieri_unit_get, _ama.MDOptionBasicInfo_contract_multiplieri_unit_set)
    __swig_setmethods__["exercise_price"] = _ama.MDOptionBasicInfo_exercise_price_set
    __swig_getmethods__["exercise_price"] = _ama.MDOptionBasicInfo_exercise_price_get
    if _newclass:exercise_price = _swig_property(_ama.MDOptionBasicInfo_exercise_price_get, _ama.MDOptionBasicInfo_exercise_price_set)
    __swig_setmethods__["start_date"] = _ama.MDOptionBasicInfo_start_date_set
    __swig_getmethods__["start_date"] = _ama.MDOptionBasicInfo_start_date_get
    if _newclass:start_date = _swig_property(_ama.MDOptionBasicInfo_start_date_get, _ama.MDOptionBasicInfo_start_date_set)
    __swig_setmethods__["end_date"] = _ama.MDOptionBasicInfo_end_date_set
    __swig_getmethods__["end_date"] = _ama.MDOptionBasicInfo_end_date_get
    if _newclass:end_date = _swig_property(_ama.MDOptionBasicInfo_end_date_get, _ama.MDOptionBasicInfo_end_date_set)
    __swig_setmethods__["exercise_date"] = _ama.MDOptionBasicInfo_exercise_date_set
    __swig_getmethods__["exercise_date"] = _ama.MDOptionBasicInfo_exercise_date_get
    if _newclass:exercise_date = _swig_property(_ama.MDOptionBasicInfo_exercise_date_get, _ama.MDOptionBasicInfo_exercise_date_set)
    __swig_setmethods__["delivery_date"] = _ama.MDOptionBasicInfo_delivery_date_set
    __swig_getmethods__["delivery_date"] = _ama.MDOptionBasicInfo_delivery_date_get
    if _newclass:delivery_date = _swig_property(_ama.MDOptionBasicInfo_delivery_date_get, _ama.MDOptionBasicInfo_delivery_date_set)
    __swig_setmethods__["expire_date"] = _ama.MDOptionBasicInfo_expire_date_set
    __swig_getmethods__["expire_date"] = _ama.MDOptionBasicInfo_expire_date_get
    if _newclass:expire_date = _swig_property(_ama.MDOptionBasicInfo_expire_date_get, _ama.MDOptionBasicInfo_expire_date_set)
    __swig_setmethods__["update_version"] = _ama.MDOptionBasicInfo_update_version_set
    __swig_getmethods__["update_version"] = _ama.MDOptionBasicInfo_update_version_get
    if _newclass:update_version = _swig_property(_ama.MDOptionBasicInfo_update_version_get, _ama.MDOptionBasicInfo_update_version_set)
    __swig_setmethods__["total_long_position"] = _ama.MDOptionBasicInfo_total_long_position_set
    __swig_getmethods__["total_long_position"] = _ama.MDOptionBasicInfo_total_long_position_get
    if _newclass:total_long_position = _swig_property(_ama.MDOptionBasicInfo_total_long_position_get, _ama.MDOptionBasicInfo_total_long_position_set)
    __swig_setmethods__["pre_close_price"] = _ama.MDOptionBasicInfo_pre_close_price_set
    __swig_getmethods__["pre_close_price"] = _ama.MDOptionBasicInfo_pre_close_price_get
    if _newclass:pre_close_price = _swig_property(_ama.MDOptionBasicInfo_pre_close_price_get, _ama.MDOptionBasicInfo_pre_close_price_set)
    __swig_setmethods__["pre_settl_price"] = _ama.MDOptionBasicInfo_pre_settl_price_set
    __swig_getmethods__["pre_settl_price"] = _ama.MDOptionBasicInfo_pre_settl_price_get
    if _newclass:pre_settl_price = _swig_property(_ama.MDOptionBasicInfo_pre_settl_price_get, _ama.MDOptionBasicInfo_pre_settl_price_set)
    __swig_setmethods__["underlying_pre_close_price"] = _ama.MDOptionBasicInfo_underlying_pre_close_price_set
    __swig_getmethods__["underlying_pre_close_price"] = _ama.MDOptionBasicInfo_underlying_pre_close_price_get
    if _newclass:underlying_pre_close_price = _swig_property(_ama.MDOptionBasicInfo_underlying_pre_close_price_get, _ama.MDOptionBasicInfo_underlying_pre_close_price_set)
    __swig_setmethods__["price_limit_type"] = _ama.MDOptionBasicInfo_price_limit_type_set
    __swig_getmethods__["price_limit_type"] = _ama.MDOptionBasicInfo_price_limit_type_get
    if _newclass:price_limit_type = _swig_property(_ama.MDOptionBasicInfo_price_limit_type_get, _ama.MDOptionBasicInfo_price_limit_type_set)
    __swig_setmethods__["high_limited"] = _ama.MDOptionBasicInfo_high_limited_set
    __swig_getmethods__["high_limited"] = _ama.MDOptionBasicInfo_high_limited_get
    if _newclass:high_limited = _swig_property(_ama.MDOptionBasicInfo_high_limited_get, _ama.MDOptionBasicInfo_high_limited_set)
    __swig_setmethods__["low_limited"] = _ama.MDOptionBasicInfo_low_limited_set
    __swig_getmethods__["low_limited"] = _ama.MDOptionBasicInfo_low_limited_get
    if _newclass:low_limited = _swig_property(_ama.MDOptionBasicInfo_low_limited_get, _ama.MDOptionBasicInfo_low_limited_set)
    __swig_setmethods__["margin_unit"] = _ama.MDOptionBasicInfo_margin_unit_set
    __swig_getmethods__["margin_unit"] = _ama.MDOptionBasicInfo_margin_unit_get
    if _newclass:margin_unit = _swig_property(_ama.MDOptionBasicInfo_margin_unit_get, _ama.MDOptionBasicInfo_margin_unit_set)
    __swig_setmethods__["margin_ratio_param1"] = _ama.MDOptionBasicInfo_margin_ratio_param1_set
    __swig_getmethods__["margin_ratio_param1"] = _ama.MDOptionBasicInfo_margin_ratio_param1_get
    if _newclass:margin_ratio_param1 = _swig_property(_ama.MDOptionBasicInfo_margin_ratio_param1_get, _ama.MDOptionBasicInfo_margin_ratio_param1_set)
    __swig_setmethods__["margin_ratio_param2"] = _ama.MDOptionBasicInfo_margin_ratio_param2_set
    __swig_getmethods__["margin_ratio_param2"] = _ama.MDOptionBasicInfo_margin_ratio_param2_get
    if _newclass:margin_ratio_param2 = _swig_property(_ama.MDOptionBasicInfo_margin_ratio_param2_get, _ama.MDOptionBasicInfo_margin_ratio_param2_set)
    __swig_setmethods__["round_lot"] = _ama.MDOptionBasicInfo_round_lot_set
    __swig_getmethods__["round_lot"] = _ama.MDOptionBasicInfo_round_lot_get
    if _newclass:round_lot = _swig_property(_ama.MDOptionBasicInfo_round_lot_get, _ama.MDOptionBasicInfo_round_lot_set)
    __swig_setmethods__["lmt_ord_min_floor"] = _ama.MDOptionBasicInfo_lmt_ord_min_floor_set
    __swig_getmethods__["lmt_ord_min_floor"] = _ama.MDOptionBasicInfo_lmt_ord_min_floor_get
    if _newclass:lmt_ord_min_floor = _swig_property(_ama.MDOptionBasicInfo_lmt_ord_min_floor_get, _ama.MDOptionBasicInfo_lmt_ord_min_floor_set)
    __swig_setmethods__["lmt_ord_max_floor"] = _ama.MDOptionBasicInfo_lmt_ord_max_floor_set
    __swig_getmethods__["lmt_ord_max_floor"] = _ama.MDOptionBasicInfo_lmt_ord_max_floor_get
    if _newclass:lmt_ord_max_floor = _swig_property(_ama.MDOptionBasicInfo_lmt_ord_max_floor_get, _ama.MDOptionBasicInfo_lmt_ord_max_floor_set)
    __swig_setmethods__["mkt_ord_min_floor"] = _ama.MDOptionBasicInfo_mkt_ord_min_floor_set
    __swig_getmethods__["mkt_ord_min_floor"] = _ama.MDOptionBasicInfo_mkt_ord_min_floor_get
    if _newclass:mkt_ord_min_floor = _swig_property(_ama.MDOptionBasicInfo_mkt_ord_min_floor_get, _ama.MDOptionBasicInfo_mkt_ord_min_floor_set)
    __swig_setmethods__["mkt_ord_max_floor"] = _ama.MDOptionBasicInfo_mkt_ord_max_floor_set
    __swig_getmethods__["mkt_ord_max_floor"] = _ama.MDOptionBasicInfo_mkt_ord_max_floor_get
    if _newclass:mkt_ord_max_floor = _swig_property(_ama.MDOptionBasicInfo_mkt_ord_max_floor_get, _ama.MDOptionBasicInfo_mkt_ord_max_floor_set)
    __swig_setmethods__["tick_size"] = _ama.MDOptionBasicInfo_tick_size_set
    __swig_getmethods__["tick_size"] = _ama.MDOptionBasicInfo_tick_size_get
    if _newclass:tick_size = _swig_property(_ama.MDOptionBasicInfo_tick_size_get, _ama.MDOptionBasicInfo_tick_size_set)
    __swig_setmethods__["security_status_flag"] = _ama.MDOptionBasicInfo_security_status_flag_set
    __swig_getmethods__["security_status_flag"] = _ama.MDOptionBasicInfo_security_status_flag_get
    if _newclass:security_status_flag = _swig_property(_ama.MDOptionBasicInfo_security_status_flag_get, _ama.MDOptionBasicInfo_security_status_flag_set)
    def __init__(self): 
        this = _ama.new_MDOptionBasicInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDOptionBasicInfo
    __del__ = lambda self : None;
MDOptionBasicInfo_swigregister = _ama.MDOptionBasicInfo_swigregister
MDOptionBasicInfo_swigregister(MDOptionBasicInfo)

class MDOptionSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDOptionSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDOptionSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDOptionSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDOptionSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDOptionSnapshot_market_type_get, _ama.MDOptionSnapshot_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDOptionSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDOptionSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDOptionSnapshot_security_code_get, _ama.MDOptionSnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDOptionSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDOptionSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDOptionSnapshot_orig_time_get, _ama.MDOptionSnapshot_orig_time_set)
    __swig_setmethods__["pre_settle_price"] = _ama.MDOptionSnapshot_pre_settle_price_set
    __swig_getmethods__["pre_settle_price"] = _ama.MDOptionSnapshot_pre_settle_price_get
    if _newclass:pre_settle_price = _swig_property(_ama.MDOptionSnapshot_pre_settle_price_get, _ama.MDOptionSnapshot_pre_settle_price_set)
    __swig_setmethods__["pre_close_price"] = _ama.MDOptionSnapshot_pre_close_price_set
    __swig_getmethods__["pre_close_price"] = _ama.MDOptionSnapshot_pre_close_price_get
    if _newclass:pre_close_price = _swig_property(_ama.MDOptionSnapshot_pre_close_price_get, _ama.MDOptionSnapshot_pre_close_price_set)
    __swig_setmethods__["open_price"] = _ama.MDOptionSnapshot_open_price_set
    __swig_getmethods__["open_price"] = _ama.MDOptionSnapshot_open_price_get
    if _newclass:open_price = _swig_property(_ama.MDOptionSnapshot_open_price_get, _ama.MDOptionSnapshot_open_price_set)
    __swig_setmethods__["auction_price"] = _ama.MDOptionSnapshot_auction_price_set
    __swig_getmethods__["auction_price"] = _ama.MDOptionSnapshot_auction_price_get
    if _newclass:auction_price = _swig_property(_ama.MDOptionSnapshot_auction_price_get, _ama.MDOptionSnapshot_auction_price_set)
    __swig_setmethods__["auction_volume"] = _ama.MDOptionSnapshot_auction_volume_set
    __swig_getmethods__["auction_volume"] = _ama.MDOptionSnapshot_auction_volume_get
    if _newclass:auction_volume = _swig_property(_ama.MDOptionSnapshot_auction_volume_get, _ama.MDOptionSnapshot_auction_volume_set)
    __swig_setmethods__["high_price"] = _ama.MDOptionSnapshot_high_price_set
    __swig_getmethods__["high_price"] = _ama.MDOptionSnapshot_high_price_get
    if _newclass:high_price = _swig_property(_ama.MDOptionSnapshot_high_price_get, _ama.MDOptionSnapshot_high_price_set)
    __swig_setmethods__["low_price"] = _ama.MDOptionSnapshot_low_price_set
    __swig_getmethods__["low_price"] = _ama.MDOptionSnapshot_low_price_get
    if _newclass:low_price = _swig_property(_ama.MDOptionSnapshot_low_price_get, _ama.MDOptionSnapshot_low_price_set)
    __swig_setmethods__["last_price"] = _ama.MDOptionSnapshot_last_price_set
    __swig_getmethods__["last_price"] = _ama.MDOptionSnapshot_last_price_get
    if _newclass:last_price = _swig_property(_ama.MDOptionSnapshot_last_price_get, _ama.MDOptionSnapshot_last_price_set)
    __swig_setmethods__["close_price"] = _ama.MDOptionSnapshot_close_price_set
    __swig_getmethods__["close_price"] = _ama.MDOptionSnapshot_close_price_get
    if _newclass:close_price = _swig_property(_ama.MDOptionSnapshot_close_price_get, _ama.MDOptionSnapshot_close_price_set)
    __swig_setmethods__["high_limited"] = _ama.MDOptionSnapshot_high_limited_set
    __swig_getmethods__["high_limited"] = _ama.MDOptionSnapshot_high_limited_get
    if _newclass:high_limited = _swig_property(_ama.MDOptionSnapshot_high_limited_get, _ama.MDOptionSnapshot_high_limited_set)
    __swig_setmethods__["low_limited"] = _ama.MDOptionSnapshot_low_limited_set
    __swig_getmethods__["low_limited"] = _ama.MDOptionSnapshot_low_limited_get
    if _newclass:low_limited = _swig_property(_ama.MDOptionSnapshot_low_limited_get, _ama.MDOptionSnapshot_low_limited_set)
    __swig_setmethods__["bid_price"] = _ama.MDOptionSnapshot_bid_price_set
    __swig_getmethods__["bid_price"] = _ama.MDOptionSnapshot_bid_price_get
    if _newclass:bid_price = _swig_property(_ama.MDOptionSnapshot_bid_price_get, _ama.MDOptionSnapshot_bid_price_set)
    __swig_setmethods__["bid_volume"] = _ama.MDOptionSnapshot_bid_volume_set
    __swig_getmethods__["bid_volume"] = _ama.MDOptionSnapshot_bid_volume_get
    if _newclass:bid_volume = _swig_property(_ama.MDOptionSnapshot_bid_volume_get, _ama.MDOptionSnapshot_bid_volume_set)
    __swig_setmethods__["offer_price"] = _ama.MDOptionSnapshot_offer_price_set
    __swig_getmethods__["offer_price"] = _ama.MDOptionSnapshot_offer_price_get
    if _newclass:offer_price = _swig_property(_ama.MDOptionSnapshot_offer_price_get, _ama.MDOptionSnapshot_offer_price_set)
    __swig_setmethods__["offer_volume"] = _ama.MDOptionSnapshot_offer_volume_set
    __swig_getmethods__["offer_volume"] = _ama.MDOptionSnapshot_offer_volume_get
    if _newclass:offer_volume = _swig_property(_ama.MDOptionSnapshot_offer_volume_get, _ama.MDOptionSnapshot_offer_volume_set)
    __swig_setmethods__["settle_price"] = _ama.MDOptionSnapshot_settle_price_set
    __swig_getmethods__["settle_price"] = _ama.MDOptionSnapshot_settle_price_get
    if _newclass:settle_price = _swig_property(_ama.MDOptionSnapshot_settle_price_get, _ama.MDOptionSnapshot_settle_price_set)
    __swig_setmethods__["total_long_position"] = _ama.MDOptionSnapshot_total_long_position_set
    __swig_getmethods__["total_long_position"] = _ama.MDOptionSnapshot_total_long_position_get
    if _newclass:total_long_position = _swig_property(_ama.MDOptionSnapshot_total_long_position_get, _ama.MDOptionSnapshot_total_long_position_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDOptionSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDOptionSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDOptionSnapshot_total_volume_trade_get, _ama.MDOptionSnapshot_total_volume_trade_set)
    __swig_setmethods__["total_value_trade"] = _ama.MDOptionSnapshot_total_value_trade_set
    __swig_getmethods__["total_value_trade"] = _ama.MDOptionSnapshot_total_value_trade_get
    if _newclass:total_value_trade = _swig_property(_ama.MDOptionSnapshot_total_value_trade_get, _ama.MDOptionSnapshot_total_value_trade_set)
    __swig_setmethods__["trading_phase_code"] = _ama.MDOptionSnapshot_trading_phase_code_set
    __swig_getmethods__["trading_phase_code"] = _ama.MDOptionSnapshot_trading_phase_code_get
    if _newclass:trading_phase_code = _swig_property(_ama.MDOptionSnapshot_trading_phase_code_get, _ama.MDOptionSnapshot_trading_phase_code_set)
    __swig_setmethods__["channel_no"] = _ama.MDOptionSnapshot_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDOptionSnapshot_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDOptionSnapshot_channel_no_get, _ama.MDOptionSnapshot_channel_no_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDOptionSnapshot_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDOptionSnapshot_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDOptionSnapshot_md_stream_id_get, _ama.MDOptionSnapshot_md_stream_id_set)
    __swig_setmethods__["last_trade_time"] = _ama.MDOptionSnapshot_last_trade_time_set
    __swig_getmethods__["last_trade_time"] = _ama.MDOptionSnapshot_last_trade_time_get
    if _newclass:last_trade_time = _swig_property(_ama.MDOptionSnapshot_last_trade_time_get, _ama.MDOptionSnapshot_last_trade_time_set)
    __swig_setmethods__["ref_price"] = _ama.MDOptionSnapshot_ref_price_set
    __swig_getmethods__["ref_price"] = _ama.MDOptionSnapshot_ref_price_get
    if _newclass:ref_price = _swig_property(_ama.MDOptionSnapshot_ref_price_get, _ama.MDOptionSnapshot_ref_price_set)
    __swig_setmethods__["variety_category"] = _ama.MDOptionSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDOptionSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDOptionSnapshot_variety_category_get, _ama.MDOptionSnapshot_variety_category_set)
    __swig_setmethods__["contract_type"] = _ama.MDOptionSnapshot_contract_type_set
    __swig_getmethods__["contract_type"] = _ama.MDOptionSnapshot_contract_type_get
    if _newclass:contract_type = _swig_property(_ama.MDOptionSnapshot_contract_type_get, _ama.MDOptionSnapshot_contract_type_set)
    __swig_setmethods__["expire_date"] = _ama.MDOptionSnapshot_expire_date_set
    __swig_getmethods__["expire_date"] = _ama.MDOptionSnapshot_expire_date_get
    if _newclass:expire_date = _swig_property(_ama.MDOptionSnapshot_expire_date_get, _ama.MDOptionSnapshot_expire_date_set)
    __swig_setmethods__["underlying_security_code"] = _ama.MDOptionSnapshot_underlying_security_code_set
    __swig_getmethods__["underlying_security_code"] = _ama.MDOptionSnapshot_underlying_security_code_get
    if _newclass:underlying_security_code = _swig_property(_ama.MDOptionSnapshot_underlying_security_code_get, _ama.MDOptionSnapshot_underlying_security_code_set)
    __swig_setmethods__["exercise_price"] = _ama.MDOptionSnapshot_exercise_price_set
    __swig_getmethods__["exercise_price"] = _ama.MDOptionSnapshot_exercise_price_get
    if _newclass:exercise_price = _swig_property(_ama.MDOptionSnapshot_exercise_price_get, _ama.MDOptionSnapshot_exercise_price_set)
    def __init__(self): 
        this = _ama.new_MDOptionSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDOptionSnapshot
    __del__ = lambda self : None;
MDOptionSnapshot_swigregister = _ama.MDOptionSnapshot_swigregister
MDOptionSnapshot_swigregister(MDOptionSnapshot)

class MDHKTSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDHKTSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDHKTSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDHKTSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDHKTSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDHKTSnapshot_market_type_get, _ama.MDHKTSnapshot_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDHKTSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDHKTSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDHKTSnapshot_security_code_get, _ama.MDHKTSnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDHKTSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDHKTSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDHKTSnapshot_orig_time_get, _ama.MDHKTSnapshot_orig_time_set)
    __swig_setmethods__["pre_close_price"] = _ama.MDHKTSnapshot_pre_close_price_set
    __swig_getmethods__["pre_close_price"] = _ama.MDHKTSnapshot_pre_close_price_get
    if _newclass:pre_close_price = _swig_property(_ama.MDHKTSnapshot_pre_close_price_get, _ama.MDHKTSnapshot_pre_close_price_set)
    __swig_setmethods__["nominal_price"] = _ama.MDHKTSnapshot_nominal_price_set
    __swig_getmethods__["nominal_price"] = _ama.MDHKTSnapshot_nominal_price_get
    if _newclass:nominal_price = _swig_property(_ama.MDHKTSnapshot_nominal_price_get, _ama.MDHKTSnapshot_nominal_price_set)
    __swig_setmethods__["high_price"] = _ama.MDHKTSnapshot_high_price_set
    __swig_getmethods__["high_price"] = _ama.MDHKTSnapshot_high_price_get
    if _newclass:high_price = _swig_property(_ama.MDHKTSnapshot_high_price_get, _ama.MDHKTSnapshot_high_price_set)
    __swig_setmethods__["low_price"] = _ama.MDHKTSnapshot_low_price_set
    __swig_getmethods__["low_price"] = _ama.MDHKTSnapshot_low_price_get
    if _newclass:low_price = _swig_property(_ama.MDHKTSnapshot_low_price_get, _ama.MDHKTSnapshot_low_price_set)
    __swig_setmethods__["last_price"] = _ama.MDHKTSnapshot_last_price_set
    __swig_getmethods__["last_price"] = _ama.MDHKTSnapshot_last_price_get
    if _newclass:last_price = _swig_property(_ama.MDHKTSnapshot_last_price_get, _ama.MDHKTSnapshot_last_price_set)
    __swig_setmethods__["bid_price"] = _ama.MDHKTSnapshot_bid_price_set
    __swig_getmethods__["bid_price"] = _ama.MDHKTSnapshot_bid_price_get
    if _newclass:bid_price = _swig_property(_ama.MDHKTSnapshot_bid_price_get, _ama.MDHKTSnapshot_bid_price_set)
    __swig_setmethods__["bid_volume"] = _ama.MDHKTSnapshot_bid_volume_set
    __swig_getmethods__["bid_volume"] = _ama.MDHKTSnapshot_bid_volume_get
    if _newclass:bid_volume = _swig_property(_ama.MDHKTSnapshot_bid_volume_get, _ama.MDHKTSnapshot_bid_volume_set)
    __swig_setmethods__["offer_price"] = _ama.MDHKTSnapshot_offer_price_set
    __swig_getmethods__["offer_price"] = _ama.MDHKTSnapshot_offer_price_get
    if _newclass:offer_price = _swig_property(_ama.MDHKTSnapshot_offer_price_get, _ama.MDHKTSnapshot_offer_price_set)
    __swig_setmethods__["offer_volume"] = _ama.MDHKTSnapshot_offer_volume_set
    __swig_getmethods__["offer_volume"] = _ama.MDHKTSnapshot_offer_volume_get
    if _newclass:offer_volume = _swig_property(_ama.MDHKTSnapshot_offer_volume_get, _ama.MDHKTSnapshot_offer_volume_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDHKTSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDHKTSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDHKTSnapshot_total_volume_trade_get, _ama.MDHKTSnapshot_total_volume_trade_set)
    __swig_setmethods__["total_value_trade"] = _ama.MDHKTSnapshot_total_value_trade_set
    __swig_getmethods__["total_value_trade"] = _ama.MDHKTSnapshot_total_value_trade_get
    if _newclass:total_value_trade = _swig_property(_ama.MDHKTSnapshot_total_value_trade_get, _ama.MDHKTSnapshot_total_value_trade_set)
    __swig_setmethods__["trading_phase_code"] = _ama.MDHKTSnapshot_trading_phase_code_set
    __swig_getmethods__["trading_phase_code"] = _ama.MDHKTSnapshot_trading_phase_code_get
    if _newclass:trading_phase_code = _swig_property(_ama.MDHKTSnapshot_trading_phase_code_get, _ama.MDHKTSnapshot_trading_phase_code_set)
    __swig_setmethods__["channel_no"] = _ama.MDHKTSnapshot_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDHKTSnapshot_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDHKTSnapshot_channel_no_get, _ama.MDHKTSnapshot_channel_no_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDHKTSnapshot_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDHKTSnapshot_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDHKTSnapshot_md_stream_id_get, _ama.MDHKTSnapshot_md_stream_id_set)
    __swig_setmethods__["ref_price"] = _ama.MDHKTSnapshot_ref_price_set
    __swig_getmethods__["ref_price"] = _ama.MDHKTSnapshot_ref_price_get
    if _newclass:ref_price = _swig_property(_ama.MDHKTSnapshot_ref_price_get, _ama.MDHKTSnapshot_ref_price_set)
    __swig_setmethods__["high_limited"] = _ama.MDHKTSnapshot_high_limited_set
    __swig_getmethods__["high_limited"] = _ama.MDHKTSnapshot_high_limited_get
    if _newclass:high_limited = _swig_property(_ama.MDHKTSnapshot_high_limited_get, _ama.MDHKTSnapshot_high_limited_set)
    __swig_setmethods__["low_limited"] = _ama.MDHKTSnapshot_low_limited_set
    __swig_getmethods__["low_limited"] = _ama.MDHKTSnapshot_low_limited_get
    if _newclass:low_limited = _swig_property(_ama.MDHKTSnapshot_low_limited_get, _ama.MDHKTSnapshot_low_limited_set)
    __swig_setmethods__["bid_price_limit_up"] = _ama.MDHKTSnapshot_bid_price_limit_up_set
    __swig_getmethods__["bid_price_limit_up"] = _ama.MDHKTSnapshot_bid_price_limit_up_get
    if _newclass:bid_price_limit_up = _swig_property(_ama.MDHKTSnapshot_bid_price_limit_up_get, _ama.MDHKTSnapshot_bid_price_limit_up_set)
    __swig_setmethods__["bid_price_limit_down"] = _ama.MDHKTSnapshot_bid_price_limit_down_set
    __swig_getmethods__["bid_price_limit_down"] = _ama.MDHKTSnapshot_bid_price_limit_down_get
    if _newclass:bid_price_limit_down = _swig_property(_ama.MDHKTSnapshot_bid_price_limit_down_get, _ama.MDHKTSnapshot_bid_price_limit_down_set)
    __swig_setmethods__["offer_price_limit_up"] = _ama.MDHKTSnapshot_offer_price_limit_up_set
    __swig_getmethods__["offer_price_limit_up"] = _ama.MDHKTSnapshot_offer_price_limit_up_get
    if _newclass:offer_price_limit_up = _swig_property(_ama.MDHKTSnapshot_offer_price_limit_up_get, _ama.MDHKTSnapshot_offer_price_limit_up_set)
    __swig_setmethods__["offer_price_limit_down"] = _ama.MDHKTSnapshot_offer_price_limit_down_set
    __swig_getmethods__["offer_price_limit_down"] = _ama.MDHKTSnapshot_offer_price_limit_down_get
    if _newclass:offer_price_limit_down = _swig_property(_ama.MDHKTSnapshot_offer_price_limit_down_get, _ama.MDHKTSnapshot_offer_price_limit_down_set)
    __swig_setmethods__["variety_category"] = _ama.MDHKTSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDHKTSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDHKTSnapshot_variety_category_get, _ama.MDHKTSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDHKTSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDHKTSnapshot
    __del__ = lambda self : None;
MDHKTSnapshot_swigregister = _ama.MDHKTSnapshot_swigregister
MDHKTSnapshot_swigregister(MDHKTSnapshot)

class MDHKTVCM(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDHKTVCM, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDHKTVCM, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDHKTVCM_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDHKTVCM_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDHKTVCM_market_type_get, _ama.MDHKTVCM_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDHKTVCM_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDHKTVCM_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDHKTVCM_security_code_get, _ama.MDHKTVCM_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDHKTVCM_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDHKTVCM_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDHKTVCM_orig_time_get, _ama.MDHKTVCM_orig_time_set)
    __swig_setmethods__["start_time"] = _ama.MDHKTVCM_start_time_set
    __swig_getmethods__["start_time"] = _ama.MDHKTVCM_start_time_get
    if _newclass:start_time = _swig_property(_ama.MDHKTVCM_start_time_get, _ama.MDHKTVCM_start_time_set)
    __swig_setmethods__["end_time"] = _ama.MDHKTVCM_end_time_set
    __swig_getmethods__["end_time"] = _ama.MDHKTVCM_end_time_get
    if _newclass:end_time = _swig_property(_ama.MDHKTVCM_end_time_get, _ama.MDHKTVCM_end_time_set)
    __swig_setmethods__["ref_price"] = _ama.MDHKTVCM_ref_price_set
    __swig_getmethods__["ref_price"] = _ama.MDHKTVCM_ref_price_get
    if _newclass:ref_price = _swig_property(_ama.MDHKTVCM_ref_price_get, _ama.MDHKTVCM_ref_price_set)
    __swig_setmethods__["low_price"] = _ama.MDHKTVCM_low_price_set
    __swig_getmethods__["low_price"] = _ama.MDHKTVCM_low_price_get
    if _newclass:low_price = _swig_property(_ama.MDHKTVCM_low_price_get, _ama.MDHKTVCM_low_price_set)
    __swig_setmethods__["high_price"] = _ama.MDHKTVCM_high_price_set
    __swig_getmethods__["high_price"] = _ama.MDHKTVCM_high_price_get
    if _newclass:high_price = _swig_property(_ama.MDHKTVCM_high_price_get, _ama.MDHKTVCM_high_price_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDHKTVCM_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDHKTVCM_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDHKTVCM_md_stream_id_get, _ama.MDHKTVCM_md_stream_id_set)
    __swig_setmethods__["variety_category"] = _ama.MDHKTVCM_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDHKTVCM_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDHKTVCM_variety_category_get, _ama.MDHKTVCM_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDHKTVCM()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDHKTVCM
    __del__ = lambda self : None;
MDHKTVCM_swigregister = _ama.MDHKTVCM_swigregister
MDHKTVCM_swigregister(MDHKTVCM)

class MDAfterHourFixedPriceSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDAfterHourFixedPriceSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDAfterHourFixedPriceSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDAfterHourFixedPriceSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDAfterHourFixedPriceSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_market_type_get, _ama.MDAfterHourFixedPriceSnapshot_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDAfterHourFixedPriceSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDAfterHourFixedPriceSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_security_code_get, _ama.MDAfterHourFixedPriceSnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDAfterHourFixedPriceSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDAfterHourFixedPriceSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_orig_time_get, _ama.MDAfterHourFixedPriceSnapshot_orig_time_set)
    __swig_setmethods__["trading_phase_code"] = _ama.MDAfterHourFixedPriceSnapshot_trading_phase_code_set
    __swig_getmethods__["trading_phase_code"] = _ama.MDAfterHourFixedPriceSnapshot_trading_phase_code_get
    if _newclass:trading_phase_code = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_trading_phase_code_get, _ama.MDAfterHourFixedPriceSnapshot_trading_phase_code_set)
    __swig_setmethods__["close_price"] = _ama.MDAfterHourFixedPriceSnapshot_close_price_set
    __swig_getmethods__["close_price"] = _ama.MDAfterHourFixedPriceSnapshot_close_price_get
    if _newclass:close_price = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_close_price_get, _ama.MDAfterHourFixedPriceSnapshot_close_price_set)
    __swig_setmethods__["bid_price"] = _ama.MDAfterHourFixedPriceSnapshot_bid_price_set
    __swig_getmethods__["bid_price"] = _ama.MDAfterHourFixedPriceSnapshot_bid_price_get
    if _newclass:bid_price = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_bid_price_get, _ama.MDAfterHourFixedPriceSnapshot_bid_price_set)
    __swig_setmethods__["bid_volume"] = _ama.MDAfterHourFixedPriceSnapshot_bid_volume_set
    __swig_getmethods__["bid_volume"] = _ama.MDAfterHourFixedPriceSnapshot_bid_volume_get
    if _newclass:bid_volume = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_bid_volume_get, _ama.MDAfterHourFixedPriceSnapshot_bid_volume_set)
    __swig_setmethods__["offer_price"] = _ama.MDAfterHourFixedPriceSnapshot_offer_price_set
    __swig_getmethods__["offer_price"] = _ama.MDAfterHourFixedPriceSnapshot_offer_price_get
    if _newclass:offer_price = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_offer_price_get, _ama.MDAfterHourFixedPriceSnapshot_offer_price_set)
    __swig_setmethods__["offer_volume"] = _ama.MDAfterHourFixedPriceSnapshot_offer_volume_set
    __swig_getmethods__["offer_volume"] = _ama.MDAfterHourFixedPriceSnapshot_offer_volume_get
    if _newclass:offer_volume = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_offer_volume_get, _ama.MDAfterHourFixedPriceSnapshot_offer_volume_set)
    __swig_setmethods__["pre_close_price"] = _ama.MDAfterHourFixedPriceSnapshot_pre_close_price_set
    __swig_getmethods__["pre_close_price"] = _ama.MDAfterHourFixedPriceSnapshot_pre_close_price_get
    if _newclass:pre_close_price = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_pre_close_price_get, _ama.MDAfterHourFixedPriceSnapshot_pre_close_price_set)
    __swig_setmethods__["num_trades"] = _ama.MDAfterHourFixedPriceSnapshot_num_trades_set
    __swig_getmethods__["num_trades"] = _ama.MDAfterHourFixedPriceSnapshot_num_trades_get
    if _newclass:num_trades = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_num_trades_get, _ama.MDAfterHourFixedPriceSnapshot_num_trades_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDAfterHourFixedPriceSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDAfterHourFixedPriceSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_total_volume_trade_get, _ama.MDAfterHourFixedPriceSnapshot_total_volume_trade_set)
    __swig_setmethods__["total_value_trade"] = _ama.MDAfterHourFixedPriceSnapshot_total_value_trade_set
    __swig_getmethods__["total_value_trade"] = _ama.MDAfterHourFixedPriceSnapshot_total_value_trade_get
    if _newclass:total_value_trade = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_total_value_trade_get, _ama.MDAfterHourFixedPriceSnapshot_total_value_trade_set)
    __swig_setmethods__["total_bid_volume"] = _ama.MDAfterHourFixedPriceSnapshot_total_bid_volume_set
    __swig_getmethods__["total_bid_volume"] = _ama.MDAfterHourFixedPriceSnapshot_total_bid_volume_get
    if _newclass:total_bid_volume = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_total_bid_volume_get, _ama.MDAfterHourFixedPriceSnapshot_total_bid_volume_set)
    __swig_setmethods__["total_offer_volume"] = _ama.MDAfterHourFixedPriceSnapshot_total_offer_volume_set
    __swig_getmethods__["total_offer_volume"] = _ama.MDAfterHourFixedPriceSnapshot_total_offer_volume_get
    if _newclass:total_offer_volume = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_total_offer_volume_get, _ama.MDAfterHourFixedPriceSnapshot_total_offer_volume_set)
    __swig_setmethods__["channel_no"] = _ama.MDAfterHourFixedPriceSnapshot_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDAfterHourFixedPriceSnapshot_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_channel_no_get, _ama.MDAfterHourFixedPriceSnapshot_channel_no_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDAfterHourFixedPriceSnapshot_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDAfterHourFixedPriceSnapshot_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_md_stream_id_get, _ama.MDAfterHourFixedPriceSnapshot_md_stream_id_set)
    __swig_setmethods__["variety_category"] = _ama.MDAfterHourFixedPriceSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDAfterHourFixedPriceSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_variety_category_get, _ama.MDAfterHourFixedPriceSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDAfterHourFixedPriceSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDAfterHourFixedPriceSnapshot
    __del__ = lambda self : None;
MDAfterHourFixedPriceSnapshot_swigregister = _ama.MDAfterHourFixedPriceSnapshot_swigregister
MDAfterHourFixedPriceSnapshot_swigregister(MDAfterHourFixedPriceSnapshot)

class MDAfterHourFixedPriceTickExecution(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDAfterHourFixedPriceTickExecution, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDAfterHourFixedPriceTickExecution, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDAfterHourFixedPriceTickExecution_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDAfterHourFixedPriceTickExecution_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDAfterHourFixedPriceTickExecution_market_type_get, _ama.MDAfterHourFixedPriceTickExecution_market_type_set)
    __swig_setmethods__["appl_seq_num"] = _ama.MDAfterHourFixedPriceTickExecution_appl_seq_num_set
    __swig_getmethods__["appl_seq_num"] = _ama.MDAfterHourFixedPriceTickExecution_appl_seq_num_get
    if _newclass:appl_seq_num = _swig_property(_ama.MDAfterHourFixedPriceTickExecution_appl_seq_num_get, _ama.MDAfterHourFixedPriceTickExecution_appl_seq_num_set)
    __swig_setmethods__["security_code"] = _ama.MDAfterHourFixedPriceTickExecution_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDAfterHourFixedPriceTickExecution_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDAfterHourFixedPriceTickExecution_security_code_get, _ama.MDAfterHourFixedPriceTickExecution_security_code_set)
    __swig_setmethods__["exec_time"] = _ama.MDAfterHourFixedPriceTickExecution_exec_time_set
    __swig_getmethods__["exec_time"] = _ama.MDAfterHourFixedPriceTickExecution_exec_time_get
    if _newclass:exec_time = _swig_property(_ama.MDAfterHourFixedPriceTickExecution_exec_time_get, _ama.MDAfterHourFixedPriceTickExecution_exec_time_set)
    __swig_setmethods__["exec_price"] = _ama.MDAfterHourFixedPriceTickExecution_exec_price_set
    __swig_getmethods__["exec_price"] = _ama.MDAfterHourFixedPriceTickExecution_exec_price_get
    if _newclass:exec_price = _swig_property(_ama.MDAfterHourFixedPriceTickExecution_exec_price_get, _ama.MDAfterHourFixedPriceTickExecution_exec_price_set)
    __swig_setmethods__["exec_volume"] = _ama.MDAfterHourFixedPriceTickExecution_exec_volume_set
    __swig_getmethods__["exec_volume"] = _ama.MDAfterHourFixedPriceTickExecution_exec_volume_get
    if _newclass:exec_volume = _swig_property(_ama.MDAfterHourFixedPriceTickExecution_exec_volume_get, _ama.MDAfterHourFixedPriceTickExecution_exec_volume_set)
    __swig_setmethods__["value_trade"] = _ama.MDAfterHourFixedPriceTickExecution_value_trade_set
    __swig_getmethods__["value_trade"] = _ama.MDAfterHourFixedPriceTickExecution_value_trade_get
    if _newclass:value_trade = _swig_property(_ama.MDAfterHourFixedPriceTickExecution_value_trade_get, _ama.MDAfterHourFixedPriceTickExecution_value_trade_set)
    __swig_setmethods__["bid_appl_seq_num"] = _ama.MDAfterHourFixedPriceTickExecution_bid_appl_seq_num_set
    __swig_getmethods__["bid_appl_seq_num"] = _ama.MDAfterHourFixedPriceTickExecution_bid_appl_seq_num_get
    if _newclass:bid_appl_seq_num = _swig_property(_ama.MDAfterHourFixedPriceTickExecution_bid_appl_seq_num_get, _ama.MDAfterHourFixedPriceTickExecution_bid_appl_seq_num_set)
    __swig_setmethods__["offer_appl_seq_num"] = _ama.MDAfterHourFixedPriceTickExecution_offer_appl_seq_num_set
    __swig_getmethods__["offer_appl_seq_num"] = _ama.MDAfterHourFixedPriceTickExecution_offer_appl_seq_num_get
    if _newclass:offer_appl_seq_num = _swig_property(_ama.MDAfterHourFixedPriceTickExecution_offer_appl_seq_num_get, _ama.MDAfterHourFixedPriceTickExecution_offer_appl_seq_num_set)
    __swig_setmethods__["side"] = _ama.MDAfterHourFixedPriceTickExecution_side_set
    __swig_getmethods__["side"] = _ama.MDAfterHourFixedPriceTickExecution_side_get
    if _newclass:side = _swig_property(_ama.MDAfterHourFixedPriceTickExecution_side_get, _ama.MDAfterHourFixedPriceTickExecution_side_set)
    __swig_setmethods__["exec_type"] = _ama.MDAfterHourFixedPriceTickExecution_exec_type_set
    __swig_getmethods__["exec_type"] = _ama.MDAfterHourFixedPriceTickExecution_exec_type_get
    if _newclass:exec_type = _swig_property(_ama.MDAfterHourFixedPriceTickExecution_exec_type_get, _ama.MDAfterHourFixedPriceTickExecution_exec_type_set)
    __swig_setmethods__["channel_no"] = _ama.MDAfterHourFixedPriceTickExecution_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDAfterHourFixedPriceTickExecution_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDAfterHourFixedPriceTickExecution_channel_no_get, _ama.MDAfterHourFixedPriceTickExecution_channel_no_set)
    __swig_setmethods__["variety_category"] = _ama.MDAfterHourFixedPriceTickExecution_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDAfterHourFixedPriceTickExecution_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDAfterHourFixedPriceTickExecution_variety_category_get, _ama.MDAfterHourFixedPriceTickExecution_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDAfterHourFixedPriceTickExecution()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDAfterHourFixedPriceTickExecution
    __del__ = lambda self : None;
MDAfterHourFixedPriceTickExecution_swigregister = _ama.MDAfterHourFixedPriceTickExecution_swigregister
MDAfterHourFixedPriceTickExecution_swigregister(MDAfterHourFixedPriceTickExecution)

class MDFutureSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDFutureSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDFutureSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDFutureSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDFutureSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDFutureSnapshot_market_type_get, _ama.MDFutureSnapshot_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDFutureSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDFutureSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDFutureSnapshot_security_code_get, _ama.MDFutureSnapshot_security_code_set)
    __swig_setmethods__["action_day"] = _ama.MDFutureSnapshot_action_day_set
    __swig_getmethods__["action_day"] = _ama.MDFutureSnapshot_action_day_get
    if _newclass:action_day = _swig_property(_ama.MDFutureSnapshot_action_day_get, _ama.MDFutureSnapshot_action_day_set)
    __swig_setmethods__["orig_time"] = _ama.MDFutureSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDFutureSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDFutureSnapshot_orig_time_get, _ama.MDFutureSnapshot_orig_time_set)
    __swig_setmethods__["exchange_inst_id"] = _ama.MDFutureSnapshot_exchange_inst_id_set
    __swig_getmethods__["exchange_inst_id"] = _ama.MDFutureSnapshot_exchange_inst_id_get
    if _newclass:exchange_inst_id = _swig_property(_ama.MDFutureSnapshot_exchange_inst_id_get, _ama.MDFutureSnapshot_exchange_inst_id_set)
    __swig_setmethods__["last_price"] = _ama.MDFutureSnapshot_last_price_set
    __swig_getmethods__["last_price"] = _ama.MDFutureSnapshot_last_price_get
    if _newclass:last_price = _swig_property(_ama.MDFutureSnapshot_last_price_get, _ama.MDFutureSnapshot_last_price_set)
    __swig_setmethods__["pre_settle_price"] = _ama.MDFutureSnapshot_pre_settle_price_set
    __swig_getmethods__["pre_settle_price"] = _ama.MDFutureSnapshot_pre_settle_price_get
    if _newclass:pre_settle_price = _swig_property(_ama.MDFutureSnapshot_pre_settle_price_get, _ama.MDFutureSnapshot_pre_settle_price_set)
    __swig_setmethods__["pre_close_price"] = _ama.MDFutureSnapshot_pre_close_price_set
    __swig_getmethods__["pre_close_price"] = _ama.MDFutureSnapshot_pre_close_price_get
    if _newclass:pre_close_price = _swig_property(_ama.MDFutureSnapshot_pre_close_price_get, _ama.MDFutureSnapshot_pre_close_price_set)
    __swig_setmethods__["pre_open_interest"] = _ama.MDFutureSnapshot_pre_open_interest_set
    __swig_getmethods__["pre_open_interest"] = _ama.MDFutureSnapshot_pre_open_interest_get
    if _newclass:pre_open_interest = _swig_property(_ama.MDFutureSnapshot_pre_open_interest_get, _ama.MDFutureSnapshot_pre_open_interest_set)
    __swig_setmethods__["open_price"] = _ama.MDFutureSnapshot_open_price_set
    __swig_getmethods__["open_price"] = _ama.MDFutureSnapshot_open_price_get
    if _newclass:open_price = _swig_property(_ama.MDFutureSnapshot_open_price_get, _ama.MDFutureSnapshot_open_price_set)
    __swig_setmethods__["high_price"] = _ama.MDFutureSnapshot_high_price_set
    __swig_getmethods__["high_price"] = _ama.MDFutureSnapshot_high_price_get
    if _newclass:high_price = _swig_property(_ama.MDFutureSnapshot_high_price_get, _ama.MDFutureSnapshot_high_price_set)
    __swig_setmethods__["low_price"] = _ama.MDFutureSnapshot_low_price_set
    __swig_getmethods__["low_price"] = _ama.MDFutureSnapshot_low_price_get
    if _newclass:low_price = _swig_property(_ama.MDFutureSnapshot_low_price_get, _ama.MDFutureSnapshot_low_price_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDFutureSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDFutureSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDFutureSnapshot_total_volume_trade_get, _ama.MDFutureSnapshot_total_volume_trade_set)
    __swig_setmethods__["total_value_trade"] = _ama.MDFutureSnapshot_total_value_trade_set
    __swig_getmethods__["total_value_trade"] = _ama.MDFutureSnapshot_total_value_trade_get
    if _newclass:total_value_trade = _swig_property(_ama.MDFutureSnapshot_total_value_trade_get, _ama.MDFutureSnapshot_total_value_trade_set)
    __swig_setmethods__["open_interest"] = _ama.MDFutureSnapshot_open_interest_set
    __swig_getmethods__["open_interest"] = _ama.MDFutureSnapshot_open_interest_get
    if _newclass:open_interest = _swig_property(_ama.MDFutureSnapshot_open_interest_get, _ama.MDFutureSnapshot_open_interest_set)
    __swig_setmethods__["close_price"] = _ama.MDFutureSnapshot_close_price_set
    __swig_getmethods__["close_price"] = _ama.MDFutureSnapshot_close_price_get
    if _newclass:close_price = _swig_property(_ama.MDFutureSnapshot_close_price_get, _ama.MDFutureSnapshot_close_price_set)
    __swig_setmethods__["settle_price"] = _ama.MDFutureSnapshot_settle_price_set
    __swig_getmethods__["settle_price"] = _ama.MDFutureSnapshot_settle_price_get
    if _newclass:settle_price = _swig_property(_ama.MDFutureSnapshot_settle_price_get, _ama.MDFutureSnapshot_settle_price_set)
    __swig_setmethods__["high_limited"] = _ama.MDFutureSnapshot_high_limited_set
    __swig_getmethods__["high_limited"] = _ama.MDFutureSnapshot_high_limited_get
    if _newclass:high_limited = _swig_property(_ama.MDFutureSnapshot_high_limited_get, _ama.MDFutureSnapshot_high_limited_set)
    __swig_setmethods__["low_limited"] = _ama.MDFutureSnapshot_low_limited_set
    __swig_getmethods__["low_limited"] = _ama.MDFutureSnapshot_low_limited_get
    if _newclass:low_limited = _swig_property(_ama.MDFutureSnapshot_low_limited_get, _ama.MDFutureSnapshot_low_limited_set)
    __swig_setmethods__["pre_delta"] = _ama.MDFutureSnapshot_pre_delta_set
    __swig_getmethods__["pre_delta"] = _ama.MDFutureSnapshot_pre_delta_get
    if _newclass:pre_delta = _swig_property(_ama.MDFutureSnapshot_pre_delta_get, _ama.MDFutureSnapshot_pre_delta_set)
    __swig_setmethods__["curr_delta"] = _ama.MDFutureSnapshot_curr_delta_set
    __swig_getmethods__["curr_delta"] = _ama.MDFutureSnapshot_curr_delta_get
    if _newclass:curr_delta = _swig_property(_ama.MDFutureSnapshot_curr_delta_get, _ama.MDFutureSnapshot_curr_delta_set)
    __swig_setmethods__["bid_price"] = _ama.MDFutureSnapshot_bid_price_set
    __swig_getmethods__["bid_price"] = _ama.MDFutureSnapshot_bid_price_get
    if _newclass:bid_price = _swig_property(_ama.MDFutureSnapshot_bid_price_get, _ama.MDFutureSnapshot_bid_price_set)
    __swig_setmethods__["bid_volume"] = _ama.MDFutureSnapshot_bid_volume_set
    __swig_getmethods__["bid_volume"] = _ama.MDFutureSnapshot_bid_volume_get
    if _newclass:bid_volume = _swig_property(_ama.MDFutureSnapshot_bid_volume_get, _ama.MDFutureSnapshot_bid_volume_set)
    __swig_setmethods__["offer_price"] = _ama.MDFutureSnapshot_offer_price_set
    __swig_getmethods__["offer_price"] = _ama.MDFutureSnapshot_offer_price_get
    if _newclass:offer_price = _swig_property(_ama.MDFutureSnapshot_offer_price_get, _ama.MDFutureSnapshot_offer_price_set)
    __swig_setmethods__["offer_volume"] = _ama.MDFutureSnapshot_offer_volume_set
    __swig_getmethods__["offer_volume"] = _ama.MDFutureSnapshot_offer_volume_get
    if _newclass:offer_volume = _swig_property(_ama.MDFutureSnapshot_offer_volume_get, _ama.MDFutureSnapshot_offer_volume_set)
    __swig_setmethods__["average_price"] = _ama.MDFutureSnapshot_average_price_set
    __swig_getmethods__["average_price"] = _ama.MDFutureSnapshot_average_price_get
    if _newclass:average_price = _swig_property(_ama.MDFutureSnapshot_average_price_get, _ama.MDFutureSnapshot_average_price_set)
    __swig_setmethods__["trading_day"] = _ama.MDFutureSnapshot_trading_day_set
    __swig_getmethods__["trading_day"] = _ama.MDFutureSnapshot_trading_day_get
    if _newclass:trading_day = _swig_property(_ama.MDFutureSnapshot_trading_day_get, _ama.MDFutureSnapshot_trading_day_set)
    __swig_setmethods__["variety_category"] = _ama.MDFutureSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDFutureSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDFutureSnapshot_variety_category_get, _ama.MDFutureSnapshot_variety_category_set)
    __swig_setmethods__["exchange_inst_groupid"] = _ama.MDFutureSnapshot_exchange_inst_groupid_set
    __swig_getmethods__["exchange_inst_groupid"] = _ama.MDFutureSnapshot_exchange_inst_groupid_get
    if _newclass:exchange_inst_groupid = _swig_property(_ama.MDFutureSnapshot_exchange_inst_groupid_get, _ama.MDFutureSnapshot_exchange_inst_groupid_set)
    __swig_setmethods__["his_high_price"] = _ama.MDFutureSnapshot_his_high_price_set
    __swig_getmethods__["his_high_price"] = _ama.MDFutureSnapshot_his_high_price_get
    if _newclass:his_high_price = _swig_property(_ama.MDFutureSnapshot_his_high_price_get, _ama.MDFutureSnapshot_his_high_price_set)
    __swig_setmethods__["his_low_price"] = _ama.MDFutureSnapshot_his_low_price_set
    __swig_getmethods__["his_low_price"] = _ama.MDFutureSnapshot_his_low_price_get
    if _newclass:his_low_price = _swig_property(_ama.MDFutureSnapshot_his_low_price_get, _ama.MDFutureSnapshot_his_low_price_set)
    __swig_setmethods__["latest_volume_trade"] = _ama.MDFutureSnapshot_latest_volume_trade_set
    __swig_getmethods__["latest_volume_trade"] = _ama.MDFutureSnapshot_latest_volume_trade_get
    if _newclass:latest_volume_trade = _swig_property(_ama.MDFutureSnapshot_latest_volume_trade_get, _ama.MDFutureSnapshot_latest_volume_trade_set)
    __swig_setmethods__["init_volume_trade"] = _ama.MDFutureSnapshot_init_volume_trade_set
    __swig_getmethods__["init_volume_trade"] = _ama.MDFutureSnapshot_init_volume_trade_get
    if _newclass:init_volume_trade = _swig_property(_ama.MDFutureSnapshot_init_volume_trade_get, _ama.MDFutureSnapshot_init_volume_trade_set)
    __swig_setmethods__["change_volume_trade"] = _ama.MDFutureSnapshot_change_volume_trade_set
    __swig_getmethods__["change_volume_trade"] = _ama.MDFutureSnapshot_change_volume_trade_get
    if _newclass:change_volume_trade = _swig_property(_ama.MDFutureSnapshot_change_volume_trade_get, _ama.MDFutureSnapshot_change_volume_trade_set)
    __swig_setmethods__["bid_imply_volume"] = _ama.MDFutureSnapshot_bid_imply_volume_set
    __swig_getmethods__["bid_imply_volume"] = _ama.MDFutureSnapshot_bid_imply_volume_get
    if _newclass:bid_imply_volume = _swig_property(_ama.MDFutureSnapshot_bid_imply_volume_get, _ama.MDFutureSnapshot_bid_imply_volume_set)
    __swig_setmethods__["offer_imply_volume"] = _ama.MDFutureSnapshot_offer_imply_volume_set
    __swig_getmethods__["offer_imply_volume"] = _ama.MDFutureSnapshot_offer_imply_volume_get
    if _newclass:offer_imply_volume = _swig_property(_ama.MDFutureSnapshot_offer_imply_volume_get, _ama.MDFutureSnapshot_offer_imply_volume_set)
    __swig_setmethods__["arbi_type"] = _ama.MDFutureSnapshot_arbi_type_set
    __swig_getmethods__["arbi_type"] = _ama.MDFutureSnapshot_arbi_type_get
    if _newclass:arbi_type = _swig_property(_ama.MDFutureSnapshot_arbi_type_get, _ama.MDFutureSnapshot_arbi_type_set)
    __swig_setmethods__["instrument_id_1"] = _ama.MDFutureSnapshot_instrument_id_1_set
    __swig_getmethods__["instrument_id_1"] = _ama.MDFutureSnapshot_instrument_id_1_get
    if _newclass:instrument_id_1 = _swig_property(_ama.MDFutureSnapshot_instrument_id_1_get, _ama.MDFutureSnapshot_instrument_id_1_set)
    __swig_setmethods__["instrument_id_2"] = _ama.MDFutureSnapshot_instrument_id_2_set
    __swig_getmethods__["instrument_id_2"] = _ama.MDFutureSnapshot_instrument_id_2_get
    if _newclass:instrument_id_2 = _swig_property(_ama.MDFutureSnapshot_instrument_id_2_get, _ama.MDFutureSnapshot_instrument_id_2_set)
    __swig_setmethods__["instrument_name"] = _ama.MDFutureSnapshot_instrument_name_set
    __swig_getmethods__["instrument_name"] = _ama.MDFutureSnapshot_instrument_name_get
    if _newclass:instrument_name = _swig_property(_ama.MDFutureSnapshot_instrument_name_get, _ama.MDFutureSnapshot_instrument_name_set)
    __swig_setmethods__["total_bid_volume_trade"] = _ama.MDFutureSnapshot_total_bid_volume_trade_set
    __swig_getmethods__["total_bid_volume_trade"] = _ama.MDFutureSnapshot_total_bid_volume_trade_get
    if _newclass:total_bid_volume_trade = _swig_property(_ama.MDFutureSnapshot_total_bid_volume_trade_get, _ama.MDFutureSnapshot_total_bid_volume_trade_set)
    __swig_setmethods__["total_ask_volume_trade"] = _ama.MDFutureSnapshot_total_ask_volume_trade_set
    __swig_getmethods__["total_ask_volume_trade"] = _ama.MDFutureSnapshot_total_ask_volume_trade_get
    if _newclass:total_ask_volume_trade = _swig_property(_ama.MDFutureSnapshot_total_ask_volume_trade_get, _ama.MDFutureSnapshot_total_ask_volume_trade_set)
    def __init__(self): 
        this = _ama.new_MDFutureSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDFutureSnapshot
    __del__ = lambda self : None;
MDFutureSnapshot_swigregister = _ama.MDFutureSnapshot_swigregister
MDFutureSnapshot_swigregister(MDFutureSnapshot)

class MDCSIIndexSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDCSIIndexSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDCSIIndexSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDCSIIndexSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDCSIIndexSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDCSIIndexSnapshot_market_type_get, _ama.MDCSIIndexSnapshot_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDCSIIndexSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDCSIIndexSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDCSIIndexSnapshot_security_code_get, _ama.MDCSIIndexSnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDCSIIndexSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDCSIIndexSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDCSIIndexSnapshot_orig_time_get, _ama.MDCSIIndexSnapshot_orig_time_set)
    __swig_setmethods__["last_index"] = _ama.MDCSIIndexSnapshot_last_index_set
    __swig_getmethods__["last_index"] = _ama.MDCSIIndexSnapshot_last_index_get
    if _newclass:last_index = _swig_property(_ama.MDCSIIndexSnapshot_last_index_get, _ama.MDCSIIndexSnapshot_last_index_set)
    __swig_setmethods__["open_index"] = _ama.MDCSIIndexSnapshot_open_index_set
    __swig_getmethods__["open_index"] = _ama.MDCSIIndexSnapshot_open_index_get
    if _newclass:open_index = _swig_property(_ama.MDCSIIndexSnapshot_open_index_get, _ama.MDCSIIndexSnapshot_open_index_set)
    __swig_setmethods__["high_index"] = _ama.MDCSIIndexSnapshot_high_index_set
    __swig_getmethods__["high_index"] = _ama.MDCSIIndexSnapshot_high_index_get
    if _newclass:high_index = _swig_property(_ama.MDCSIIndexSnapshot_high_index_get, _ama.MDCSIIndexSnapshot_high_index_set)
    __swig_setmethods__["low_index"] = _ama.MDCSIIndexSnapshot_low_index_set
    __swig_getmethods__["low_index"] = _ama.MDCSIIndexSnapshot_low_index_get
    if _newclass:low_index = _swig_property(_ama.MDCSIIndexSnapshot_low_index_get, _ama.MDCSIIndexSnapshot_low_index_set)
    __swig_setmethods__["close_index"] = _ama.MDCSIIndexSnapshot_close_index_set
    __swig_getmethods__["close_index"] = _ama.MDCSIIndexSnapshot_close_index_get
    if _newclass:close_index = _swig_property(_ama.MDCSIIndexSnapshot_close_index_get, _ama.MDCSIIndexSnapshot_close_index_set)
    __swig_setmethods__["pre_close_index"] = _ama.MDCSIIndexSnapshot_pre_close_index_set
    __swig_getmethods__["pre_close_index"] = _ama.MDCSIIndexSnapshot_pre_close_index_get
    if _newclass:pre_close_index = _swig_property(_ama.MDCSIIndexSnapshot_pre_close_index_get, _ama.MDCSIIndexSnapshot_pre_close_index_set)
    __swig_setmethods__["change"] = _ama.MDCSIIndexSnapshot_change_set
    __swig_getmethods__["change"] = _ama.MDCSIIndexSnapshot_change_get
    if _newclass:change = _swig_property(_ama.MDCSIIndexSnapshot_change_get, _ama.MDCSIIndexSnapshot_change_set)
    __swig_setmethods__["ratio_of_change"] = _ama.MDCSIIndexSnapshot_ratio_of_change_set
    __swig_getmethods__["ratio_of_change"] = _ama.MDCSIIndexSnapshot_ratio_of_change_get
    if _newclass:ratio_of_change = _swig_property(_ama.MDCSIIndexSnapshot_ratio_of_change_get, _ama.MDCSIIndexSnapshot_ratio_of_change_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDCSIIndexSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDCSIIndexSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDCSIIndexSnapshot_total_volume_trade_get, _ama.MDCSIIndexSnapshot_total_volume_trade_set)
    __swig_setmethods__["total_value_trade"] = _ama.MDCSIIndexSnapshot_total_value_trade_set
    __swig_getmethods__["total_value_trade"] = _ama.MDCSIIndexSnapshot_total_value_trade_get
    if _newclass:total_value_trade = _swig_property(_ama.MDCSIIndexSnapshot_total_value_trade_get, _ama.MDCSIIndexSnapshot_total_value_trade_set)
    __swig_setmethods__["exchange_rate"] = _ama.MDCSIIndexSnapshot_exchange_rate_set
    __swig_getmethods__["exchange_rate"] = _ama.MDCSIIndexSnapshot_exchange_rate_get
    if _newclass:exchange_rate = _swig_property(_ama.MDCSIIndexSnapshot_exchange_rate_get, _ama.MDCSIIndexSnapshot_exchange_rate_set)
    __swig_setmethods__["currency_symbol"] = _ama.MDCSIIndexSnapshot_currency_symbol_set
    __swig_getmethods__["currency_symbol"] = _ama.MDCSIIndexSnapshot_currency_symbol_get
    if _newclass:currency_symbol = _swig_property(_ama.MDCSIIndexSnapshot_currency_symbol_get, _ama.MDCSIIndexSnapshot_currency_symbol_set)
    __swig_setmethods__["close_index2"] = _ama.MDCSIIndexSnapshot_close_index2_set
    __swig_getmethods__["close_index2"] = _ama.MDCSIIndexSnapshot_close_index2_get
    if _newclass:close_index2 = _swig_property(_ama.MDCSIIndexSnapshot_close_index2_get, _ama.MDCSIIndexSnapshot_close_index2_set)
    __swig_setmethods__["close_index3"] = _ama.MDCSIIndexSnapshot_close_index3_set
    __swig_getmethods__["close_index3"] = _ama.MDCSIIndexSnapshot_close_index3_get
    if _newclass:close_index3 = _swig_property(_ama.MDCSIIndexSnapshot_close_index3_get, _ama.MDCSIIndexSnapshot_close_index3_set)
    __swig_setmethods__["index_market"] = _ama.MDCSIIndexSnapshot_index_market_set
    __swig_getmethods__["index_market"] = _ama.MDCSIIndexSnapshot_index_market_get
    if _newclass:index_market = _swig_property(_ama.MDCSIIndexSnapshot_index_market_get, _ama.MDCSIIndexSnapshot_index_market_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDCSIIndexSnapshot_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDCSIIndexSnapshot_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDCSIIndexSnapshot_md_stream_id_get, _ama.MDCSIIndexSnapshot_md_stream_id_set)
    __swig_setmethods__["variety_category"] = _ama.MDCSIIndexSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDCSIIndexSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDCSIIndexSnapshot_variety_category_get, _ama.MDCSIIndexSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDCSIIndexSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDCSIIndexSnapshot
    __del__ = lambda self : None;
MDCSIIndexSnapshot_swigregister = _ama.MDCSIIndexSnapshot_swigregister
MDCSIIndexSnapshot_swigregister(MDCSIIndexSnapshot)

class MDIndicatorOfTradingVolumeSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDIndicatorOfTradingVolumeSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDIndicatorOfTradingVolumeSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDIndicatorOfTradingVolumeSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDIndicatorOfTradingVolumeSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDIndicatorOfTradingVolumeSnapshot_market_type_get, _ama.MDIndicatorOfTradingVolumeSnapshot_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDIndicatorOfTradingVolumeSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDIndicatorOfTradingVolumeSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDIndicatorOfTradingVolumeSnapshot_security_code_get, _ama.MDIndicatorOfTradingVolumeSnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDIndicatorOfTradingVolumeSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDIndicatorOfTradingVolumeSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDIndicatorOfTradingVolumeSnapshot_orig_time_get, _ama.MDIndicatorOfTradingVolumeSnapshot_orig_time_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDIndicatorOfTradingVolumeSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDIndicatorOfTradingVolumeSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDIndicatorOfTradingVolumeSnapshot_total_volume_trade_get, _ama.MDIndicatorOfTradingVolumeSnapshot_total_volume_trade_set)
    __swig_setmethods__["total_value_trade"] = _ama.MDIndicatorOfTradingVolumeSnapshot_total_value_trade_set
    __swig_getmethods__["total_value_trade"] = _ama.MDIndicatorOfTradingVolumeSnapshot_total_value_trade_get
    if _newclass:total_value_trade = _swig_property(_ama.MDIndicatorOfTradingVolumeSnapshot_total_value_trade_get, _ama.MDIndicatorOfTradingVolumeSnapshot_total_value_trade_set)
    __swig_setmethods__["pre_close_price"] = _ama.MDIndicatorOfTradingVolumeSnapshot_pre_close_price_set
    __swig_getmethods__["pre_close_price"] = _ama.MDIndicatorOfTradingVolumeSnapshot_pre_close_price_get
    if _newclass:pre_close_price = _swig_property(_ama.MDIndicatorOfTradingVolumeSnapshot_pre_close_price_get, _ama.MDIndicatorOfTradingVolumeSnapshot_pre_close_price_set)
    __swig_setmethods__["stock_num"] = _ama.MDIndicatorOfTradingVolumeSnapshot_stock_num_set
    __swig_getmethods__["stock_num"] = _ama.MDIndicatorOfTradingVolumeSnapshot_stock_num_get
    if _newclass:stock_num = _swig_property(_ama.MDIndicatorOfTradingVolumeSnapshot_stock_num_get, _ama.MDIndicatorOfTradingVolumeSnapshot_stock_num_set)
    __swig_setmethods__["trading_phase_code"] = _ama.MDIndicatorOfTradingVolumeSnapshot_trading_phase_code_set
    __swig_getmethods__["trading_phase_code"] = _ama.MDIndicatorOfTradingVolumeSnapshot_trading_phase_code_get
    if _newclass:trading_phase_code = _swig_property(_ama.MDIndicatorOfTradingVolumeSnapshot_trading_phase_code_get, _ama.MDIndicatorOfTradingVolumeSnapshot_trading_phase_code_set)
    __swig_setmethods__["channel_no"] = _ama.MDIndicatorOfTradingVolumeSnapshot_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDIndicatorOfTradingVolumeSnapshot_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDIndicatorOfTradingVolumeSnapshot_channel_no_get, _ama.MDIndicatorOfTradingVolumeSnapshot_channel_no_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDIndicatorOfTradingVolumeSnapshot_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDIndicatorOfTradingVolumeSnapshot_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDIndicatorOfTradingVolumeSnapshot_md_stream_id_get, _ama.MDIndicatorOfTradingVolumeSnapshot_md_stream_id_set)
    __swig_setmethods__["variety_category"] = _ama.MDIndicatorOfTradingVolumeSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDIndicatorOfTradingVolumeSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDIndicatorOfTradingVolumeSnapshot_variety_category_get, _ama.MDIndicatorOfTradingVolumeSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDIndicatorOfTradingVolumeSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDIndicatorOfTradingVolumeSnapshot
    __del__ = lambda self : None;
MDIndicatorOfTradingVolumeSnapshot_swigregister = _ama.MDIndicatorOfTradingVolumeSnapshot_swigregister
MDIndicatorOfTradingVolumeSnapshot_swigregister(MDIndicatorOfTradingVolumeSnapshot)

class MDCnIndexSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDCnIndexSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDCnIndexSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDCnIndexSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDCnIndexSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDCnIndexSnapshot_market_type_get, _ama.MDCnIndexSnapshot_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDCnIndexSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDCnIndexSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDCnIndexSnapshot_security_code_get, _ama.MDCnIndexSnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDCnIndexSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDCnIndexSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDCnIndexSnapshot_orig_time_get, _ama.MDCnIndexSnapshot_orig_time_set)
    __swig_setmethods__["trading_phase_code"] = _ama.MDCnIndexSnapshot_trading_phase_code_set
    __swig_getmethods__["trading_phase_code"] = _ama.MDCnIndexSnapshot_trading_phase_code_get
    if _newclass:trading_phase_code = _swig_property(_ama.MDCnIndexSnapshot_trading_phase_code_get, _ama.MDCnIndexSnapshot_trading_phase_code_set)
    __swig_setmethods__["pre_close_index"] = _ama.MDCnIndexSnapshot_pre_close_index_set
    __swig_getmethods__["pre_close_index"] = _ama.MDCnIndexSnapshot_pre_close_index_get
    if _newclass:pre_close_index = _swig_property(_ama.MDCnIndexSnapshot_pre_close_index_get, _ama.MDCnIndexSnapshot_pre_close_index_set)
    __swig_setmethods__["open_index"] = _ama.MDCnIndexSnapshot_open_index_set
    __swig_getmethods__["open_index"] = _ama.MDCnIndexSnapshot_open_index_get
    if _newclass:open_index = _swig_property(_ama.MDCnIndexSnapshot_open_index_get, _ama.MDCnIndexSnapshot_open_index_set)
    __swig_setmethods__["high_index"] = _ama.MDCnIndexSnapshot_high_index_set
    __swig_getmethods__["high_index"] = _ama.MDCnIndexSnapshot_high_index_get
    if _newclass:high_index = _swig_property(_ama.MDCnIndexSnapshot_high_index_get, _ama.MDCnIndexSnapshot_high_index_set)
    __swig_setmethods__["low_index"] = _ama.MDCnIndexSnapshot_low_index_set
    __swig_getmethods__["low_index"] = _ama.MDCnIndexSnapshot_low_index_get
    if _newclass:low_index = _swig_property(_ama.MDCnIndexSnapshot_low_index_get, _ama.MDCnIndexSnapshot_low_index_set)
    __swig_setmethods__["last_index"] = _ama.MDCnIndexSnapshot_last_index_set
    __swig_getmethods__["last_index"] = _ama.MDCnIndexSnapshot_last_index_get
    if _newclass:last_index = _swig_property(_ama.MDCnIndexSnapshot_last_index_get, _ama.MDCnIndexSnapshot_last_index_set)
    __swig_setmethods__["close_index"] = _ama.MDCnIndexSnapshot_close_index_set
    __swig_getmethods__["close_index"] = _ama.MDCnIndexSnapshot_close_index_get
    if _newclass:close_index = _swig_property(_ama.MDCnIndexSnapshot_close_index_get, _ama.MDCnIndexSnapshot_close_index_set)
    __swig_setmethods__["close_index2"] = _ama.MDCnIndexSnapshot_close_index2_set
    __swig_getmethods__["close_index2"] = _ama.MDCnIndexSnapshot_close_index2_get
    if _newclass:close_index2 = _swig_property(_ama.MDCnIndexSnapshot_close_index2_get, _ama.MDCnIndexSnapshot_close_index2_set)
    __swig_setmethods__["close_index3"] = _ama.MDCnIndexSnapshot_close_index3_set
    __swig_getmethods__["close_index3"] = _ama.MDCnIndexSnapshot_close_index3_get
    if _newclass:close_index3 = _swig_property(_ama.MDCnIndexSnapshot_close_index3_get, _ama.MDCnIndexSnapshot_close_index3_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDCnIndexSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDCnIndexSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDCnIndexSnapshot_total_volume_trade_get, _ama.MDCnIndexSnapshot_total_volume_trade_set)
    __swig_setmethods__["total_value_trade"] = _ama.MDCnIndexSnapshot_total_value_trade_set
    __swig_getmethods__["total_value_trade"] = _ama.MDCnIndexSnapshot_total_value_trade_get
    if _newclass:total_value_trade = _swig_property(_ama.MDCnIndexSnapshot_total_value_trade_get, _ama.MDCnIndexSnapshot_total_value_trade_set)
    __swig_setmethods__["channel_no"] = _ama.MDCnIndexSnapshot_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDCnIndexSnapshot_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDCnIndexSnapshot_channel_no_get, _ama.MDCnIndexSnapshot_channel_no_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDCnIndexSnapshot_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDCnIndexSnapshot_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDCnIndexSnapshot_md_stream_id_get, _ama.MDCnIndexSnapshot_md_stream_id_set)
    __swig_setmethods__["variety_category"] = _ama.MDCnIndexSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDCnIndexSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDCnIndexSnapshot_variety_category_get, _ama.MDCnIndexSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDCnIndexSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDCnIndexSnapshot
    __del__ = lambda self : None;
MDCnIndexSnapshot_swigregister = _ama.MDCnIndexSnapshot_swigregister
MDCnIndexSnapshot_swigregister(MDCnIndexSnapshot)

class MDRefinancingTickOrder(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDRefinancingTickOrder, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDRefinancingTickOrder, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDRefinancingTickOrder_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDRefinancingTickOrder_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDRefinancingTickOrder_market_type_get, _ama.MDRefinancingTickOrder_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDRefinancingTickOrder_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDRefinancingTickOrder_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDRefinancingTickOrder_security_code_get, _ama.MDRefinancingTickOrder_security_code_set)
    __swig_setmethods__["channel_no"] = _ama.MDRefinancingTickOrder_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDRefinancingTickOrder_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDRefinancingTickOrder_channel_no_get, _ama.MDRefinancingTickOrder_channel_no_set)
    __swig_setmethods__["appl_seq_num"] = _ama.MDRefinancingTickOrder_appl_seq_num_set
    __swig_getmethods__["appl_seq_num"] = _ama.MDRefinancingTickOrder_appl_seq_num_get
    if _newclass:appl_seq_num = _swig_property(_ama.MDRefinancingTickOrder_appl_seq_num_get, _ama.MDRefinancingTickOrder_appl_seq_num_set)
    __swig_setmethods__["order_time"] = _ama.MDRefinancingTickOrder_order_time_set
    __swig_getmethods__["order_time"] = _ama.MDRefinancingTickOrder_order_time_get
    if _newclass:order_time = _swig_property(_ama.MDRefinancingTickOrder_order_time_get, _ama.MDRefinancingTickOrder_order_time_set)
    __swig_setmethods__["order_price"] = _ama.MDRefinancingTickOrder_order_price_set
    __swig_getmethods__["order_price"] = _ama.MDRefinancingTickOrder_order_price_get
    if _newclass:order_price = _swig_property(_ama.MDRefinancingTickOrder_order_price_get, _ama.MDRefinancingTickOrder_order_price_set)
    __swig_setmethods__["order_volume"] = _ama.MDRefinancingTickOrder_order_volume_set
    __swig_getmethods__["order_volume"] = _ama.MDRefinancingTickOrder_order_volume_get
    if _newclass:order_volume = _swig_property(_ama.MDRefinancingTickOrder_order_volume_get, _ama.MDRefinancingTickOrder_order_volume_set)
    __swig_setmethods__["side"] = _ama.MDRefinancingTickOrder_side_set
    __swig_getmethods__["side"] = _ama.MDRefinancingTickOrder_side_get
    if _newclass:side = _swig_property(_ama.MDRefinancingTickOrder_side_get, _ama.MDRefinancingTickOrder_side_set)
    __swig_setmethods__["expiration_days"] = _ama.MDRefinancingTickOrder_expiration_days_set
    __swig_getmethods__["expiration_days"] = _ama.MDRefinancingTickOrder_expiration_days_get
    if _newclass:expiration_days = _swig_property(_ama.MDRefinancingTickOrder_expiration_days_get, _ama.MDRefinancingTickOrder_expiration_days_set)
    __swig_setmethods__["expiration_type"] = _ama.MDRefinancingTickOrder_expiration_type_set
    __swig_getmethods__["expiration_type"] = _ama.MDRefinancingTickOrder_expiration_type_get
    if _newclass:expiration_type = _swig_property(_ama.MDRefinancingTickOrder_expiration_type_get, _ama.MDRefinancingTickOrder_expiration_type_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDRefinancingTickOrder_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDRefinancingTickOrder_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDRefinancingTickOrder_md_stream_id_get, _ama.MDRefinancingTickOrder_md_stream_id_set)
    __swig_setmethods__["variety_category"] = _ama.MDRefinancingTickOrder_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDRefinancingTickOrder_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDRefinancingTickOrder_variety_category_get, _ama.MDRefinancingTickOrder_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDRefinancingTickOrder()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDRefinancingTickOrder
    __del__ = lambda self : None;
MDRefinancingTickOrder_swigregister = _ama.MDRefinancingTickOrder_swigregister
MDRefinancingTickOrder_swigregister(MDRefinancingTickOrder)

class MDRefinancingTickExecution(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDRefinancingTickExecution, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDRefinancingTickExecution, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDRefinancingTickExecution_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDRefinancingTickExecution_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDRefinancingTickExecution_market_type_get, _ama.MDRefinancingTickExecution_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDRefinancingTickExecution_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDRefinancingTickExecution_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDRefinancingTickExecution_security_code_get, _ama.MDRefinancingTickExecution_security_code_set)
    __swig_setmethods__["exec_time"] = _ama.MDRefinancingTickExecution_exec_time_set
    __swig_getmethods__["exec_time"] = _ama.MDRefinancingTickExecution_exec_time_get
    if _newclass:exec_time = _swig_property(_ama.MDRefinancingTickExecution_exec_time_get, _ama.MDRefinancingTickExecution_exec_time_set)
    __swig_setmethods__["channel_no"] = _ama.MDRefinancingTickExecution_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDRefinancingTickExecution_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDRefinancingTickExecution_channel_no_get, _ama.MDRefinancingTickExecution_channel_no_set)
    __swig_setmethods__["appl_seq_num"] = _ama.MDRefinancingTickExecution_appl_seq_num_set
    __swig_getmethods__["appl_seq_num"] = _ama.MDRefinancingTickExecution_appl_seq_num_get
    if _newclass:appl_seq_num = _swig_property(_ama.MDRefinancingTickExecution_appl_seq_num_get, _ama.MDRefinancingTickExecution_appl_seq_num_set)
    __swig_setmethods__["exec_price"] = _ama.MDRefinancingTickExecution_exec_price_set
    __swig_getmethods__["exec_price"] = _ama.MDRefinancingTickExecution_exec_price_get
    if _newclass:exec_price = _swig_property(_ama.MDRefinancingTickExecution_exec_price_get, _ama.MDRefinancingTickExecution_exec_price_set)
    __swig_setmethods__["exec_volume"] = _ama.MDRefinancingTickExecution_exec_volume_set
    __swig_getmethods__["exec_volume"] = _ama.MDRefinancingTickExecution_exec_volume_get
    if _newclass:exec_volume = _swig_property(_ama.MDRefinancingTickExecution_exec_volume_get, _ama.MDRefinancingTickExecution_exec_volume_set)
    __swig_setmethods__["value_trade"] = _ama.MDRefinancingTickExecution_value_trade_set
    __swig_getmethods__["value_trade"] = _ama.MDRefinancingTickExecution_value_trade_get
    if _newclass:value_trade = _swig_property(_ama.MDRefinancingTickExecution_value_trade_get, _ama.MDRefinancingTickExecution_value_trade_set)
    __swig_setmethods__["bid_appl_seq_num"] = _ama.MDRefinancingTickExecution_bid_appl_seq_num_set
    __swig_getmethods__["bid_appl_seq_num"] = _ama.MDRefinancingTickExecution_bid_appl_seq_num_get
    if _newclass:bid_appl_seq_num = _swig_property(_ama.MDRefinancingTickExecution_bid_appl_seq_num_get, _ama.MDRefinancingTickExecution_bid_appl_seq_num_set)
    __swig_setmethods__["offer_appl_seq_num"] = _ama.MDRefinancingTickExecution_offer_appl_seq_num_set
    __swig_getmethods__["offer_appl_seq_num"] = _ama.MDRefinancingTickExecution_offer_appl_seq_num_get
    if _newclass:offer_appl_seq_num = _swig_property(_ama.MDRefinancingTickExecution_offer_appl_seq_num_get, _ama.MDRefinancingTickExecution_offer_appl_seq_num_set)
    __swig_setmethods__["side"] = _ama.MDRefinancingTickExecution_side_set
    __swig_getmethods__["side"] = _ama.MDRefinancingTickExecution_side_get
    if _newclass:side = _swig_property(_ama.MDRefinancingTickExecution_side_get, _ama.MDRefinancingTickExecution_side_set)
    __swig_setmethods__["exec_type"] = _ama.MDRefinancingTickExecution_exec_type_set
    __swig_getmethods__["exec_type"] = _ama.MDRefinancingTickExecution_exec_type_get
    if _newclass:exec_type = _swig_property(_ama.MDRefinancingTickExecution_exec_type_get, _ama.MDRefinancingTickExecution_exec_type_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDRefinancingTickExecution_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDRefinancingTickExecution_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDRefinancingTickExecution_md_stream_id_get, _ama.MDRefinancingTickExecution_md_stream_id_set)
    __swig_setmethods__["variety_category"] = _ama.MDRefinancingTickExecution_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDRefinancingTickExecution_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDRefinancingTickExecution_variety_category_get, _ama.MDRefinancingTickExecution_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDRefinancingTickExecution()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDRefinancingTickExecution
    __del__ = lambda self : None;
MDRefinancingTickExecution_swigregister = _ama.MDRefinancingTickExecution_swigregister
MDRefinancingTickExecution_swigregister(MDRefinancingTickExecution)

class MDNegotiableTickOrder(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDNegotiableTickOrder, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDNegotiableTickOrder, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDNegotiableTickOrder_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDNegotiableTickOrder_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDNegotiableTickOrder_market_type_get, _ama.MDNegotiableTickOrder_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDNegotiableTickOrder_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDNegotiableTickOrder_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDNegotiableTickOrder_security_code_get, _ama.MDNegotiableTickOrder_security_code_set)
    __swig_setmethods__["channel_no"] = _ama.MDNegotiableTickOrder_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDNegotiableTickOrder_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDNegotiableTickOrder_channel_no_get, _ama.MDNegotiableTickOrder_channel_no_set)
    __swig_setmethods__["appl_seq_num"] = _ama.MDNegotiableTickOrder_appl_seq_num_set
    __swig_getmethods__["appl_seq_num"] = _ama.MDNegotiableTickOrder_appl_seq_num_get
    if _newclass:appl_seq_num = _swig_property(_ama.MDNegotiableTickOrder_appl_seq_num_get, _ama.MDNegotiableTickOrder_appl_seq_num_set)
    __swig_setmethods__["order_time"] = _ama.MDNegotiableTickOrder_order_time_set
    __swig_getmethods__["order_time"] = _ama.MDNegotiableTickOrder_order_time_get
    if _newclass:order_time = _swig_property(_ama.MDNegotiableTickOrder_order_time_get, _ama.MDNegotiableTickOrder_order_time_set)
    __swig_setmethods__["order_price"] = _ama.MDNegotiableTickOrder_order_price_set
    __swig_getmethods__["order_price"] = _ama.MDNegotiableTickOrder_order_price_get
    if _newclass:order_price = _swig_property(_ama.MDNegotiableTickOrder_order_price_get, _ama.MDNegotiableTickOrder_order_price_set)
    __swig_setmethods__["order_volume"] = _ama.MDNegotiableTickOrder_order_volume_set
    __swig_getmethods__["order_volume"] = _ama.MDNegotiableTickOrder_order_volume_get
    if _newclass:order_volume = _swig_property(_ama.MDNegotiableTickOrder_order_volume_get, _ama.MDNegotiableTickOrder_order_volume_set)
    __swig_setmethods__["side"] = _ama.MDNegotiableTickOrder_side_set
    __swig_getmethods__["side"] = _ama.MDNegotiableTickOrder_side_get
    if _newclass:side = _swig_property(_ama.MDNegotiableTickOrder_side_get, _ama.MDNegotiableTickOrder_side_set)
    __swig_setmethods__["confirm_id"] = _ama.MDNegotiableTickOrder_confirm_id_set
    __swig_getmethods__["confirm_id"] = _ama.MDNegotiableTickOrder_confirm_id_get
    if _newclass:confirm_id = _swig_property(_ama.MDNegotiableTickOrder_confirm_id_get, _ama.MDNegotiableTickOrder_confirm_id_set)
    __swig_setmethods__["contactor"] = _ama.MDNegotiableTickOrder_contactor_set
    __swig_getmethods__["contactor"] = _ama.MDNegotiableTickOrder_contactor_get
    if _newclass:contactor = _swig_property(_ama.MDNegotiableTickOrder_contactor_get, _ama.MDNegotiableTickOrder_contactor_set)
    __swig_setmethods__["contact_info"] = _ama.MDNegotiableTickOrder_contact_info_set
    __swig_getmethods__["contact_info"] = _ama.MDNegotiableTickOrder_contact_info_get
    if _newclass:contact_info = _swig_property(_ama.MDNegotiableTickOrder_contact_info_get, _ama.MDNegotiableTickOrder_contact_info_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDNegotiableTickOrder_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDNegotiableTickOrder_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDNegotiableTickOrder_md_stream_id_get, _ama.MDNegotiableTickOrder_md_stream_id_set)
    __swig_setmethods__["variety_category"] = _ama.MDNegotiableTickOrder_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDNegotiableTickOrder_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDNegotiableTickOrder_variety_category_get, _ama.MDNegotiableTickOrder_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDNegotiableTickOrder()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDNegotiableTickOrder
    __del__ = lambda self : None;
MDNegotiableTickOrder_swigregister = _ama.MDNegotiableTickOrder_swigregister
MDNegotiableTickOrder_swigregister(MDNegotiableTickOrder)

class MDNegotiableTickExecution(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDNegotiableTickExecution, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDNegotiableTickExecution, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDNegotiableTickExecution_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDNegotiableTickExecution_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDNegotiableTickExecution_market_type_get, _ama.MDNegotiableTickExecution_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDNegotiableTickExecution_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDNegotiableTickExecution_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDNegotiableTickExecution_security_code_get, _ama.MDNegotiableTickExecution_security_code_set)
    __swig_setmethods__["exec_time"] = _ama.MDNegotiableTickExecution_exec_time_set
    __swig_getmethods__["exec_time"] = _ama.MDNegotiableTickExecution_exec_time_get
    if _newclass:exec_time = _swig_property(_ama.MDNegotiableTickExecution_exec_time_get, _ama.MDNegotiableTickExecution_exec_time_set)
    __swig_setmethods__["channel_no"] = _ama.MDNegotiableTickExecution_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDNegotiableTickExecution_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDNegotiableTickExecution_channel_no_get, _ama.MDNegotiableTickExecution_channel_no_set)
    __swig_setmethods__["appl_seq_num"] = _ama.MDNegotiableTickExecution_appl_seq_num_set
    __swig_getmethods__["appl_seq_num"] = _ama.MDNegotiableTickExecution_appl_seq_num_get
    if _newclass:appl_seq_num = _swig_property(_ama.MDNegotiableTickExecution_appl_seq_num_get, _ama.MDNegotiableTickExecution_appl_seq_num_set)
    __swig_setmethods__["exec_price"] = _ama.MDNegotiableTickExecution_exec_price_set
    __swig_getmethods__["exec_price"] = _ama.MDNegotiableTickExecution_exec_price_get
    if _newclass:exec_price = _swig_property(_ama.MDNegotiableTickExecution_exec_price_get, _ama.MDNegotiableTickExecution_exec_price_set)
    __swig_setmethods__["exec_volume"] = _ama.MDNegotiableTickExecution_exec_volume_set
    __swig_getmethods__["exec_volume"] = _ama.MDNegotiableTickExecution_exec_volume_get
    if _newclass:exec_volume = _swig_property(_ama.MDNegotiableTickExecution_exec_volume_get, _ama.MDNegotiableTickExecution_exec_volume_set)
    __swig_setmethods__["value_trade"] = _ama.MDNegotiableTickExecution_value_trade_set
    __swig_getmethods__["value_trade"] = _ama.MDNegotiableTickExecution_value_trade_get
    if _newclass:value_trade = _swig_property(_ama.MDNegotiableTickExecution_value_trade_get, _ama.MDNegotiableTickExecution_value_trade_set)
    __swig_setmethods__["bid_appl_seq_num"] = _ama.MDNegotiableTickExecution_bid_appl_seq_num_set
    __swig_getmethods__["bid_appl_seq_num"] = _ama.MDNegotiableTickExecution_bid_appl_seq_num_get
    if _newclass:bid_appl_seq_num = _swig_property(_ama.MDNegotiableTickExecution_bid_appl_seq_num_get, _ama.MDNegotiableTickExecution_bid_appl_seq_num_set)
    __swig_setmethods__["offer_appl_seq_num"] = _ama.MDNegotiableTickExecution_offer_appl_seq_num_set
    __swig_getmethods__["offer_appl_seq_num"] = _ama.MDNegotiableTickExecution_offer_appl_seq_num_get
    if _newclass:offer_appl_seq_num = _swig_property(_ama.MDNegotiableTickExecution_offer_appl_seq_num_get, _ama.MDNegotiableTickExecution_offer_appl_seq_num_set)
    __swig_setmethods__["side"] = _ama.MDNegotiableTickExecution_side_set
    __swig_getmethods__["side"] = _ama.MDNegotiableTickExecution_side_get
    if _newclass:side = _swig_property(_ama.MDNegotiableTickExecution_side_get, _ama.MDNegotiableTickExecution_side_set)
    __swig_setmethods__["exec_type"] = _ama.MDNegotiableTickExecution_exec_type_set
    __swig_getmethods__["exec_type"] = _ama.MDNegotiableTickExecution_exec_type_get
    if _newclass:exec_type = _swig_property(_ama.MDNegotiableTickExecution_exec_type_get, _ama.MDNegotiableTickExecution_exec_type_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDNegotiableTickExecution_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDNegotiableTickExecution_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDNegotiableTickExecution_md_stream_id_get, _ama.MDNegotiableTickExecution_md_stream_id_set)
    __swig_setmethods__["variety_category"] = _ama.MDNegotiableTickExecution_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDNegotiableTickExecution_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDNegotiableTickExecution_variety_category_get, _ama.MDNegotiableTickExecution_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDNegotiableTickExecution()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDNegotiableTickExecution
    __del__ = lambda self : None;
MDNegotiableTickExecution_swigregister = _ama.MDNegotiableTickExecution_swigregister
MDNegotiableTickExecution_swigregister(MDNegotiableTickExecution)

class MDHKTRealtimeLimit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDHKTRealtimeLimit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDHKTRealtimeLimit, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDHKTRealtimeLimit_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDHKTRealtimeLimit_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDHKTRealtimeLimit_market_type_get, _ama.MDHKTRealtimeLimit_market_type_set)
    __swig_setmethods__["orig_time"] = _ama.MDHKTRealtimeLimit_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDHKTRealtimeLimit_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDHKTRealtimeLimit_orig_time_get, _ama.MDHKTRealtimeLimit_orig_time_set)
    __swig_setmethods__["threshold_amount"] = _ama.MDHKTRealtimeLimit_threshold_amount_set
    __swig_getmethods__["threshold_amount"] = _ama.MDHKTRealtimeLimit_threshold_amount_get
    if _newclass:threshold_amount = _swig_property(_ama.MDHKTRealtimeLimit_threshold_amount_get, _ama.MDHKTRealtimeLimit_threshold_amount_set)
    __swig_setmethods__["pos_amt"] = _ama.MDHKTRealtimeLimit_pos_amt_set
    __swig_getmethods__["pos_amt"] = _ama.MDHKTRealtimeLimit_pos_amt_get
    if _newclass:pos_amt = _swig_property(_ama.MDHKTRealtimeLimit_pos_amt_get, _ama.MDHKTRealtimeLimit_pos_amt_set)
    __swig_setmethods__["amount_status"] = _ama.MDHKTRealtimeLimit_amount_status_set
    __swig_getmethods__["amount_status"] = _ama.MDHKTRealtimeLimit_amount_status_get
    if _newclass:amount_status = _swig_property(_ama.MDHKTRealtimeLimit_amount_status_get, _ama.MDHKTRealtimeLimit_amount_status_set)
    __swig_setmethods__["channel_no"] = _ama.MDHKTRealtimeLimit_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDHKTRealtimeLimit_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDHKTRealtimeLimit_channel_no_get, _ama.MDHKTRealtimeLimit_channel_no_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDHKTRealtimeLimit_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDHKTRealtimeLimit_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDHKTRealtimeLimit_md_stream_id_get, _ama.MDHKTRealtimeLimit_md_stream_id_set)
    __swig_setmethods__["variety_category"] = _ama.MDHKTRealtimeLimit_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDHKTRealtimeLimit_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDHKTRealtimeLimit_variety_category_get, _ama.MDHKTRealtimeLimit_variety_category_set)
    __swig_setmethods__["mkt_status"] = _ama.MDHKTRealtimeLimit_mkt_status_set
    __swig_getmethods__["mkt_status"] = _ama.MDHKTRealtimeLimit_mkt_status_get
    if _newclass:mkt_status = _swig_property(_ama.MDHKTRealtimeLimit_mkt_status_get, _ama.MDHKTRealtimeLimit_mkt_status_set)
    def __init__(self): 
        this = _ama.new_MDHKTRealtimeLimit()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDHKTRealtimeLimit
    __del__ = lambda self : None;
MDHKTRealtimeLimit_swigregister = _ama.MDHKTRealtimeLimit_swigregister
MDHKTRealtimeLimit_swigregister(MDHKTRealtimeLimit)

class MDHKTProductStatus(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDHKTProductStatus, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDHKTProductStatus, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDHKTProductStatus_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDHKTProductStatus_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDHKTProductStatus_market_type_get, _ama.MDHKTProductStatus_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDHKTProductStatus_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDHKTProductStatus_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDHKTProductStatus_security_code_get, _ama.MDHKTProductStatus_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDHKTProductStatus_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDHKTProductStatus_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDHKTProductStatus_orig_time_get, _ama.MDHKTProductStatus_orig_time_set)
    __swig_setmethods__["trading_status1"] = _ama.MDHKTProductStatus_trading_status1_set
    __swig_getmethods__["trading_status1"] = _ama.MDHKTProductStatus_trading_status1_get
    if _newclass:trading_status1 = _swig_property(_ama.MDHKTProductStatus_trading_status1_get, _ama.MDHKTProductStatus_trading_status1_set)
    __swig_setmethods__["trading_status2"] = _ama.MDHKTProductStatus_trading_status2_set
    __swig_getmethods__["trading_status2"] = _ama.MDHKTProductStatus_trading_status2_get
    if _newclass:trading_status2 = _swig_property(_ama.MDHKTProductStatus_trading_status2_get, _ama.MDHKTProductStatus_trading_status2_set)
    __swig_setmethods__["channel_no"] = _ama.MDHKTProductStatus_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDHKTProductStatus_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDHKTProductStatus_channel_no_get, _ama.MDHKTProductStatus_channel_no_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDHKTProductStatus_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDHKTProductStatus_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDHKTProductStatus_md_stream_id_get, _ama.MDHKTProductStatus_md_stream_id_set)
    __swig_setmethods__["variety_category"] = _ama.MDHKTProductStatus_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDHKTProductStatus_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDHKTProductStatus_variety_category_get, _ama.MDHKTProductStatus_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDHKTProductStatus()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDHKTProductStatus
    __del__ = lambda self : None;
MDHKTProductStatus_swigregister = _ama.MDHKTProductStatus_swigregister
MDHKTProductStatus_swigregister(MDHKTProductStatus)

class MDHKMarketStatus(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDHKMarketStatus, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDHKMarketStatus, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDHKMarketStatus_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDHKMarketStatus_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDHKMarketStatus_market_type_get, _ama.MDHKMarketStatus_market_type_set)
    __swig_setmethods__["orig_time"] = _ama.MDHKMarketStatus_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDHKMarketStatus_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDHKMarketStatus_orig_time_get, _ama.MDHKMarketStatus_orig_time_set)
    __swig_setmethods__["trading_session_sub_id"] = _ama.MDHKMarketStatus_trading_session_sub_id_set
    __swig_getmethods__["trading_session_sub_id"] = _ama.MDHKMarketStatus_trading_session_sub_id_get
    if _newclass:trading_session_sub_id = _swig_property(_ama.MDHKMarketStatus_trading_session_sub_id_get, _ama.MDHKMarketStatus_trading_session_sub_id_set)
    __swig_setmethods__["variety_category"] = _ama.MDHKMarketStatus_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDHKMarketStatus_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDHKMarketStatus_variety_category_get, _ama.MDHKMarketStatus_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDHKMarketStatus()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDHKMarketStatus
    __del__ = lambda self : None;
MDHKMarketStatus_swigregister = _ama.MDHKMarketStatus_swigregister
MDHKMarketStatus_swigregister(MDHKMarketStatus)

class MDNEEQSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDNEEQSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDNEEQSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDNEEQSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDNEEQSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDNEEQSnapshot_market_type_get, _ama.MDNEEQSnapshot_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDNEEQSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDNEEQSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDNEEQSnapshot_security_code_get, _ama.MDNEEQSnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDNEEQSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDNEEQSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDNEEQSnapshot_orig_time_get, _ama.MDNEEQSnapshot_orig_time_set)
    __swig_setmethods__["pre_close_price"] = _ama.MDNEEQSnapshot_pre_close_price_set
    __swig_getmethods__["pre_close_price"] = _ama.MDNEEQSnapshot_pre_close_price_get
    if _newclass:pre_close_price = _swig_property(_ama.MDNEEQSnapshot_pre_close_price_get, _ama.MDNEEQSnapshot_pre_close_price_set)
    __swig_setmethods__["open_price"] = _ama.MDNEEQSnapshot_open_price_set
    __swig_getmethods__["open_price"] = _ama.MDNEEQSnapshot_open_price_get
    if _newclass:open_price = _swig_property(_ama.MDNEEQSnapshot_open_price_get, _ama.MDNEEQSnapshot_open_price_set)
    __swig_setmethods__["last_price"] = _ama.MDNEEQSnapshot_last_price_set
    __swig_getmethods__["last_price"] = _ama.MDNEEQSnapshot_last_price_get
    if _newclass:last_price = _swig_property(_ama.MDNEEQSnapshot_last_price_get, _ama.MDNEEQSnapshot_last_price_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDNEEQSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDNEEQSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDNEEQSnapshot_total_volume_trade_get, _ama.MDNEEQSnapshot_total_volume_trade_set)
    __swig_setmethods__["total_value_trade"] = _ama.MDNEEQSnapshot_total_value_trade_set
    __swig_getmethods__["total_value_trade"] = _ama.MDNEEQSnapshot_total_value_trade_get
    if _newclass:total_value_trade = _swig_property(_ama.MDNEEQSnapshot_total_value_trade_get, _ama.MDNEEQSnapshot_total_value_trade_set)
    __swig_setmethods__["num_trades"] = _ama.MDNEEQSnapshot_num_trades_set
    __swig_getmethods__["num_trades"] = _ama.MDNEEQSnapshot_num_trades_get
    if _newclass:num_trades = _swig_property(_ama.MDNEEQSnapshot_num_trades_get, _ama.MDNEEQSnapshot_num_trades_set)
    __swig_setmethods__["high_price"] = _ama.MDNEEQSnapshot_high_price_set
    __swig_getmethods__["high_price"] = _ama.MDNEEQSnapshot_high_price_get
    if _newclass:high_price = _swig_property(_ama.MDNEEQSnapshot_high_price_get, _ama.MDNEEQSnapshot_high_price_set)
    __swig_setmethods__["low_price"] = _ama.MDNEEQSnapshot_low_price_set
    __swig_getmethods__["low_price"] = _ama.MDNEEQSnapshot_low_price_get
    if _newclass:low_price = _swig_property(_ama.MDNEEQSnapshot_low_price_get, _ama.MDNEEQSnapshot_low_price_set)
    __swig_setmethods__["price_earning_ratio1"] = _ama.MDNEEQSnapshot_price_earning_ratio1_set
    __swig_getmethods__["price_earning_ratio1"] = _ama.MDNEEQSnapshot_price_earning_ratio1_get
    if _newclass:price_earning_ratio1 = _swig_property(_ama.MDNEEQSnapshot_price_earning_ratio1_get, _ama.MDNEEQSnapshot_price_earning_ratio1_set)
    __swig_setmethods__["price_earning_ratio2"] = _ama.MDNEEQSnapshot_price_earning_ratio2_set
    __swig_getmethods__["price_earning_ratio2"] = _ama.MDNEEQSnapshot_price_earning_ratio2_get
    if _newclass:price_earning_ratio2 = _swig_property(_ama.MDNEEQSnapshot_price_earning_ratio2_get, _ama.MDNEEQSnapshot_price_earning_ratio2_set)
    __swig_setmethods__["change1"] = _ama.MDNEEQSnapshot_change1_set
    __swig_getmethods__["change1"] = _ama.MDNEEQSnapshot_change1_get
    if _newclass:change1 = _swig_property(_ama.MDNEEQSnapshot_change1_get, _ama.MDNEEQSnapshot_change1_set)
    __swig_setmethods__["change2"] = _ama.MDNEEQSnapshot_change2_set
    __swig_getmethods__["change2"] = _ama.MDNEEQSnapshot_change2_get
    if _newclass:change2 = _swig_property(_ama.MDNEEQSnapshot_change2_get, _ama.MDNEEQSnapshot_change2_set)
    __swig_setmethods__["open_interest"] = _ama.MDNEEQSnapshot_open_interest_set
    __swig_getmethods__["open_interest"] = _ama.MDNEEQSnapshot_open_interest_get
    if _newclass:open_interest = _swig_property(_ama.MDNEEQSnapshot_open_interest_get, _ama.MDNEEQSnapshot_open_interest_set)
    __swig_setmethods__["bid_price"] = _ama.MDNEEQSnapshot_bid_price_set
    __swig_getmethods__["bid_price"] = _ama.MDNEEQSnapshot_bid_price_get
    if _newclass:bid_price = _swig_property(_ama.MDNEEQSnapshot_bid_price_get, _ama.MDNEEQSnapshot_bid_price_set)
    __swig_setmethods__["bid_volume"] = _ama.MDNEEQSnapshot_bid_volume_set
    __swig_getmethods__["bid_volume"] = _ama.MDNEEQSnapshot_bid_volume_get
    if _newclass:bid_volume = _swig_property(_ama.MDNEEQSnapshot_bid_volume_get, _ama.MDNEEQSnapshot_bid_volume_set)
    __swig_setmethods__["offer_price"] = _ama.MDNEEQSnapshot_offer_price_set
    __swig_getmethods__["offer_price"] = _ama.MDNEEQSnapshot_offer_price_get
    if _newclass:offer_price = _swig_property(_ama.MDNEEQSnapshot_offer_price_get, _ama.MDNEEQSnapshot_offer_price_set)
    __swig_setmethods__["offer_volume"] = _ama.MDNEEQSnapshot_offer_volume_set
    __swig_getmethods__["offer_volume"] = _ama.MDNEEQSnapshot_offer_volume_get
    if _newclass:offer_volume = _swig_property(_ama.MDNEEQSnapshot_offer_volume_get, _ama.MDNEEQSnapshot_offer_volume_set)
    __swig_setmethods__["index_factor"] = _ama.MDNEEQSnapshot_index_factor_set
    __swig_getmethods__["index_factor"] = _ama.MDNEEQSnapshot_index_factor_get
    if _newclass:index_factor = _swig_property(_ama.MDNEEQSnapshot_index_factor_get, _ama.MDNEEQSnapshot_index_factor_set)
    __swig_setmethods__["trading_phase_code"] = _ama.MDNEEQSnapshot_trading_phase_code_set
    __swig_getmethods__["trading_phase_code"] = _ama.MDNEEQSnapshot_trading_phase_code_get
    if _newclass:trading_phase_code = _swig_property(_ama.MDNEEQSnapshot_trading_phase_code_get, _ama.MDNEEQSnapshot_trading_phase_code_set)
    __swig_setmethods__["variety_category"] = _ama.MDNEEQSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDNEEQSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDNEEQSnapshot_variety_category_get, _ama.MDNEEQSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDNEEQSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDNEEQSnapshot
    __del__ = lambda self : None;
MDNEEQSnapshot_swigregister = _ama.MDNEEQSnapshot_swigregister
MDNEEQSnapshot_swigregister(MDNEEQSnapshot)

class MDNEEQSecurityInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDNEEQSecurityInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDNEEQSecurityInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDNEEQSecurityInfo_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDNEEQSecurityInfo_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDNEEQSecurityInfo_market_type_get, _ama.MDNEEQSecurityInfo_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDNEEQSecurityInfo_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDNEEQSecurityInfo_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDNEEQSecurityInfo_security_code_get, _ama.MDNEEQSecurityInfo_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDNEEQSecurityInfo_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDNEEQSecurityInfo_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDNEEQSecurityInfo_orig_time_get, _ama.MDNEEQSecurityInfo_orig_time_set)
    __swig_setmethods__["security_abbreviation"] = _ama.MDNEEQSecurityInfo_security_abbreviation_set
    __swig_getmethods__["security_abbreviation"] = _ama.MDNEEQSecurityInfo_security_abbreviation_get
    if _newclass:security_abbreviation = _swig_property(_ama.MDNEEQSecurityInfo_security_abbreviation_get, _ama.MDNEEQSecurityInfo_security_abbreviation_set)
    __swig_setmethods__["underlying_security"] = _ama.MDNEEQSecurityInfo_underlying_security_set
    __swig_getmethods__["underlying_security"] = _ama.MDNEEQSecurityInfo_underlying_security_get
    if _newclass:underlying_security = _swig_property(_ama.MDNEEQSecurityInfo_underlying_security_get, _ama.MDNEEQSecurityInfo_underlying_security_set)
    __swig_setmethods__["ISIN"] = _ama.MDNEEQSecurityInfo_ISIN_set
    __swig_getmethods__["ISIN"] = _ama.MDNEEQSecurityInfo_ISIN_get
    if _newclass:ISIN = _swig_property(_ama.MDNEEQSecurityInfo_ISIN_get, _ama.MDNEEQSecurityInfo_ISIN_set)
    __swig_setmethods__["trading_unit"] = _ama.MDNEEQSecurityInfo_trading_unit_set
    __swig_getmethods__["trading_unit"] = _ama.MDNEEQSecurityInfo_trading_unit_get
    if _newclass:trading_unit = _swig_property(_ama.MDNEEQSecurityInfo_trading_unit_get, _ama.MDNEEQSecurityInfo_trading_unit_set)
    __swig_setmethods__["industry_type"] = _ama.MDNEEQSecurityInfo_industry_type_set
    __swig_getmethods__["industry_type"] = _ama.MDNEEQSecurityInfo_industry_type_get
    if _newclass:industry_type = _swig_property(_ama.MDNEEQSecurityInfo_industry_type_get, _ama.MDNEEQSecurityInfo_industry_type_set)
    __swig_setmethods__["currency"] = _ama.MDNEEQSecurityInfo_currency_set
    __swig_getmethods__["currency"] = _ama.MDNEEQSecurityInfo_currency_get
    if _newclass:currency = _swig_property(_ama.MDNEEQSecurityInfo_currency_get, _ama.MDNEEQSecurityInfo_currency_set)
    __swig_setmethods__["par_value"] = _ama.MDNEEQSecurityInfo_par_value_set
    __swig_getmethods__["par_value"] = _ama.MDNEEQSecurityInfo_par_value_get
    if _newclass:par_value = _swig_property(_ama.MDNEEQSecurityInfo_par_value_get, _ama.MDNEEQSecurityInfo_par_value_set)
    __swig_setmethods__["general_capital"] = _ama.MDNEEQSecurityInfo_general_capital_set
    __swig_getmethods__["general_capital"] = _ama.MDNEEQSecurityInfo_general_capital_get
    if _newclass:general_capital = _swig_property(_ama.MDNEEQSecurityInfo_general_capital_get, _ama.MDNEEQSecurityInfo_general_capital_set)
    __swig_setmethods__["unrestricted_capital"] = _ama.MDNEEQSecurityInfo_unrestricted_capital_set
    __swig_getmethods__["unrestricted_capital"] = _ama.MDNEEQSecurityInfo_unrestricted_capital_get
    if _newclass:unrestricted_capital = _swig_property(_ama.MDNEEQSecurityInfo_unrestricted_capital_get, _ama.MDNEEQSecurityInfo_unrestricted_capital_set)
    __swig_setmethods__["last_year_earning"] = _ama.MDNEEQSecurityInfo_last_year_earning_set
    __swig_getmethods__["last_year_earning"] = _ama.MDNEEQSecurityInfo_last_year_earning_get
    if _newclass:last_year_earning = _swig_property(_ama.MDNEEQSecurityInfo_last_year_earning_get, _ama.MDNEEQSecurityInfo_last_year_earning_set)
    __swig_setmethods__["cur_year_earning"] = _ama.MDNEEQSecurityInfo_cur_year_earning_set
    __swig_getmethods__["cur_year_earning"] = _ama.MDNEEQSecurityInfo_cur_year_earning_get
    if _newclass:cur_year_earning = _swig_property(_ama.MDNEEQSecurityInfo_cur_year_earning_get, _ama.MDNEEQSecurityInfo_cur_year_earning_set)
    __swig_setmethods__["brokerage_rate"] = _ama.MDNEEQSecurityInfo_brokerage_rate_set
    __swig_getmethods__["brokerage_rate"] = _ama.MDNEEQSecurityInfo_brokerage_rate_get
    if _newclass:brokerage_rate = _swig_property(_ama.MDNEEQSecurityInfo_brokerage_rate_get, _ama.MDNEEQSecurityInfo_brokerage_rate_set)
    __swig_setmethods__["stamp_duty_rate"] = _ama.MDNEEQSecurityInfo_stamp_duty_rate_set
    __swig_getmethods__["stamp_duty_rate"] = _ama.MDNEEQSecurityInfo_stamp_duty_rate_get
    if _newclass:stamp_duty_rate = _swig_property(_ama.MDNEEQSecurityInfo_stamp_duty_rate_get, _ama.MDNEEQSecurityInfo_stamp_duty_rate_set)
    __swig_setmethods__["transfer_fee_rate"] = _ama.MDNEEQSecurityInfo_transfer_fee_rate_set
    __swig_getmethods__["transfer_fee_rate"] = _ama.MDNEEQSecurityInfo_transfer_fee_rate_get
    if _newclass:transfer_fee_rate = _swig_property(_ama.MDNEEQSecurityInfo_transfer_fee_rate_get, _ama.MDNEEQSecurityInfo_transfer_fee_rate_set)
    __swig_setmethods__["listing_date"] = _ama.MDNEEQSecurityInfo_listing_date_set
    __swig_getmethods__["listing_date"] = _ama.MDNEEQSecurityInfo_listing_date_get
    if _newclass:listing_date = _swig_property(_ama.MDNEEQSecurityInfo_listing_date_get, _ama.MDNEEQSecurityInfo_listing_date_set)
    __swig_setmethods__["value_date"] = _ama.MDNEEQSecurityInfo_value_date_set
    __swig_getmethods__["value_date"] = _ama.MDNEEQSecurityInfo_value_date_get
    if _newclass:value_date = _swig_property(_ama.MDNEEQSecurityInfo_value_date_get, _ama.MDNEEQSecurityInfo_value_date_set)
    __swig_setmethods__["expiring_date"] = _ama.MDNEEQSecurityInfo_expiring_date_set
    __swig_getmethods__["expiring_date"] = _ama.MDNEEQSecurityInfo_expiring_date_get
    if _newclass:expiring_date = _swig_property(_ama.MDNEEQSecurityInfo_expiring_date_get, _ama.MDNEEQSecurityInfo_expiring_date_set)
    __swig_setmethods__["every_limited"] = _ama.MDNEEQSecurityInfo_every_limited_set
    __swig_getmethods__["every_limited"] = _ama.MDNEEQSecurityInfo_every_limited_get
    if _newclass:every_limited = _swig_property(_ama.MDNEEQSecurityInfo_every_limited_get, _ama.MDNEEQSecurityInfo_every_limited_set)
    __swig_setmethods__["buy_amount_unit"] = _ama.MDNEEQSecurityInfo_buy_amount_unit_set
    __swig_getmethods__["buy_amount_unit"] = _ama.MDNEEQSecurityInfo_buy_amount_unit_get
    if _newclass:buy_amount_unit = _swig_property(_ama.MDNEEQSecurityInfo_buy_amount_unit_get, _ama.MDNEEQSecurityInfo_buy_amount_unit_set)
    __swig_setmethods__["sell_amount_unit"] = _ama.MDNEEQSecurityInfo_sell_amount_unit_set
    __swig_getmethods__["sell_amount_unit"] = _ama.MDNEEQSecurityInfo_sell_amount_unit_get
    if _newclass:sell_amount_unit = _swig_property(_ama.MDNEEQSecurityInfo_sell_amount_unit_get, _ama.MDNEEQSecurityInfo_sell_amount_unit_set)
    __swig_setmethods__["mini_dec_amount"] = _ama.MDNEEQSecurityInfo_mini_dec_amount_set
    __swig_getmethods__["mini_dec_amount"] = _ama.MDNEEQSecurityInfo_mini_dec_amount_get
    if _newclass:mini_dec_amount = _swig_property(_ama.MDNEEQSecurityInfo_mini_dec_amount_get, _ama.MDNEEQSecurityInfo_mini_dec_amount_set)
    __swig_setmethods__["price_level"] = _ama.MDNEEQSecurityInfo_price_level_set
    __swig_getmethods__["price_level"] = _ama.MDNEEQSecurityInfo_price_level_get
    if _newclass:price_level = _swig_property(_ama.MDNEEQSecurityInfo_price_level_get, _ama.MDNEEQSecurityInfo_price_level_set)
    __swig_setmethods__["first_trade_limit"] = _ama.MDNEEQSecurityInfo_first_trade_limit_set
    __swig_getmethods__["first_trade_limit"] = _ama.MDNEEQSecurityInfo_first_trade_limit_get
    if _newclass:first_trade_limit = _swig_property(_ama.MDNEEQSecurityInfo_first_trade_limit_get, _ama.MDNEEQSecurityInfo_first_trade_limit_set)
    __swig_setmethods__["follow_trade_limit"] = _ama.MDNEEQSecurityInfo_follow_trade_limit_set
    __swig_getmethods__["follow_trade_limit"] = _ama.MDNEEQSecurityInfo_follow_trade_limit_get
    if _newclass:follow_trade_limit = _swig_property(_ama.MDNEEQSecurityInfo_follow_trade_limit_get, _ama.MDNEEQSecurityInfo_follow_trade_limit_set)
    __swig_setmethods__["limit_param_nature"] = _ama.MDNEEQSecurityInfo_limit_param_nature_set
    __swig_getmethods__["limit_param_nature"] = _ama.MDNEEQSecurityInfo_limit_param_nature_get
    if _newclass:limit_param_nature = _swig_property(_ama.MDNEEQSecurityInfo_limit_param_nature_get, _ama.MDNEEQSecurityInfo_limit_param_nature_set)
    __swig_setmethods__["high_limited"] = _ama.MDNEEQSecurityInfo_high_limited_set
    __swig_getmethods__["high_limited"] = _ama.MDNEEQSecurityInfo_high_limited_get
    if _newclass:high_limited = _swig_property(_ama.MDNEEQSecurityInfo_high_limited_get, _ama.MDNEEQSecurityInfo_high_limited_set)
    __swig_setmethods__["low_limited"] = _ama.MDNEEQSecurityInfo_low_limited_set
    __swig_getmethods__["low_limited"] = _ama.MDNEEQSecurityInfo_low_limited_get
    if _newclass:low_limited = _swig_property(_ama.MDNEEQSecurityInfo_low_limited_get, _ama.MDNEEQSecurityInfo_low_limited_set)
    __swig_setmethods__["block_trade_ceiling"] = _ama.MDNEEQSecurityInfo_block_trade_ceiling_set
    __swig_getmethods__["block_trade_ceiling"] = _ama.MDNEEQSecurityInfo_block_trade_ceiling_get
    if _newclass:block_trade_ceiling = _swig_property(_ama.MDNEEQSecurityInfo_block_trade_ceiling_get, _ama.MDNEEQSecurityInfo_block_trade_ceiling_set)
    __swig_setmethods__["block_trade_floor"] = _ama.MDNEEQSecurityInfo_block_trade_floor_set
    __swig_getmethods__["block_trade_floor"] = _ama.MDNEEQSecurityInfo_block_trade_floor_get
    if _newclass:block_trade_floor = _swig_property(_ama.MDNEEQSecurityInfo_block_trade_floor_get, _ama.MDNEEQSecurityInfo_block_trade_floor_set)
    __swig_setmethods__["component_mark"] = _ama.MDNEEQSecurityInfo_component_mark_set
    __swig_getmethods__["component_mark"] = _ama.MDNEEQSecurityInfo_component_mark_get
    if _newclass:component_mark = _swig_property(_ama.MDNEEQSecurityInfo_component_mark_get, _ama.MDNEEQSecurityInfo_component_mark_set)
    __swig_setmethods__["conver_ratio"] = _ama.MDNEEQSecurityInfo_conver_ratio_set
    __swig_getmethods__["conver_ratio"] = _ama.MDNEEQSecurityInfo_conver_ratio_get
    if _newclass:conver_ratio = _swig_property(_ama.MDNEEQSecurityInfo_conver_ratio_get, _ama.MDNEEQSecurityInfo_conver_ratio_set)
    __swig_setmethods__["trade_status"] = _ama.MDNEEQSecurityInfo_trade_status_set
    __swig_getmethods__["trade_status"] = _ama.MDNEEQSecurityInfo_trade_status_get
    if _newclass:trade_status = _swig_property(_ama.MDNEEQSecurityInfo_trade_status_get, _ama.MDNEEQSecurityInfo_trade_status_set)
    __swig_setmethods__["security_level"] = _ama.MDNEEQSecurityInfo_security_level_set
    __swig_getmethods__["security_level"] = _ama.MDNEEQSecurityInfo_security_level_get
    if _newclass:security_level = _swig_property(_ama.MDNEEQSecurityInfo_security_level_get, _ama.MDNEEQSecurityInfo_security_level_set)
    __swig_setmethods__["trade_type"] = _ama.MDNEEQSecurityInfo_trade_type_set
    __swig_getmethods__["trade_type"] = _ama.MDNEEQSecurityInfo_trade_type_get
    if _newclass:trade_type = _swig_property(_ama.MDNEEQSecurityInfo_trade_type_get, _ama.MDNEEQSecurityInfo_trade_type_set)
    __swig_setmethods__["market_maker_num"] = _ama.MDNEEQSecurityInfo_market_maker_num_set
    __swig_getmethods__["market_maker_num"] = _ama.MDNEEQSecurityInfo_market_maker_num_get
    if _newclass:market_maker_num = _swig_property(_ama.MDNEEQSecurityInfo_market_maker_num_get, _ama.MDNEEQSecurityInfo_market_maker_num_set)
    __swig_setmethods__["suspen_sign"] = _ama.MDNEEQSecurityInfo_suspen_sign_set
    __swig_getmethods__["suspen_sign"] = _ama.MDNEEQSecurityInfo_suspen_sign_get
    if _newclass:suspen_sign = _swig_property(_ama.MDNEEQSecurityInfo_suspen_sign_get, _ama.MDNEEQSecurityInfo_suspen_sign_set)
    __swig_setmethods__["ex_sign"] = _ama.MDNEEQSecurityInfo_ex_sign_set
    __swig_getmethods__["ex_sign"] = _ama.MDNEEQSecurityInfo_ex_sign_get
    if _newclass:ex_sign = _swig_property(_ama.MDNEEQSecurityInfo_ex_sign_get, _ama.MDNEEQSecurityInfo_ex_sign_set)
    __swig_setmethods__["net_vote_sign"] = _ama.MDNEEQSecurityInfo_net_vote_sign_set
    __swig_getmethods__["net_vote_sign"] = _ama.MDNEEQSecurityInfo_net_vote_sign_get
    if _newclass:net_vote_sign = _swig_property(_ama.MDNEEQSecurityInfo_net_vote_sign_get, _ama.MDNEEQSecurityInfo_net_vote_sign_set)
    __swig_setmethods__["other_buss_sign"] = _ama.MDNEEQSecurityInfo_other_buss_sign_set
    __swig_getmethods__["other_buss_sign"] = _ama.MDNEEQSecurityInfo_other_buss_sign_get
    if _newclass:other_buss_sign = _swig_property(_ama.MDNEEQSecurityInfo_other_buss_sign_get, _ama.MDNEEQSecurityInfo_other_buss_sign_set)
    __swig_setmethods__["record_update_time"] = _ama.MDNEEQSecurityInfo_record_update_time_set
    __swig_getmethods__["record_update_time"] = _ama.MDNEEQSecurityInfo_record_update_time_get
    if _newclass:record_update_time = _swig_property(_ama.MDNEEQSecurityInfo_record_update_time_get, _ama.MDNEEQSecurityInfo_record_update_time_set)
    __swig_setmethods__["variety_category"] = _ama.MDNEEQSecurityInfo_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDNEEQSecurityInfo_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDNEEQSecurityInfo_variety_category_get, _ama.MDNEEQSecurityInfo_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDNEEQSecurityInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDNEEQSecurityInfo
    __del__ = lambda self : None;
MDNEEQSecurityInfo_swigregister = _ama.MDNEEQSecurityInfo_swigregister
MDNEEQSecurityInfo_swigregister(MDNEEQSecurityInfo)

class MDNEEQNonPublicTransDeclaredInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDNEEQNonPublicTransDeclaredInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDNEEQNonPublicTransDeclaredInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDNEEQNonPublicTransDeclaredInfo_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDNEEQNonPublicTransDeclaredInfo_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDNEEQNonPublicTransDeclaredInfo_market_type_get, _ama.MDNEEQNonPublicTransDeclaredInfo_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDNEEQNonPublicTransDeclaredInfo_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDNEEQNonPublicTransDeclaredInfo_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDNEEQNonPublicTransDeclaredInfo_security_code_get, _ama.MDNEEQNonPublicTransDeclaredInfo_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDNEEQNonPublicTransDeclaredInfo_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDNEEQNonPublicTransDeclaredInfo_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDNEEQNonPublicTransDeclaredInfo_orig_time_get, _ama.MDNEEQNonPublicTransDeclaredInfo_orig_time_set)
    __swig_setmethods__["transaction_unit"] = _ama.MDNEEQNonPublicTransDeclaredInfo_transaction_unit_set
    __swig_getmethods__["transaction_unit"] = _ama.MDNEEQNonPublicTransDeclaredInfo_transaction_unit_get
    if _newclass:transaction_unit = _swig_property(_ama.MDNEEQNonPublicTransDeclaredInfo_transaction_unit_get, _ama.MDNEEQNonPublicTransDeclaredInfo_transaction_unit_set)
    __swig_setmethods__["security_category"] = _ama.MDNEEQNonPublicTransDeclaredInfo_security_category_set
    __swig_getmethods__["security_category"] = _ama.MDNEEQNonPublicTransDeclaredInfo_security_category_get
    if _newclass:security_category = _swig_property(_ama.MDNEEQNonPublicTransDeclaredInfo_security_category_get, _ama.MDNEEQNonPublicTransDeclaredInfo_security_category_set)
    __swig_setmethods__["declare_category"] = _ama.MDNEEQNonPublicTransDeclaredInfo_declare_category_set
    __swig_getmethods__["declare_category"] = _ama.MDNEEQNonPublicTransDeclaredInfo_declare_category_get
    if _newclass:declare_category = _swig_property(_ama.MDNEEQNonPublicTransDeclaredInfo_declare_category_get, _ama.MDNEEQNonPublicTransDeclaredInfo_declare_category_set)
    __swig_setmethods__["declare_volume"] = _ama.MDNEEQNonPublicTransDeclaredInfo_declare_volume_set
    __swig_getmethods__["declare_volume"] = _ama.MDNEEQNonPublicTransDeclaredInfo_declare_volume_get
    if _newclass:declare_volume = _swig_property(_ama.MDNEEQNonPublicTransDeclaredInfo_declare_volume_get, _ama.MDNEEQNonPublicTransDeclaredInfo_declare_volume_set)
    __swig_setmethods__["declare_price"] = _ama.MDNEEQNonPublicTransDeclaredInfo_declare_price_set
    __swig_getmethods__["declare_price"] = _ama.MDNEEQNonPublicTransDeclaredInfo_declare_price_get
    if _newclass:declare_price = _swig_property(_ama.MDNEEQNonPublicTransDeclaredInfo_declare_price_get, _ama.MDNEEQNonPublicTransDeclaredInfo_declare_price_set)
    __swig_setmethods__["deal_agreement_num"] = _ama.MDNEEQNonPublicTransDeclaredInfo_deal_agreement_num_set
    __swig_getmethods__["deal_agreement_num"] = _ama.MDNEEQNonPublicTransDeclaredInfo_deal_agreement_num_get
    if _newclass:deal_agreement_num = _swig_property(_ama.MDNEEQNonPublicTransDeclaredInfo_deal_agreement_num_get, _ama.MDNEEQNonPublicTransDeclaredInfo_deal_agreement_num_set)
    __swig_setmethods__["declare_time"] = _ama.MDNEEQNonPublicTransDeclaredInfo_declare_time_set
    __swig_getmethods__["declare_time"] = _ama.MDNEEQNonPublicTransDeclaredInfo_declare_time_get
    if _newclass:declare_time = _swig_property(_ama.MDNEEQNonPublicTransDeclaredInfo_declare_time_get, _ama.MDNEEQNonPublicTransDeclaredInfo_declare_time_set)
    __swig_setmethods__["record_status"] = _ama.MDNEEQNonPublicTransDeclaredInfo_record_status_set
    __swig_getmethods__["record_status"] = _ama.MDNEEQNonPublicTransDeclaredInfo_record_status_get
    if _newclass:record_status = _swig_property(_ama.MDNEEQNonPublicTransDeclaredInfo_record_status_get, _ama.MDNEEQNonPublicTransDeclaredInfo_record_status_set)
    __swig_setmethods__["backup_sign"] = _ama.MDNEEQNonPublicTransDeclaredInfo_backup_sign_set
    __swig_getmethods__["backup_sign"] = _ama.MDNEEQNonPublicTransDeclaredInfo_backup_sign_get
    if _newclass:backup_sign = _swig_property(_ama.MDNEEQNonPublicTransDeclaredInfo_backup_sign_get, _ama.MDNEEQNonPublicTransDeclaredInfo_backup_sign_set)
    __swig_setmethods__["variety_category"] = _ama.MDNEEQNonPublicTransDeclaredInfo_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDNEEQNonPublicTransDeclaredInfo_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDNEEQNonPublicTransDeclaredInfo_variety_category_get, _ama.MDNEEQNonPublicTransDeclaredInfo_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDNEEQNonPublicTransDeclaredInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDNEEQNonPublicTransDeclaredInfo
    __del__ = lambda self : None;
MDNEEQNonPublicTransDeclaredInfo_swigregister = _ama.MDNEEQNonPublicTransDeclaredInfo_swigregister
MDNEEQNonPublicTransDeclaredInfo_swigregister(MDNEEQNonPublicTransDeclaredInfo)

class MDNEEQHierarchicalInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDNEEQHierarchicalInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDNEEQHierarchicalInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDNEEQHierarchicalInfo_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDNEEQHierarchicalInfo_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDNEEQHierarchicalInfo_market_type_get, _ama.MDNEEQHierarchicalInfo_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDNEEQHierarchicalInfo_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDNEEQHierarchicalInfo_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDNEEQHierarchicalInfo_security_code_get, _ama.MDNEEQHierarchicalInfo_security_code_set)
    __swig_setmethods__["trade_date"] = _ama.MDNEEQHierarchicalInfo_trade_date_set
    __swig_getmethods__["trade_date"] = _ama.MDNEEQHierarchicalInfo_trade_date_get
    if _newclass:trade_date = _swig_property(_ama.MDNEEQHierarchicalInfo_trade_date_get, _ama.MDNEEQHierarchicalInfo_trade_date_set)
    __swig_setmethods__["security_abbreviation"] = _ama.MDNEEQHierarchicalInfo_security_abbreviation_set
    __swig_getmethods__["security_abbreviation"] = _ama.MDNEEQHierarchicalInfo_security_abbreviation_get
    if _newclass:security_abbreviation = _swig_property(_ama.MDNEEQHierarchicalInfo_security_abbreviation_get, _ama.MDNEEQHierarchicalInfo_security_abbreviation_set)
    __swig_setmethods__["layered_sign"] = _ama.MDNEEQHierarchicalInfo_layered_sign_set
    __swig_getmethods__["layered_sign"] = _ama.MDNEEQHierarchicalInfo_layered_sign_get
    if _newclass:layered_sign = _swig_property(_ama.MDNEEQHierarchicalInfo_layered_sign_get, _ama.MDNEEQHierarchicalInfo_layered_sign_set)
    __swig_setmethods__["layered_effective_date"] = _ama.MDNEEQHierarchicalInfo_layered_effective_date_set
    __swig_getmethods__["layered_effective_date"] = _ama.MDNEEQHierarchicalInfo_layered_effective_date_get
    if _newclass:layered_effective_date = _swig_property(_ama.MDNEEQHierarchicalInfo_layered_effective_date_get, _ama.MDNEEQHierarchicalInfo_layered_effective_date_set)
    __swig_setmethods__["backup_sign"] = _ama.MDNEEQHierarchicalInfo_backup_sign_set
    __swig_getmethods__["backup_sign"] = _ama.MDNEEQHierarchicalInfo_backup_sign_get
    if _newclass:backup_sign = _swig_property(_ama.MDNEEQHierarchicalInfo_backup_sign_get, _ama.MDNEEQHierarchicalInfo_backup_sign_set)
    __swig_setmethods__["variety_category"] = _ama.MDNEEQHierarchicalInfo_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDNEEQHierarchicalInfo_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDNEEQHierarchicalInfo_variety_category_get, _ama.MDNEEQHierarchicalInfo_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDNEEQHierarchicalInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDNEEQHierarchicalInfo
    __del__ = lambda self : None;
MDNEEQHierarchicalInfo_swigregister = _ama.MDNEEQHierarchicalInfo_swigregister
MDNEEQHierarchicalInfo_swigregister(MDNEEQHierarchicalInfo)

class MDOrderBookItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDOrderBookItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDOrderBookItem, name)
    __repr__ = _swig_repr
    __swig_setmethods__["price"] = _ama.MDOrderBookItem_price_set
    __swig_getmethods__["price"] = _ama.MDOrderBookItem_price_get
    if _newclass:price = _swig_property(_ama.MDOrderBookItem_price_get, _ama.MDOrderBookItem_price_set)
    __swig_setmethods__["volume"] = _ama.MDOrderBookItem_volume_set
    __swig_getmethods__["volume"] = _ama.MDOrderBookItem_volume_get
    if _newclass:volume = _swig_property(_ama.MDOrderBookItem_volume_get, _ama.MDOrderBookItem_volume_set)
    __swig_setmethods__["order_queue_size"] = _ama.MDOrderBookItem_order_queue_size_set
    __swig_getmethods__["order_queue_size"] = _ama.MDOrderBookItem_order_queue_size_get
    if _newclass:order_queue_size = _swig_property(_ama.MDOrderBookItem_order_queue_size_get, _ama.MDOrderBookItem_order_queue_size_set)
    __swig_setmethods__["order_queue"] = _ama.MDOrderBookItem_order_queue_set
    __swig_getmethods__["order_queue"] = _ama.MDOrderBookItem_order_queue_get
    if _newclass:order_queue = _swig_property(_ama.MDOrderBookItem_order_queue_get, _ama.MDOrderBookItem_order_queue_set)
    def __init__(self): 
        this = _ama.new_MDOrderBookItem()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDOrderBookItem
    __del__ = lambda self : None;
MDOrderBookItem_swigregister = _ama.MDOrderBookItem_swigregister
MDOrderBookItem_swigregister(MDOrderBookItem)

class MDOrderBook(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDOrderBook, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDOrderBook, name)
    __repr__ = _swig_repr
    __swig_setmethods__["channel_no"] = _ama.MDOrderBook_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDOrderBook_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDOrderBook_channel_no_get, _ama.MDOrderBook_channel_no_set)
    __swig_setmethods__["market_type"] = _ama.MDOrderBook_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDOrderBook_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDOrderBook_market_type_get, _ama.MDOrderBook_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDOrderBook_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDOrderBook_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDOrderBook_security_code_get, _ama.MDOrderBook_security_code_set)
    __swig_setmethods__["last_tick_time"] = _ama.MDOrderBook_last_tick_time_set
    __swig_getmethods__["last_tick_time"] = _ama.MDOrderBook_last_tick_time_get
    if _newclass:last_tick_time = _swig_property(_ama.MDOrderBook_last_tick_time_get, _ama.MDOrderBook_last_tick_time_set)
    __swig_setmethods__["last_snapshot_time"] = _ama.MDOrderBook_last_snapshot_time_set
    __swig_getmethods__["last_snapshot_time"] = _ama.MDOrderBook_last_snapshot_time_get
    if _newclass:last_snapshot_time = _swig_property(_ama.MDOrderBook_last_snapshot_time_get, _ama.MDOrderBook_last_snapshot_time_set)
    __swig_setmethods__["last_tick_seq"] = _ama.MDOrderBook_last_tick_seq_set
    __swig_getmethods__["last_tick_seq"] = _ama.MDOrderBook_last_tick_seq_get
    if _newclass:last_tick_seq = _swig_property(_ama.MDOrderBook_last_tick_seq_get, _ama.MDOrderBook_last_tick_seq_set)
    __swig_setmethods__["bid_order_book"] = _ama.MDOrderBook_bid_order_book_set
    __swig_getmethods__["bid_order_book"] = _ama.MDOrderBook_bid_order_book_get
    if _newclass:bid_order_book = _swig_property(_ama.MDOrderBook_bid_order_book_get, _ama.MDOrderBook_bid_order_book_set)
    __swig_setmethods__["offer_order_book"] = _ama.MDOrderBook_offer_order_book_set
    __swig_getmethods__["offer_order_book"] = _ama.MDOrderBook_offer_order_book_get
    if _newclass:offer_order_book = _swig_property(_ama.MDOrderBook_offer_order_book_get, _ama.MDOrderBook_offer_order_book_set)
    __swig_setmethods__["total_num_trades"] = _ama.MDOrderBook_total_num_trades_set
    __swig_getmethods__["total_num_trades"] = _ama.MDOrderBook_total_num_trades_get
    if _newclass:total_num_trades = _swig_property(_ama.MDOrderBook_total_num_trades_get, _ama.MDOrderBook_total_num_trades_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDOrderBook_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDOrderBook_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDOrderBook_total_volume_trade_get, _ama.MDOrderBook_total_volume_trade_set)
    __swig_setmethods__["total_value_trade"] = _ama.MDOrderBook_total_value_trade_set
    __swig_getmethods__["total_value_trade"] = _ama.MDOrderBook_total_value_trade_get
    if _newclass:total_value_trade = _swig_property(_ama.MDOrderBook_total_value_trade_get, _ama.MDOrderBook_total_value_trade_set)
    __swig_setmethods__["last_price"] = _ama.MDOrderBook_last_price_set
    __swig_getmethods__["last_price"] = _ama.MDOrderBook_last_price_get
    if _newclass:last_price = _swig_property(_ama.MDOrderBook_last_price_get, _ama.MDOrderBook_last_price_set)
    def __init__(self): 
        this = _ama.new_MDOrderBook()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDOrderBook
    __del__ = lambda self : None;
MDOrderBook_swigregister = _ama.MDOrderBook_swigregister
MDOrderBook_swigregister(MDOrderBook)

class MDOrderBookSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDOrderBookSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDOrderBookSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDOrderBookSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDOrderBookSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDOrderBookSnapshot_market_type_get, _ama.MDOrderBookSnapshot_market_type_set)
    __swig_setmethods__["variety_category"] = _ama.MDOrderBookSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDOrderBookSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDOrderBookSnapshot_variety_category_get, _ama.MDOrderBookSnapshot_variety_category_set)
    __swig_setmethods__["security_code"] = _ama.MDOrderBookSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDOrderBookSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDOrderBookSnapshot_security_code_get, _ama.MDOrderBookSnapshot_security_code_set)
    __swig_setmethods__["last_tick_seq"] = _ama.MDOrderBookSnapshot_last_tick_seq_set
    __swig_getmethods__["last_tick_seq"] = _ama.MDOrderBookSnapshot_last_tick_seq_get
    if _newclass:last_tick_seq = _swig_property(_ama.MDOrderBookSnapshot_last_tick_seq_get, _ama.MDOrderBookSnapshot_last_tick_seq_set)
    __swig_setmethods__["channel_no"] = _ama.MDOrderBookSnapshot_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDOrderBookSnapshot_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDOrderBookSnapshot_channel_no_get, _ama.MDOrderBookSnapshot_channel_no_set)
    __swig_setmethods__["orig_time"] = _ama.MDOrderBookSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDOrderBookSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDOrderBookSnapshot_orig_time_get, _ama.MDOrderBookSnapshot_orig_time_set)
    __swig_setmethods__["last_price"] = _ama.MDOrderBookSnapshot_last_price_set
    __swig_getmethods__["last_price"] = _ama.MDOrderBookSnapshot_last_price_get
    if _newclass:last_price = _swig_property(_ama.MDOrderBookSnapshot_last_price_get, _ama.MDOrderBookSnapshot_last_price_set)
    __swig_setmethods__["total_num_trades"] = _ama.MDOrderBookSnapshot_total_num_trades_set
    __swig_getmethods__["total_num_trades"] = _ama.MDOrderBookSnapshot_total_num_trades_get
    if _newclass:total_num_trades = _swig_property(_ama.MDOrderBookSnapshot_total_num_trades_get, _ama.MDOrderBookSnapshot_total_num_trades_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDOrderBookSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDOrderBookSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDOrderBookSnapshot_total_volume_trade_get, _ama.MDOrderBookSnapshot_total_volume_trade_set)
    __swig_setmethods__["total_value_trade"] = _ama.MDOrderBookSnapshot_total_value_trade_set
    __swig_getmethods__["total_value_trade"] = _ama.MDOrderBookSnapshot_total_value_trade_get
    if _newclass:total_value_trade = _swig_property(_ama.MDOrderBookSnapshot_total_value_trade_get, _ama.MDOrderBookSnapshot_total_value_trade_set)
    __swig_setmethods__["total_bid_volume"] = _ama.MDOrderBookSnapshot_total_bid_volume_set
    __swig_getmethods__["total_bid_volume"] = _ama.MDOrderBookSnapshot_total_bid_volume_get
    if _newclass:total_bid_volume = _swig_property(_ama.MDOrderBookSnapshot_total_bid_volume_get, _ama.MDOrderBookSnapshot_total_bid_volume_set)
    __swig_setmethods__["total_offer_volume"] = _ama.MDOrderBookSnapshot_total_offer_volume_set
    __swig_getmethods__["total_offer_volume"] = _ama.MDOrderBookSnapshot_total_offer_volume_get
    if _newclass:total_offer_volume = _swig_property(_ama.MDOrderBookSnapshot_total_offer_volume_get, _ama.MDOrderBookSnapshot_total_offer_volume_set)
    __swig_setmethods__["num_bid_orders"] = _ama.MDOrderBookSnapshot_num_bid_orders_set
    __swig_getmethods__["num_bid_orders"] = _ama.MDOrderBookSnapshot_num_bid_orders_get
    if _newclass:num_bid_orders = _swig_property(_ama.MDOrderBookSnapshot_num_bid_orders_get, _ama.MDOrderBookSnapshot_num_bid_orders_set)
    __swig_setmethods__["num_offer_orders"] = _ama.MDOrderBookSnapshot_num_offer_orders_set
    __swig_getmethods__["num_offer_orders"] = _ama.MDOrderBookSnapshot_num_offer_orders_get
    if _newclass:num_offer_orders = _swig_property(_ama.MDOrderBookSnapshot_num_offer_orders_get, _ama.MDOrderBookSnapshot_num_offer_orders_set)
    __swig_setmethods__["bid_price"] = _ama.MDOrderBookSnapshot_bid_price_set
    __swig_getmethods__["bid_price"] = _ama.MDOrderBookSnapshot_bid_price_get
    if _newclass:bid_price = _swig_property(_ama.MDOrderBookSnapshot_bid_price_get, _ama.MDOrderBookSnapshot_bid_price_set)
    __swig_setmethods__["bid_volume"] = _ama.MDOrderBookSnapshot_bid_volume_set
    __swig_getmethods__["bid_volume"] = _ama.MDOrderBookSnapshot_bid_volume_get
    if _newclass:bid_volume = _swig_property(_ama.MDOrderBookSnapshot_bid_volume_get, _ama.MDOrderBookSnapshot_bid_volume_set)
    __swig_setmethods__["offer_price"] = _ama.MDOrderBookSnapshot_offer_price_set
    __swig_getmethods__["offer_price"] = _ama.MDOrderBookSnapshot_offer_price_get
    if _newclass:offer_price = _swig_property(_ama.MDOrderBookSnapshot_offer_price_get, _ama.MDOrderBookSnapshot_offer_price_set)
    __swig_setmethods__["offer_volume"] = _ama.MDOrderBookSnapshot_offer_volume_set
    __swig_getmethods__["offer_volume"] = _ama.MDOrderBookSnapshot_offer_volume_get
    if _newclass:offer_volume = _swig_property(_ama.MDOrderBookSnapshot_offer_volume_get, _ama.MDOrderBookSnapshot_offer_volume_set)
    def __init__(self): 
        this = _ama.new_MDOrderBookSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDOrderBookSnapshot
    __del__ = lambda self : None;
MDOrderBookSnapshot_swigregister = _ama.MDOrderBookSnapshot_swigregister
MDOrderBookSnapshot_swigregister(MDOrderBookSnapshot)

class MDNEEQNegotiableDeclaredInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDNEEQNegotiableDeclaredInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDNEEQNegotiableDeclaredInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDNEEQNegotiableDeclaredInfo_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDNEEQNegotiableDeclaredInfo_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDNEEQNegotiableDeclaredInfo_market_type_get, _ama.MDNEEQNegotiableDeclaredInfo_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDNEEQNegotiableDeclaredInfo_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDNEEQNegotiableDeclaredInfo_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDNEEQNegotiableDeclaredInfo_security_code_get, _ama.MDNEEQNegotiableDeclaredInfo_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDNEEQNegotiableDeclaredInfo_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDNEEQNegotiableDeclaredInfo_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDNEEQNegotiableDeclaredInfo_orig_time_get, _ama.MDNEEQNegotiableDeclaredInfo_orig_time_set)
    __swig_setmethods__["transaction_unit"] = _ama.MDNEEQNegotiableDeclaredInfo_transaction_unit_set
    __swig_getmethods__["transaction_unit"] = _ama.MDNEEQNegotiableDeclaredInfo_transaction_unit_get
    if _newclass:transaction_unit = _swig_property(_ama.MDNEEQNegotiableDeclaredInfo_transaction_unit_get, _ama.MDNEEQNegotiableDeclaredInfo_transaction_unit_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDNEEQNegotiableDeclaredInfo_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDNEEQNegotiableDeclaredInfo_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDNEEQNegotiableDeclaredInfo_md_stream_id_get, _ama.MDNEEQNegotiableDeclaredInfo_md_stream_id_set)
    __swig_setmethods__["declare_volume"] = _ama.MDNEEQNegotiableDeclaredInfo_declare_volume_set
    __swig_getmethods__["declare_volume"] = _ama.MDNEEQNegotiableDeclaredInfo_declare_volume_get
    if _newclass:declare_volume = _swig_property(_ama.MDNEEQNegotiableDeclaredInfo_declare_volume_get, _ama.MDNEEQNegotiableDeclaredInfo_declare_volume_set)
    __swig_setmethods__["declare_price"] = _ama.MDNEEQNegotiableDeclaredInfo_declare_price_set
    __swig_getmethods__["declare_price"] = _ama.MDNEEQNegotiableDeclaredInfo_declare_price_get
    if _newclass:declare_price = _swig_property(_ama.MDNEEQNegotiableDeclaredInfo_declare_price_get, _ama.MDNEEQNegotiableDeclaredInfo_declare_price_set)
    __swig_setmethods__["deal_agreement_num"] = _ama.MDNEEQNegotiableDeclaredInfo_deal_agreement_num_set
    __swig_getmethods__["deal_agreement_num"] = _ama.MDNEEQNegotiableDeclaredInfo_deal_agreement_num_get
    if _newclass:deal_agreement_num = _swig_property(_ama.MDNEEQNegotiableDeclaredInfo_deal_agreement_num_get, _ama.MDNEEQNegotiableDeclaredInfo_deal_agreement_num_set)
    __swig_setmethods__["declare_time"] = _ama.MDNEEQNegotiableDeclaredInfo_declare_time_set
    __swig_getmethods__["declare_time"] = _ama.MDNEEQNegotiableDeclaredInfo_declare_time_get
    if _newclass:declare_time = _swig_property(_ama.MDNEEQNegotiableDeclaredInfo_declare_time_get, _ama.MDNEEQNegotiableDeclaredInfo_declare_time_set)
    __swig_setmethods__["record_status"] = _ama.MDNEEQNegotiableDeclaredInfo_record_status_set
    __swig_getmethods__["record_status"] = _ama.MDNEEQNegotiableDeclaredInfo_record_status_get
    if _newclass:record_status = _swig_property(_ama.MDNEEQNegotiableDeclaredInfo_record_status_get, _ama.MDNEEQNegotiableDeclaredInfo_record_status_set)
    __swig_setmethods__["backup_sign"] = _ama.MDNEEQNegotiableDeclaredInfo_backup_sign_set
    __swig_getmethods__["backup_sign"] = _ama.MDNEEQNegotiableDeclaredInfo_backup_sign_get
    if _newclass:backup_sign = _swig_property(_ama.MDNEEQNegotiableDeclaredInfo_backup_sign_get, _ama.MDNEEQNegotiableDeclaredInfo_backup_sign_set)
    __swig_setmethods__["variety_category"] = _ama.MDNEEQNegotiableDeclaredInfo_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDNEEQNegotiableDeclaredInfo_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDNEEQNegotiableDeclaredInfo_variety_category_get, _ama.MDNEEQNegotiableDeclaredInfo_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDNEEQNegotiableDeclaredInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDNEEQNegotiableDeclaredInfo
    __del__ = lambda self : None;
MDNEEQNegotiableDeclaredInfo_swigregister = _ama.MDNEEQNegotiableDeclaredInfo_swigregister
MDNEEQNegotiableDeclaredInfo_swigregister(MDNEEQNegotiableDeclaredInfo)

class MDNEEQMarketMakerDeclaredInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDNEEQMarketMakerDeclaredInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDNEEQMarketMakerDeclaredInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDNEEQMarketMakerDeclaredInfo_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDNEEQMarketMakerDeclaredInfo_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDNEEQMarketMakerDeclaredInfo_market_type_get, _ama.MDNEEQMarketMakerDeclaredInfo_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDNEEQMarketMakerDeclaredInfo_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDNEEQMarketMakerDeclaredInfo_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDNEEQMarketMakerDeclaredInfo_security_code_get, _ama.MDNEEQMarketMakerDeclaredInfo_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDNEEQMarketMakerDeclaredInfo_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDNEEQMarketMakerDeclaredInfo_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDNEEQMarketMakerDeclaredInfo_orig_time_get, _ama.MDNEEQMarketMakerDeclaredInfo_orig_time_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDNEEQMarketMakerDeclaredInfo_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDNEEQMarketMakerDeclaredInfo_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDNEEQMarketMakerDeclaredInfo_md_stream_id_get, _ama.MDNEEQMarketMakerDeclaredInfo_md_stream_id_set)
    __swig_setmethods__["declare_volume"] = _ama.MDNEEQMarketMakerDeclaredInfo_declare_volume_set
    __swig_getmethods__["declare_volume"] = _ama.MDNEEQMarketMakerDeclaredInfo_declare_volume_get
    if _newclass:declare_volume = _swig_property(_ama.MDNEEQMarketMakerDeclaredInfo_declare_volume_get, _ama.MDNEEQMarketMakerDeclaredInfo_declare_volume_set)
    __swig_setmethods__["declare_price"] = _ama.MDNEEQMarketMakerDeclaredInfo_declare_price_set
    __swig_getmethods__["declare_price"] = _ama.MDNEEQMarketMakerDeclaredInfo_declare_price_get
    if _newclass:declare_price = _swig_property(_ama.MDNEEQMarketMakerDeclaredInfo_declare_price_get, _ama.MDNEEQMarketMakerDeclaredInfo_declare_price_set)
    __swig_setmethods__["data_type"] = _ama.MDNEEQMarketMakerDeclaredInfo_data_type_set
    __swig_getmethods__["data_type"] = _ama.MDNEEQMarketMakerDeclaredInfo_data_type_get
    if _newclass:data_type = _swig_property(_ama.MDNEEQMarketMakerDeclaredInfo_data_type_get, _ama.MDNEEQMarketMakerDeclaredInfo_data_type_set)
    __swig_setmethods__["declare_time"] = _ama.MDNEEQMarketMakerDeclaredInfo_declare_time_set
    __swig_getmethods__["declare_time"] = _ama.MDNEEQMarketMakerDeclaredInfo_declare_time_get
    if _newclass:declare_time = _swig_property(_ama.MDNEEQMarketMakerDeclaredInfo_declare_time_get, _ama.MDNEEQMarketMakerDeclaredInfo_declare_time_set)
    __swig_setmethods__["backup_field"] = _ama.MDNEEQMarketMakerDeclaredInfo_backup_field_set
    __swig_getmethods__["backup_field"] = _ama.MDNEEQMarketMakerDeclaredInfo_backup_field_get
    if _newclass:backup_field = _swig_property(_ama.MDNEEQMarketMakerDeclaredInfo_backup_field_get, _ama.MDNEEQMarketMakerDeclaredInfo_backup_field_set)
    __swig_setmethods__["variety_category"] = _ama.MDNEEQMarketMakerDeclaredInfo_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDNEEQMarketMakerDeclaredInfo_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDNEEQMarketMakerDeclaredInfo_variety_category_get, _ama.MDNEEQMarketMakerDeclaredInfo_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDNEEQMarketMakerDeclaredInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDNEEQMarketMakerDeclaredInfo
    __del__ = lambda self : None;
MDNEEQMarketMakerDeclaredInfo_swigregister = _ama.MDNEEQMarketMakerDeclaredInfo_swigregister
MDNEEQMarketMakerDeclaredInfo_swigregister(MDNEEQMarketMakerDeclaredInfo)

class MDNEEQNonPublicTransferDealInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDNEEQNonPublicTransferDealInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDNEEQNonPublicTransferDealInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDNEEQNonPublicTransferDealInfo_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDNEEQNonPublicTransferDealInfo_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDNEEQNonPublicTransferDealInfo_market_type_get, _ama.MDNEEQNonPublicTransferDealInfo_market_type_set)
    __swig_setmethods__["serial_num"] = _ama.MDNEEQNonPublicTransferDealInfo_serial_num_set
    __swig_getmethods__["serial_num"] = _ama.MDNEEQNonPublicTransferDealInfo_serial_num_get
    if _newclass:serial_num = _swig_property(_ama.MDNEEQNonPublicTransferDealInfo_serial_num_get, _ama.MDNEEQNonPublicTransferDealInfo_serial_num_set)
    __swig_setmethods__["security_code"] = _ama.MDNEEQNonPublicTransferDealInfo_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDNEEQNonPublicTransferDealInfo_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDNEEQNonPublicTransferDealInfo_security_code_get, _ama.MDNEEQNonPublicTransferDealInfo_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDNEEQNonPublicTransferDealInfo_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDNEEQNonPublicTransferDealInfo_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDNEEQNonPublicTransferDealInfo_orig_time_get, _ama.MDNEEQNonPublicTransferDealInfo_orig_time_set)
    __swig_setmethods__["security_abbreviation"] = _ama.MDNEEQNonPublicTransferDealInfo_security_abbreviation_set
    __swig_getmethods__["security_abbreviation"] = _ama.MDNEEQNonPublicTransferDealInfo_security_abbreviation_get
    if _newclass:security_abbreviation = _swig_property(_ama.MDNEEQNonPublicTransferDealInfo_security_abbreviation_get, _ama.MDNEEQNonPublicTransferDealInfo_security_abbreviation_set)
    __swig_setmethods__["security_category"] = _ama.MDNEEQNonPublicTransferDealInfo_security_category_set
    __swig_getmethods__["security_category"] = _ama.MDNEEQNonPublicTransferDealInfo_security_category_get
    if _newclass:security_category = _swig_property(_ama.MDNEEQNonPublicTransferDealInfo_security_category_get, _ama.MDNEEQNonPublicTransferDealInfo_security_category_set)
    __swig_setmethods__["bid_transaction_unit"] = _ama.MDNEEQNonPublicTransferDealInfo_bid_transaction_unit_set
    __swig_getmethods__["bid_transaction_unit"] = _ama.MDNEEQNonPublicTransferDealInfo_bid_transaction_unit_get
    if _newclass:bid_transaction_unit = _swig_property(_ama.MDNEEQNonPublicTransferDealInfo_bid_transaction_unit_get, _ama.MDNEEQNonPublicTransferDealInfo_bid_transaction_unit_set)
    __swig_setmethods__["bid_transaction_unit_name"] = _ama.MDNEEQNonPublicTransferDealInfo_bid_transaction_unit_name_set
    __swig_getmethods__["bid_transaction_unit_name"] = _ama.MDNEEQNonPublicTransferDealInfo_bid_transaction_unit_name_get
    if _newclass:bid_transaction_unit_name = _swig_property(_ama.MDNEEQNonPublicTransferDealInfo_bid_transaction_unit_name_get, _ama.MDNEEQNonPublicTransferDealInfo_bid_transaction_unit_name_set)
    __swig_setmethods__["offer_transaction_unit"] = _ama.MDNEEQNonPublicTransferDealInfo_offer_transaction_unit_set
    __swig_getmethods__["offer_transaction_unit"] = _ama.MDNEEQNonPublicTransferDealInfo_offer_transaction_unit_get
    if _newclass:offer_transaction_unit = _swig_property(_ama.MDNEEQNonPublicTransferDealInfo_offer_transaction_unit_get, _ama.MDNEEQNonPublicTransferDealInfo_offer_transaction_unit_set)
    __swig_setmethods__["offer_transaction_unit_name"] = _ama.MDNEEQNonPublicTransferDealInfo_offer_transaction_unit_name_set
    __swig_getmethods__["offer_transaction_unit_name"] = _ama.MDNEEQNonPublicTransferDealInfo_offer_transaction_unit_name_get
    if _newclass:offer_transaction_unit_name = _swig_property(_ama.MDNEEQNonPublicTransferDealInfo_offer_transaction_unit_name_get, _ama.MDNEEQNonPublicTransferDealInfo_offer_transaction_unit_name_set)
    __swig_setmethods__["deal_volume"] = _ama.MDNEEQNonPublicTransferDealInfo_deal_volume_set
    __swig_getmethods__["deal_volume"] = _ama.MDNEEQNonPublicTransferDealInfo_deal_volume_get
    if _newclass:deal_volume = _swig_property(_ama.MDNEEQNonPublicTransferDealInfo_deal_volume_get, _ama.MDNEEQNonPublicTransferDealInfo_deal_volume_set)
    __swig_setmethods__["deal_price"] = _ama.MDNEEQNonPublicTransferDealInfo_deal_price_set
    __swig_getmethods__["deal_price"] = _ama.MDNEEQNonPublicTransferDealInfo_deal_price_get
    if _newclass:deal_price = _swig_property(_ama.MDNEEQNonPublicTransferDealInfo_deal_price_get, _ama.MDNEEQNonPublicTransferDealInfo_deal_price_set)
    __swig_setmethods__["deal_time"] = _ama.MDNEEQNonPublicTransferDealInfo_deal_time_set
    __swig_getmethods__["deal_time"] = _ama.MDNEEQNonPublicTransferDealInfo_deal_time_get
    if _newclass:deal_time = _swig_property(_ama.MDNEEQNonPublicTransferDealInfo_deal_time_get, _ama.MDNEEQNonPublicTransferDealInfo_deal_time_set)
    __swig_setmethods__["backup_sign"] = _ama.MDNEEQNonPublicTransferDealInfo_backup_sign_set
    __swig_getmethods__["backup_sign"] = _ama.MDNEEQNonPublicTransferDealInfo_backup_sign_get
    if _newclass:backup_sign = _swig_property(_ama.MDNEEQNonPublicTransferDealInfo_backup_sign_get, _ama.MDNEEQNonPublicTransferDealInfo_backup_sign_set)
    __swig_setmethods__["variety_category"] = _ama.MDNEEQNonPublicTransferDealInfo_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDNEEQNonPublicTransferDealInfo_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDNEEQNonPublicTransferDealInfo_variety_category_get, _ama.MDNEEQNonPublicTransferDealInfo_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDNEEQNonPublicTransferDealInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDNEEQNonPublicTransferDealInfo
    __del__ = lambda self : None;
MDNEEQNonPublicTransferDealInfo_swigregister = _ama.MDNEEQNonPublicTransferDealInfo_swigregister
MDNEEQNonPublicTransferDealInfo_swigregister(MDNEEQNonPublicTransferDealInfo)

class SubTradingPhase(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SubTradingPhase, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SubTradingPhase, name)
    __repr__ = _swig_repr
    __swig_setmethods__["sub_trading_phase_code"] = _ama.SubTradingPhase_sub_trading_phase_code_set
    __swig_getmethods__["sub_trading_phase_code"] = _ama.SubTradingPhase_sub_trading_phase_code_get
    if _newclass:sub_trading_phase_code = _swig_property(_ama.SubTradingPhase_sub_trading_phase_code_get, _ama.SubTradingPhase_sub_trading_phase_code_set)
    __swig_setmethods__["trading_type"] = _ama.SubTradingPhase_trading_type_set
    __swig_getmethods__["trading_type"] = _ama.SubTradingPhase_trading_type_get
    if _newclass:trading_type = _swig_property(_ama.SubTradingPhase_trading_type_get, _ama.SubTradingPhase_trading_type_set)
    def __init__(self): 
        this = _ama.new_SubTradingPhase()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_SubTradingPhase
    __del__ = lambda self : None;
SubTradingPhase_swigregister = _ama.SubTradingPhase_swigregister
SubTradingPhase_swigregister(SubTradingPhase)

class MDBondSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDBondSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDBondSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDBondSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDBondSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDBondSnapshot_market_type_get, _ama.MDBondSnapshot_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDBondSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDBondSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDBondSnapshot_security_code_get, _ama.MDBondSnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDBondSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDBondSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDBondSnapshot_orig_time_get, _ama.MDBondSnapshot_orig_time_set)
    __swig_setmethods__["trading_phase_code"] = _ama.MDBondSnapshot_trading_phase_code_set
    __swig_getmethods__["trading_phase_code"] = _ama.MDBondSnapshot_trading_phase_code_get
    if _newclass:trading_phase_code = _swig_property(_ama.MDBondSnapshot_trading_phase_code_get, _ama.MDBondSnapshot_trading_phase_code_set)
    __swig_setmethods__["pre_close_price"] = _ama.MDBondSnapshot_pre_close_price_set
    __swig_getmethods__["pre_close_price"] = _ama.MDBondSnapshot_pre_close_price_get
    if _newclass:pre_close_price = _swig_property(_ama.MDBondSnapshot_pre_close_price_get, _ama.MDBondSnapshot_pre_close_price_set)
    __swig_setmethods__["open_price"] = _ama.MDBondSnapshot_open_price_set
    __swig_getmethods__["open_price"] = _ama.MDBondSnapshot_open_price_get
    if _newclass:open_price = _swig_property(_ama.MDBondSnapshot_open_price_get, _ama.MDBondSnapshot_open_price_set)
    __swig_setmethods__["high_price"] = _ama.MDBondSnapshot_high_price_set
    __swig_getmethods__["high_price"] = _ama.MDBondSnapshot_high_price_get
    if _newclass:high_price = _swig_property(_ama.MDBondSnapshot_high_price_get, _ama.MDBondSnapshot_high_price_set)
    __swig_setmethods__["low_price"] = _ama.MDBondSnapshot_low_price_set
    __swig_getmethods__["low_price"] = _ama.MDBondSnapshot_low_price_get
    if _newclass:low_price = _swig_property(_ama.MDBondSnapshot_low_price_get, _ama.MDBondSnapshot_low_price_set)
    __swig_setmethods__["last_price"] = _ama.MDBondSnapshot_last_price_set
    __swig_getmethods__["last_price"] = _ama.MDBondSnapshot_last_price_get
    if _newclass:last_price = _swig_property(_ama.MDBondSnapshot_last_price_get, _ama.MDBondSnapshot_last_price_set)
    __swig_setmethods__["close_price"] = _ama.MDBondSnapshot_close_price_set
    __swig_getmethods__["close_price"] = _ama.MDBondSnapshot_close_price_get
    if _newclass:close_price = _swig_property(_ama.MDBondSnapshot_close_price_get, _ama.MDBondSnapshot_close_price_set)
    __swig_setmethods__["bid_price"] = _ama.MDBondSnapshot_bid_price_set
    __swig_getmethods__["bid_price"] = _ama.MDBondSnapshot_bid_price_get
    if _newclass:bid_price = _swig_property(_ama.MDBondSnapshot_bid_price_get, _ama.MDBondSnapshot_bid_price_set)
    __swig_setmethods__["bid_volume"] = _ama.MDBondSnapshot_bid_volume_set
    __swig_getmethods__["bid_volume"] = _ama.MDBondSnapshot_bid_volume_get
    if _newclass:bid_volume = _swig_property(_ama.MDBondSnapshot_bid_volume_get, _ama.MDBondSnapshot_bid_volume_set)
    __swig_setmethods__["offer_price"] = _ama.MDBondSnapshot_offer_price_set
    __swig_getmethods__["offer_price"] = _ama.MDBondSnapshot_offer_price_get
    if _newclass:offer_price = _swig_property(_ama.MDBondSnapshot_offer_price_get, _ama.MDBondSnapshot_offer_price_set)
    __swig_setmethods__["offer_volume"] = _ama.MDBondSnapshot_offer_volume_set
    __swig_getmethods__["offer_volume"] = _ama.MDBondSnapshot_offer_volume_get
    if _newclass:offer_volume = _swig_property(_ama.MDBondSnapshot_offer_volume_get, _ama.MDBondSnapshot_offer_volume_set)
    __swig_setmethods__["num_trades"] = _ama.MDBondSnapshot_num_trades_set
    __swig_getmethods__["num_trades"] = _ama.MDBondSnapshot_num_trades_get
    if _newclass:num_trades = _swig_property(_ama.MDBondSnapshot_num_trades_get, _ama.MDBondSnapshot_num_trades_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDBondSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDBondSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDBondSnapshot_total_volume_trade_get, _ama.MDBondSnapshot_total_volume_trade_set)
    __swig_setmethods__["total_value_trade"] = _ama.MDBondSnapshot_total_value_trade_set
    __swig_getmethods__["total_value_trade"] = _ama.MDBondSnapshot_total_value_trade_get
    if _newclass:total_value_trade = _swig_property(_ama.MDBondSnapshot_total_value_trade_get, _ama.MDBondSnapshot_total_value_trade_set)
    __swig_setmethods__["total_bid_volume"] = _ama.MDBondSnapshot_total_bid_volume_set
    __swig_getmethods__["total_bid_volume"] = _ama.MDBondSnapshot_total_bid_volume_get
    if _newclass:total_bid_volume = _swig_property(_ama.MDBondSnapshot_total_bid_volume_get, _ama.MDBondSnapshot_total_bid_volume_set)
    __swig_setmethods__["total_offer_volume"] = _ama.MDBondSnapshot_total_offer_volume_set
    __swig_getmethods__["total_offer_volume"] = _ama.MDBondSnapshot_total_offer_volume_get
    if _newclass:total_offer_volume = _swig_property(_ama.MDBondSnapshot_total_offer_volume_get, _ama.MDBondSnapshot_total_offer_volume_set)
    __swig_setmethods__["weighted_avg_bid_price"] = _ama.MDBondSnapshot_weighted_avg_bid_price_set
    __swig_getmethods__["weighted_avg_bid_price"] = _ama.MDBondSnapshot_weighted_avg_bid_price_get
    if _newclass:weighted_avg_bid_price = _swig_property(_ama.MDBondSnapshot_weighted_avg_bid_price_get, _ama.MDBondSnapshot_weighted_avg_bid_price_set)
    __swig_setmethods__["weighted_avg_offer_price"] = _ama.MDBondSnapshot_weighted_avg_offer_price_set
    __swig_getmethods__["weighted_avg_offer_price"] = _ama.MDBondSnapshot_weighted_avg_offer_price_get
    if _newclass:weighted_avg_offer_price = _swig_property(_ama.MDBondSnapshot_weighted_avg_offer_price_get, _ama.MDBondSnapshot_weighted_avg_offer_price_set)
    __swig_setmethods__["high_limited"] = _ama.MDBondSnapshot_high_limited_set
    __swig_getmethods__["high_limited"] = _ama.MDBondSnapshot_high_limited_get
    if _newclass:high_limited = _swig_property(_ama.MDBondSnapshot_high_limited_get, _ama.MDBondSnapshot_high_limited_set)
    __swig_setmethods__["low_limited"] = _ama.MDBondSnapshot_low_limited_set
    __swig_getmethods__["low_limited"] = _ama.MDBondSnapshot_low_limited_get
    if _newclass:low_limited = _swig_property(_ama.MDBondSnapshot_low_limited_get, _ama.MDBondSnapshot_low_limited_set)
    __swig_setmethods__["change1"] = _ama.MDBondSnapshot_change1_set
    __swig_getmethods__["change1"] = _ama.MDBondSnapshot_change1_get
    if _newclass:change1 = _swig_property(_ama.MDBondSnapshot_change1_get, _ama.MDBondSnapshot_change1_set)
    __swig_setmethods__["change2"] = _ama.MDBondSnapshot_change2_set
    __swig_getmethods__["change2"] = _ama.MDBondSnapshot_change2_get
    if _newclass:change2 = _swig_property(_ama.MDBondSnapshot_change2_get, _ama.MDBondSnapshot_change2_set)
    __swig_setmethods__["weighted_avg_bp"] = _ama.MDBondSnapshot_weighted_avg_bp_set
    __swig_getmethods__["weighted_avg_bp"] = _ama.MDBondSnapshot_weighted_avg_bp_get
    if _newclass:weighted_avg_bp = _swig_property(_ama.MDBondSnapshot_weighted_avg_bp_get, _ama.MDBondSnapshot_weighted_avg_bp_set)
    __swig_setmethods__["pre_close_weighted_avg_price"] = _ama.MDBondSnapshot_pre_close_weighted_avg_price_set
    __swig_getmethods__["pre_close_weighted_avg_price"] = _ama.MDBondSnapshot_pre_close_weighted_avg_price_get
    if _newclass:pre_close_weighted_avg_price = _swig_property(_ama.MDBondSnapshot_pre_close_weighted_avg_price_get, _ama.MDBondSnapshot_pre_close_weighted_avg_price_set)
    __swig_setmethods__["auct_last_price"] = _ama.MDBondSnapshot_auct_last_price_set
    __swig_getmethods__["auct_last_price"] = _ama.MDBondSnapshot_auct_last_price_get
    if _newclass:auct_last_price = _swig_property(_ama.MDBondSnapshot_auct_last_price_get, _ama.MDBondSnapshot_auct_last_price_set)
    __swig_setmethods__["last_price_trading_type"] = _ama.MDBondSnapshot_last_price_trading_type_set
    __swig_getmethods__["last_price_trading_type"] = _ama.MDBondSnapshot_last_price_trading_type_get
    if _newclass:last_price_trading_type = _swig_property(_ama.MDBondSnapshot_last_price_trading_type_get, _ama.MDBondSnapshot_last_price_trading_type_set)
    __swig_setmethods__["channel_no"] = _ama.MDBondSnapshot_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDBondSnapshot_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDBondSnapshot_channel_no_get, _ama.MDBondSnapshot_channel_no_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDBondSnapshot_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDBondSnapshot_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDBondSnapshot_md_stream_id_get, _ama.MDBondSnapshot_md_stream_id_set)
    __swig_setmethods__["instrument_status"] = _ama.MDBondSnapshot_instrument_status_set
    __swig_getmethods__["instrument_status"] = _ama.MDBondSnapshot_instrument_status_get
    if _newclass:instrument_status = _swig_property(_ama.MDBondSnapshot_instrument_status_get, _ama.MDBondSnapshot_instrument_status_set)
    __swig_setmethods__["withdraw_buy_number"] = _ama.MDBondSnapshot_withdraw_buy_number_set
    __swig_getmethods__["withdraw_buy_number"] = _ama.MDBondSnapshot_withdraw_buy_number_get
    if _newclass:withdraw_buy_number = _swig_property(_ama.MDBondSnapshot_withdraw_buy_number_get, _ama.MDBondSnapshot_withdraw_buy_number_set)
    __swig_setmethods__["withdraw_buy_amount"] = _ama.MDBondSnapshot_withdraw_buy_amount_set
    __swig_getmethods__["withdraw_buy_amount"] = _ama.MDBondSnapshot_withdraw_buy_amount_get
    if _newclass:withdraw_buy_amount = _swig_property(_ama.MDBondSnapshot_withdraw_buy_amount_get, _ama.MDBondSnapshot_withdraw_buy_amount_set)
    __swig_setmethods__["withdraw_buy_money"] = _ama.MDBondSnapshot_withdraw_buy_money_set
    __swig_getmethods__["withdraw_buy_money"] = _ama.MDBondSnapshot_withdraw_buy_money_get
    if _newclass:withdraw_buy_money = _swig_property(_ama.MDBondSnapshot_withdraw_buy_money_get, _ama.MDBondSnapshot_withdraw_buy_money_set)
    __swig_setmethods__["withdraw_sell_number"] = _ama.MDBondSnapshot_withdraw_sell_number_set
    __swig_getmethods__["withdraw_sell_number"] = _ama.MDBondSnapshot_withdraw_sell_number_get
    if _newclass:withdraw_sell_number = _swig_property(_ama.MDBondSnapshot_withdraw_sell_number_get, _ama.MDBondSnapshot_withdraw_sell_number_set)
    __swig_setmethods__["withdraw_sell_amount"] = _ama.MDBondSnapshot_withdraw_sell_amount_set
    __swig_getmethods__["withdraw_sell_amount"] = _ama.MDBondSnapshot_withdraw_sell_amount_get
    if _newclass:withdraw_sell_amount = _swig_property(_ama.MDBondSnapshot_withdraw_sell_amount_get, _ama.MDBondSnapshot_withdraw_sell_amount_set)
    __swig_setmethods__["withdraw_sell_money"] = _ama.MDBondSnapshot_withdraw_sell_money_set
    __swig_getmethods__["withdraw_sell_money"] = _ama.MDBondSnapshot_withdraw_sell_money_get
    if _newclass:withdraw_sell_money = _swig_property(_ama.MDBondSnapshot_withdraw_sell_money_get, _ama.MDBondSnapshot_withdraw_sell_money_set)
    __swig_setmethods__["total_bid_number"] = _ama.MDBondSnapshot_total_bid_number_set
    __swig_getmethods__["total_bid_number"] = _ama.MDBondSnapshot_total_bid_number_get
    if _newclass:total_bid_number = _swig_property(_ama.MDBondSnapshot_total_bid_number_get, _ama.MDBondSnapshot_total_bid_number_set)
    __swig_setmethods__["total_offer_number"] = _ama.MDBondSnapshot_total_offer_number_set
    __swig_getmethods__["total_offer_number"] = _ama.MDBondSnapshot_total_offer_number_get
    if _newclass:total_offer_number = _swig_property(_ama.MDBondSnapshot_total_offer_number_get, _ama.MDBondSnapshot_total_offer_number_set)
    __swig_setmethods__["bid_trade_max_duration"] = _ama.MDBondSnapshot_bid_trade_max_duration_set
    __swig_getmethods__["bid_trade_max_duration"] = _ama.MDBondSnapshot_bid_trade_max_duration_get
    if _newclass:bid_trade_max_duration = _swig_property(_ama.MDBondSnapshot_bid_trade_max_duration_get, _ama.MDBondSnapshot_bid_trade_max_duration_set)
    __swig_setmethods__["offer_trade_max_duration"] = _ama.MDBondSnapshot_offer_trade_max_duration_set
    __swig_getmethods__["offer_trade_max_duration"] = _ama.MDBondSnapshot_offer_trade_max_duration_get
    if _newclass:offer_trade_max_duration = _swig_property(_ama.MDBondSnapshot_offer_trade_max_duration_get, _ama.MDBondSnapshot_offer_trade_max_duration_set)
    __swig_setmethods__["num_bid_orders"] = _ama.MDBondSnapshot_num_bid_orders_set
    __swig_getmethods__["num_bid_orders"] = _ama.MDBondSnapshot_num_bid_orders_get
    if _newclass:num_bid_orders = _swig_property(_ama.MDBondSnapshot_num_bid_orders_get, _ama.MDBondSnapshot_num_bid_orders_set)
    __swig_setmethods__["num_offer_orders"] = _ama.MDBondSnapshot_num_offer_orders_set
    __swig_getmethods__["num_offer_orders"] = _ama.MDBondSnapshot_num_offer_orders_get
    if _newclass:num_offer_orders = _swig_property(_ama.MDBondSnapshot_num_offer_orders_get, _ama.MDBondSnapshot_num_offer_orders_set)
    __swig_setmethods__["last_trade_time"] = _ama.MDBondSnapshot_last_trade_time_set
    __swig_getmethods__["last_trade_time"] = _ama.MDBondSnapshot_last_trade_time_get
    if _newclass:last_trade_time = _swig_property(_ama.MDBondSnapshot_last_trade_time_get, _ama.MDBondSnapshot_last_trade_time_set)
    __swig_setmethods__["weighted_avg_price"] = _ama.MDBondSnapshot_weighted_avg_price_set
    __swig_getmethods__["weighted_avg_price"] = _ama.MDBondSnapshot_weighted_avg_price_get
    if _newclass:weighted_avg_price = _swig_property(_ama.MDBondSnapshot_weighted_avg_price_get, _ama.MDBondSnapshot_weighted_avg_price_set)
    __swig_setmethods__["no_sub_trading_phase_code"] = _ama.MDBondSnapshot_no_sub_trading_phase_code_set
    __swig_getmethods__["no_sub_trading_phase_code"] = _ama.MDBondSnapshot_no_sub_trading_phase_code_get
    if _newclass:no_sub_trading_phase_code = _swig_property(_ama.MDBondSnapshot_no_sub_trading_phase_code_get, _ama.MDBondSnapshot_no_sub_trading_phase_code_set)
    __swig_setmethods__["sub_trading_phase"] = _ama.MDBondSnapshot_sub_trading_phase_set
    __swig_getmethods__["sub_trading_phase"] = _ama.MDBondSnapshot_sub_trading_phase_get
    if _newclass:sub_trading_phase = _swig_property(_ama.MDBondSnapshot_sub_trading_phase_get, _ama.MDBondSnapshot_sub_trading_phase_set)
    __swig_setmethods__["auct_volume_trade"] = _ama.MDBondSnapshot_auct_volume_trade_set
    __swig_getmethods__["auct_volume_trade"] = _ama.MDBondSnapshot_auct_volume_trade_get
    if _newclass:auct_volume_trade = _swig_property(_ama.MDBondSnapshot_auct_volume_trade_get, _ama.MDBondSnapshot_auct_volume_trade_set)
    __swig_setmethods__["auct_value_trade"] = _ama.MDBondSnapshot_auct_value_trade_set
    __swig_getmethods__["auct_value_trade"] = _ama.MDBondSnapshot_auct_value_trade_get
    if _newclass:auct_value_trade = _swig_property(_ama.MDBondSnapshot_auct_value_trade_get, _ama.MDBondSnapshot_auct_value_trade_set)
    __swig_setmethods__["variety_category"] = _ama.MDBondSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDBondSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDBondSnapshot_variety_category_get, _ama.MDBondSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDBondSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDBondSnapshot
    __del__ = lambda self : None;
MDBondSnapshot_swigregister = _ama.MDBondSnapshot_swigregister
MDBondSnapshot_swigregister(MDBondSnapshot)

class MDBondTickOrder(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDBondTickOrder, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDBondTickOrder, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDBondTickOrder_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDBondTickOrder_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDBondTickOrder_market_type_get, _ama.MDBondTickOrder_market_type_set)
    __swig_setmethods__["appl_seq_num"] = _ama.MDBondTickOrder_appl_seq_num_set
    __swig_getmethods__["appl_seq_num"] = _ama.MDBondTickOrder_appl_seq_num_get
    if _newclass:appl_seq_num = _swig_property(_ama.MDBondTickOrder_appl_seq_num_get, _ama.MDBondTickOrder_appl_seq_num_set)
    __swig_setmethods__["channel_no"] = _ama.MDBondTickOrder_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDBondTickOrder_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDBondTickOrder_channel_no_get, _ama.MDBondTickOrder_channel_no_set)
    __swig_setmethods__["security_code"] = _ama.MDBondTickOrder_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDBondTickOrder_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDBondTickOrder_security_code_get, _ama.MDBondTickOrder_security_code_set)
    __swig_setmethods__["order_time"] = _ama.MDBondTickOrder_order_time_set
    __swig_getmethods__["order_time"] = _ama.MDBondTickOrder_order_time_get
    if _newclass:order_time = _swig_property(_ama.MDBondTickOrder_order_time_get, _ama.MDBondTickOrder_order_time_set)
    __swig_setmethods__["order_price"] = _ama.MDBondTickOrder_order_price_set
    __swig_getmethods__["order_price"] = _ama.MDBondTickOrder_order_price_get
    if _newclass:order_price = _swig_property(_ama.MDBondTickOrder_order_price_get, _ama.MDBondTickOrder_order_price_set)
    __swig_setmethods__["order_volume"] = _ama.MDBondTickOrder_order_volume_set
    __swig_getmethods__["order_volume"] = _ama.MDBondTickOrder_order_volume_get
    if _newclass:order_volume = _swig_property(_ama.MDBondTickOrder_order_volume_get, _ama.MDBondTickOrder_order_volume_set)
    __swig_setmethods__["side"] = _ama.MDBondTickOrder_side_set
    __swig_getmethods__["side"] = _ama.MDBondTickOrder_side_get
    if _newclass:side = _swig_property(_ama.MDBondTickOrder_side_get, _ama.MDBondTickOrder_side_set)
    __swig_setmethods__["order_type"] = _ama.MDBondTickOrder_order_type_set
    __swig_getmethods__["order_type"] = _ama.MDBondTickOrder_order_type_get
    if _newclass:order_type = _swig_property(_ama.MDBondTickOrder_order_type_get, _ama.MDBondTickOrder_order_type_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDBondTickOrder_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDBondTickOrder_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDBondTickOrder_md_stream_id_get, _ama.MDBondTickOrder_md_stream_id_set)
    __swig_setmethods__["product_status"] = _ama.MDBondTickOrder_product_status_set
    __swig_getmethods__["product_status"] = _ama.MDBondTickOrder_product_status_get
    if _newclass:product_status = _swig_property(_ama.MDBondTickOrder_product_status_get, _ama.MDBondTickOrder_product_status_set)
    __swig_setmethods__["orig_order_no"] = _ama.MDBondTickOrder_orig_order_no_set
    __swig_getmethods__["orig_order_no"] = _ama.MDBondTickOrder_orig_order_no_get
    if _newclass:orig_order_no = _swig_property(_ama.MDBondTickOrder_orig_order_no_get, _ama.MDBondTickOrder_orig_order_no_set)
    __swig_setmethods__["variety_category"] = _ama.MDBondTickOrder_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDBondTickOrder_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDBondTickOrder_variety_category_get, _ama.MDBondTickOrder_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDBondTickOrder()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDBondTickOrder
    __del__ = lambda self : None;
MDBondTickOrder_swigregister = _ama.MDBondTickOrder_swigregister
MDBondTickOrder_swigregister(MDBondTickOrder)

class MDBondQuotedTickOrder(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDBondQuotedTickOrder, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDBondQuotedTickOrder, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDBondQuotedTickOrder_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDBondQuotedTickOrder_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDBondQuotedTickOrder_market_type_get, _ama.MDBondQuotedTickOrder_market_type_set)
    __swig_setmethods__["appl_seq_num"] = _ama.MDBondQuotedTickOrder_appl_seq_num_set
    __swig_getmethods__["appl_seq_num"] = _ama.MDBondQuotedTickOrder_appl_seq_num_get
    if _newclass:appl_seq_num = _swig_property(_ama.MDBondQuotedTickOrder_appl_seq_num_get, _ama.MDBondQuotedTickOrder_appl_seq_num_set)
    __swig_setmethods__["channel_no"] = _ama.MDBondQuotedTickOrder_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDBondQuotedTickOrder_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDBondQuotedTickOrder_channel_no_get, _ama.MDBondQuotedTickOrder_channel_no_set)
    __swig_setmethods__["security_code"] = _ama.MDBondQuotedTickOrder_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDBondQuotedTickOrder_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDBondQuotedTickOrder_security_code_get, _ama.MDBondQuotedTickOrder_security_code_set)
    __swig_setmethods__["order_time"] = _ama.MDBondQuotedTickOrder_order_time_set
    __swig_getmethods__["order_time"] = _ama.MDBondQuotedTickOrder_order_time_get
    if _newclass:order_time = _swig_property(_ama.MDBondQuotedTickOrder_order_time_get, _ama.MDBondQuotedTickOrder_order_time_set)
    __swig_setmethods__["order_price"] = _ama.MDBondQuotedTickOrder_order_price_set
    __swig_getmethods__["order_price"] = _ama.MDBondQuotedTickOrder_order_price_get
    if _newclass:order_price = _swig_property(_ama.MDBondQuotedTickOrder_order_price_get, _ama.MDBondQuotedTickOrder_order_price_set)
    __swig_setmethods__["order_volume"] = _ama.MDBondQuotedTickOrder_order_volume_set
    __swig_getmethods__["order_volume"] = _ama.MDBondQuotedTickOrder_order_volume_get
    if _newclass:order_volume = _swig_property(_ama.MDBondQuotedTickOrder_order_volume_get, _ama.MDBondQuotedTickOrder_order_volume_set)
    __swig_setmethods__["side"] = _ama.MDBondQuotedTickOrder_side_set
    __swig_getmethods__["side"] = _ama.MDBondQuotedTickOrder_side_get
    if _newclass:side = _swig_property(_ama.MDBondQuotedTickOrder_side_get, _ama.MDBondQuotedTickOrder_side_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDBondQuotedTickOrder_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDBondQuotedTickOrder_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDBondQuotedTickOrder_md_stream_id_get, _ama.MDBondQuotedTickOrder_md_stream_id_set)
    __swig_setmethods__["quote_id"] = _ama.MDBondQuotedTickOrder_quote_id_set
    __swig_getmethods__["quote_id"] = _ama.MDBondQuotedTickOrder_quote_id_get
    if _newclass:quote_id = _swig_property(_ama.MDBondQuotedTickOrder_quote_id_get, _ama.MDBondQuotedTickOrder_quote_id_set)
    __swig_setmethods__["member_id"] = _ama.MDBondQuotedTickOrder_member_id_set
    __swig_getmethods__["member_id"] = _ama.MDBondQuotedTickOrder_member_id_get
    if _newclass:member_id = _swig_property(_ama.MDBondQuotedTickOrder_member_id_get, _ama.MDBondQuotedTickOrder_member_id_set)
    __swig_setmethods__["investor_type"] = _ama.MDBondQuotedTickOrder_investor_type_set
    __swig_getmethods__["investor_type"] = _ama.MDBondQuotedTickOrder_investor_type_get
    if _newclass:investor_type = _swig_property(_ama.MDBondQuotedTickOrder_investor_type_get, _ama.MDBondQuotedTickOrder_investor_type_set)
    __swig_setmethods__["investor_id"] = _ama.MDBondQuotedTickOrder_investor_id_set
    __swig_getmethods__["investor_id"] = _ama.MDBondQuotedTickOrder_investor_id_get
    if _newclass:investor_id = _swig_property(_ama.MDBondQuotedTickOrder_investor_id_get, _ama.MDBondQuotedTickOrder_investor_id_set)
    __swig_setmethods__["investor_name"] = _ama.MDBondQuotedTickOrder_investor_name_set
    __swig_getmethods__["investor_name"] = _ama.MDBondQuotedTickOrder_investor_name_get
    if _newclass:investor_name = _swig_property(_ama.MDBondQuotedTickOrder_investor_name_get, _ama.MDBondQuotedTickOrder_investor_name_set)
    __swig_setmethods__["trader_code"] = _ama.MDBondQuotedTickOrder_trader_code_set
    __swig_getmethods__["trader_code"] = _ama.MDBondQuotedTickOrder_trader_code_get
    if _newclass:trader_code = _swig_property(_ama.MDBondQuotedTickOrder_trader_code_get, _ama.MDBondQuotedTickOrder_trader_code_set)
    __swig_setmethods__["settl_period"] = _ama.MDBondQuotedTickOrder_settl_period_set
    __swig_getmethods__["settl_period"] = _ama.MDBondQuotedTickOrder_settl_period_get
    if _newclass:settl_period = _swig_property(_ama.MDBondQuotedTickOrder_settl_period_get, _ama.MDBondQuotedTickOrder_settl_period_set)
    __swig_setmethods__["settl_type"] = _ama.MDBondQuotedTickOrder_settl_type_set
    __swig_getmethods__["settl_type"] = _ama.MDBondQuotedTickOrder_settl_type_get
    if _newclass:settl_type = _swig_property(_ama.MDBondQuotedTickOrder_settl_type_get, _ama.MDBondQuotedTickOrder_settl_type_set)
    __swig_setmethods__["variety_category"] = _ama.MDBondQuotedTickOrder_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDBondQuotedTickOrder_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDBondQuotedTickOrder_variety_category_get, _ama.MDBondQuotedTickOrder_variety_category_set)
    __swig_setmethods__["secondary_order_id"] = _ama.MDBondQuotedTickOrder_secondary_order_id_set
    __swig_getmethods__["secondary_order_id"] = _ama.MDBondQuotedTickOrder_secondary_order_id_get
    if _newclass:secondary_order_id = _swig_property(_ama.MDBondQuotedTickOrder_secondary_order_id_get, _ama.MDBondQuotedTickOrder_secondary_order_id_set)
    __swig_setmethods__["bid_trans_type"] = _ama.MDBondQuotedTickOrder_bid_trans_type_set
    __swig_getmethods__["bid_trans_type"] = _ama.MDBondQuotedTickOrder_bid_trans_type_get
    if _newclass:bid_trans_type = _swig_property(_ama.MDBondQuotedTickOrder_bid_trans_type_get, _ama.MDBondQuotedTickOrder_bid_trans_type_set)
    __swig_setmethods__["bid_execinst_type"] = _ama.MDBondQuotedTickOrder_bid_execinst_type_set
    __swig_getmethods__["bid_execinst_type"] = _ama.MDBondQuotedTickOrder_bid_execinst_type_get
    if _newclass:bid_execinst_type = _swig_property(_ama.MDBondQuotedTickOrder_bid_execinst_type_get, _ama.MDBondQuotedTickOrder_bid_execinst_type_set)
    __swig_setmethods__["lowlimit_price"] = _ama.MDBondQuotedTickOrder_lowlimit_price_set
    __swig_getmethods__["lowlimit_price"] = _ama.MDBondQuotedTickOrder_lowlimit_price_get
    if _newclass:lowlimit_price = _swig_property(_ama.MDBondQuotedTickOrder_lowlimit_price_get, _ama.MDBondQuotedTickOrder_lowlimit_price_set)
    __swig_setmethods__["highlimit_price"] = _ama.MDBondQuotedTickOrder_highlimit_price_set
    __swig_getmethods__["highlimit_price"] = _ama.MDBondQuotedTickOrder_highlimit_price_get
    if _newclass:highlimit_price = _swig_property(_ama.MDBondQuotedTickOrder_highlimit_price_get, _ama.MDBondQuotedTickOrder_highlimit_price_set)
    __swig_setmethods__["min_qty"] = _ama.MDBondQuotedTickOrder_min_qty_set
    __swig_getmethods__["min_qty"] = _ama.MDBondQuotedTickOrder_min_qty_get
    if _newclass:min_qty = _swig_property(_ama.MDBondQuotedTickOrder_min_qty_get, _ama.MDBondQuotedTickOrder_min_qty_set)
    __swig_setmethods__["trade_date"] = _ama.MDBondQuotedTickOrder_trade_date_set
    __swig_getmethods__["trade_date"] = _ama.MDBondQuotedTickOrder_trade_date_get
    if _newclass:trade_date = _swig_property(_ama.MDBondQuotedTickOrder_trade_date_get, _ama.MDBondQuotedTickOrder_trade_date_set)
    def __init__(self): 
        this = _ama.new_MDBondQuotedTickOrder()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDBondQuotedTickOrder
    __del__ = lambda self : None;
MDBondQuotedTickOrder_swigregister = _ama.MDBondQuotedTickOrder_swigregister
MDBondQuotedTickOrder_swigregister(MDBondQuotedTickOrder)

class MDBondTickExecution(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDBondTickExecution, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDBondTickExecution, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDBondTickExecution_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDBondTickExecution_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDBondTickExecution_market_type_get, _ama.MDBondTickExecution_market_type_set)
    __swig_setmethods__["appl_seq_num"] = _ama.MDBondTickExecution_appl_seq_num_set
    __swig_getmethods__["appl_seq_num"] = _ama.MDBondTickExecution_appl_seq_num_get
    if _newclass:appl_seq_num = _swig_property(_ama.MDBondTickExecution_appl_seq_num_get, _ama.MDBondTickExecution_appl_seq_num_set)
    __swig_setmethods__["channel_no"] = _ama.MDBondTickExecution_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDBondTickExecution_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDBondTickExecution_channel_no_get, _ama.MDBondTickExecution_channel_no_set)
    __swig_setmethods__["security_code"] = _ama.MDBondTickExecution_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDBondTickExecution_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDBondTickExecution_security_code_get, _ama.MDBondTickExecution_security_code_set)
    __swig_setmethods__["exec_time"] = _ama.MDBondTickExecution_exec_time_set
    __swig_getmethods__["exec_time"] = _ama.MDBondTickExecution_exec_time_get
    if _newclass:exec_time = _swig_property(_ama.MDBondTickExecution_exec_time_get, _ama.MDBondTickExecution_exec_time_set)
    __swig_setmethods__["exec_price"] = _ama.MDBondTickExecution_exec_price_set
    __swig_getmethods__["exec_price"] = _ama.MDBondTickExecution_exec_price_get
    if _newclass:exec_price = _swig_property(_ama.MDBondTickExecution_exec_price_get, _ama.MDBondTickExecution_exec_price_set)
    __swig_setmethods__["exec_volume"] = _ama.MDBondTickExecution_exec_volume_set
    __swig_getmethods__["exec_volume"] = _ama.MDBondTickExecution_exec_volume_get
    if _newclass:exec_volume = _swig_property(_ama.MDBondTickExecution_exec_volume_get, _ama.MDBondTickExecution_exec_volume_set)
    __swig_setmethods__["value_trade"] = _ama.MDBondTickExecution_value_trade_set
    __swig_getmethods__["value_trade"] = _ama.MDBondTickExecution_value_trade_get
    if _newclass:value_trade = _swig_property(_ama.MDBondTickExecution_value_trade_get, _ama.MDBondTickExecution_value_trade_set)
    __swig_setmethods__["bid_appl_seq_num"] = _ama.MDBondTickExecution_bid_appl_seq_num_set
    __swig_getmethods__["bid_appl_seq_num"] = _ama.MDBondTickExecution_bid_appl_seq_num_get
    if _newclass:bid_appl_seq_num = _swig_property(_ama.MDBondTickExecution_bid_appl_seq_num_get, _ama.MDBondTickExecution_bid_appl_seq_num_set)
    __swig_setmethods__["offer_appl_seq_num"] = _ama.MDBondTickExecution_offer_appl_seq_num_set
    __swig_getmethods__["offer_appl_seq_num"] = _ama.MDBondTickExecution_offer_appl_seq_num_get
    if _newclass:offer_appl_seq_num = _swig_property(_ama.MDBondTickExecution_offer_appl_seq_num_get, _ama.MDBondTickExecution_offer_appl_seq_num_set)
    __swig_setmethods__["side"] = _ama.MDBondTickExecution_side_set
    __swig_getmethods__["side"] = _ama.MDBondTickExecution_side_get
    if _newclass:side = _swig_property(_ama.MDBondTickExecution_side_get, _ama.MDBondTickExecution_side_set)
    __swig_setmethods__["exec_type"] = _ama.MDBondTickExecution_exec_type_set
    __swig_getmethods__["exec_type"] = _ama.MDBondTickExecution_exec_type_get
    if _newclass:exec_type = _swig_property(_ama.MDBondTickExecution_exec_type_get, _ama.MDBondTickExecution_exec_type_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDBondTickExecution_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDBondTickExecution_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDBondTickExecution_md_stream_id_get, _ama.MDBondTickExecution_md_stream_id_set)
    __swig_setmethods__["variety_category"] = _ama.MDBondTickExecution_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDBondTickExecution_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDBondTickExecution_variety_category_get, _ama.MDBondTickExecution_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDBondTickExecution()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDBondTickExecution
    __del__ = lambda self : None;
MDBondTickExecution_swigregister = _ama.MDBondTickExecution_swigregister
MDBondTickExecution_swigregister(MDBondTickExecution)

class MDBondQuotedTickExecution(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDBondQuotedTickExecution, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDBondQuotedTickExecution, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDBondQuotedTickExecution_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDBondQuotedTickExecution_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDBondQuotedTickExecution_market_type_get, _ama.MDBondQuotedTickExecution_market_type_set)
    __swig_setmethods__["appl_seq_num"] = _ama.MDBondQuotedTickExecution_appl_seq_num_set
    __swig_getmethods__["appl_seq_num"] = _ama.MDBondQuotedTickExecution_appl_seq_num_get
    if _newclass:appl_seq_num = _swig_property(_ama.MDBondQuotedTickExecution_appl_seq_num_get, _ama.MDBondQuotedTickExecution_appl_seq_num_set)
    __swig_setmethods__["channel_no"] = _ama.MDBondQuotedTickExecution_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDBondQuotedTickExecution_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDBondQuotedTickExecution_channel_no_get, _ama.MDBondQuotedTickExecution_channel_no_set)
    __swig_setmethods__["security_code"] = _ama.MDBondQuotedTickExecution_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDBondQuotedTickExecution_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDBondQuotedTickExecution_security_code_get, _ama.MDBondQuotedTickExecution_security_code_set)
    __swig_setmethods__["exec_time"] = _ama.MDBondQuotedTickExecution_exec_time_set
    __swig_getmethods__["exec_time"] = _ama.MDBondQuotedTickExecution_exec_time_get
    if _newclass:exec_time = _swig_property(_ama.MDBondQuotedTickExecution_exec_time_get, _ama.MDBondQuotedTickExecution_exec_time_set)
    __swig_setmethods__["exec_price"] = _ama.MDBondQuotedTickExecution_exec_price_set
    __swig_getmethods__["exec_price"] = _ama.MDBondQuotedTickExecution_exec_price_get
    if _newclass:exec_price = _swig_property(_ama.MDBondQuotedTickExecution_exec_price_get, _ama.MDBondQuotedTickExecution_exec_price_set)
    __swig_setmethods__["exec_volume"] = _ama.MDBondQuotedTickExecution_exec_volume_set
    __swig_getmethods__["exec_volume"] = _ama.MDBondQuotedTickExecution_exec_volume_get
    if _newclass:exec_volume = _swig_property(_ama.MDBondQuotedTickExecution_exec_volume_get, _ama.MDBondQuotedTickExecution_exec_volume_set)
    __swig_setmethods__["bid_appl_seq_num"] = _ama.MDBondQuotedTickExecution_bid_appl_seq_num_set
    __swig_getmethods__["bid_appl_seq_num"] = _ama.MDBondQuotedTickExecution_bid_appl_seq_num_get
    if _newclass:bid_appl_seq_num = _swig_property(_ama.MDBondQuotedTickExecution_bid_appl_seq_num_get, _ama.MDBondQuotedTickExecution_bid_appl_seq_num_set)
    __swig_setmethods__["offer_appl_seq_num"] = _ama.MDBondQuotedTickExecution_offer_appl_seq_num_set
    __swig_getmethods__["offer_appl_seq_num"] = _ama.MDBondQuotedTickExecution_offer_appl_seq_num_get
    if _newclass:offer_appl_seq_num = _swig_property(_ama.MDBondQuotedTickExecution_offer_appl_seq_num_get, _ama.MDBondQuotedTickExecution_offer_appl_seq_num_set)
    __swig_setmethods__["exec_type"] = _ama.MDBondQuotedTickExecution_exec_type_set
    __swig_getmethods__["exec_type"] = _ama.MDBondQuotedTickExecution_exec_type_get
    if _newclass:exec_type = _swig_property(_ama.MDBondQuotedTickExecution_exec_type_get, _ama.MDBondQuotedTickExecution_exec_type_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDBondQuotedTickExecution_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDBondQuotedTickExecution_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDBondQuotedTickExecution_md_stream_id_get, _ama.MDBondQuotedTickExecution_md_stream_id_set)
    __swig_setmethods__["settl_period"] = _ama.MDBondQuotedTickExecution_settl_period_set
    __swig_getmethods__["settl_period"] = _ama.MDBondQuotedTickExecution_settl_period_get
    if _newclass:settl_period = _swig_property(_ama.MDBondQuotedTickExecution_settl_period_get, _ama.MDBondQuotedTickExecution_settl_period_set)
    __swig_setmethods__["settl_type"] = _ama.MDBondQuotedTickExecution_settl_type_set
    __swig_getmethods__["settl_type"] = _ama.MDBondQuotedTickExecution_settl_type_get
    if _newclass:settl_type = _swig_property(_ama.MDBondQuotedTickExecution_settl_type_get, _ama.MDBondQuotedTickExecution_settl_type_set)
    __swig_setmethods__["variety_category"] = _ama.MDBondQuotedTickExecution_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDBondQuotedTickExecution_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDBondQuotedTickExecution_variety_category_get, _ama.MDBondQuotedTickExecution_variety_category_set)
    __swig_setmethods__["secondary_order_id"] = _ama.MDBondQuotedTickExecution_secondary_order_id_set
    __swig_getmethods__["secondary_order_id"] = _ama.MDBondQuotedTickExecution_secondary_order_id_get
    if _newclass:secondary_order_id = _swig_property(_ama.MDBondQuotedTickExecution_secondary_order_id_get, _ama.MDBondQuotedTickExecution_secondary_order_id_set)
    __swig_setmethods__["bid_execinst_type"] = _ama.MDBondQuotedTickExecution_bid_execinst_type_set
    __swig_getmethods__["bid_execinst_type"] = _ama.MDBondQuotedTickExecution_bid_execinst_type_get
    if _newclass:bid_execinst_type = _swig_property(_ama.MDBondQuotedTickExecution_bid_execinst_type_get, _ama.MDBondQuotedTickExecution_bid_execinst_type_set)
    __swig_setmethods__["margin_price"] = _ama.MDBondQuotedTickExecution_margin_price_set
    __swig_getmethods__["margin_price"] = _ama.MDBondQuotedTickExecution_margin_price_get
    if _newclass:margin_price = _swig_property(_ama.MDBondQuotedTickExecution_margin_price_get, _ama.MDBondQuotedTickExecution_margin_price_set)
    def __init__(self): 
        this = _ama.new_MDBondQuotedTickExecution()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDBondQuotedTickExecution
    __del__ = lambda self : None;
MDBondQuotedTickExecution_swigregister = _ama.MDBondQuotedTickExecution_swigregister
MDBondQuotedTickExecution_swigregister(MDBondQuotedTickExecution)

class MDFundExpertSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDFundExpertSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDFundExpertSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDFundExpertSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDFundExpertSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDFundExpertSnapshot_market_type_get, _ama.MDFundExpertSnapshot_market_type_set)
    __swig_setmethods__["variety_category"] = _ama.MDFundExpertSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDFundExpertSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDFundExpertSnapshot_variety_category_get, _ama.MDFundExpertSnapshot_variety_category_set)
    __swig_setmethods__["channel_no"] = _ama.MDFundExpertSnapshot_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDFundExpertSnapshot_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDFundExpertSnapshot_channel_no_get, _ama.MDFundExpertSnapshot_channel_no_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDFundExpertSnapshot_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDFundExpertSnapshot_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDFundExpertSnapshot_md_stream_id_get, _ama.MDFundExpertSnapshot_md_stream_id_set)
    __swig_setmethods__["security_code"] = _ama.MDFundExpertSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDFundExpertSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDFundExpertSnapshot_security_code_get, _ama.MDFundExpertSnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDFundExpertSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDFundExpertSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDFundExpertSnapshot_orig_time_get, _ama.MDFundExpertSnapshot_orig_time_set)
    __swig_setmethods__["trading_phase_code"] = _ama.MDFundExpertSnapshot_trading_phase_code_set
    __swig_getmethods__["trading_phase_code"] = _ama.MDFundExpertSnapshot_trading_phase_code_get
    if _newclass:trading_phase_code = _swig_property(_ama.MDFundExpertSnapshot_trading_phase_code_get, _ama.MDFundExpertSnapshot_trading_phase_code_set)
    __swig_setmethods__["instrument_status"] = _ama.MDFundExpertSnapshot_instrument_status_set
    __swig_getmethods__["instrument_status"] = _ama.MDFundExpertSnapshot_instrument_status_get
    if _newclass:instrument_status = _swig_property(_ama.MDFundExpertSnapshot_instrument_status_get, _ama.MDFundExpertSnapshot_instrument_status_set)
    __swig_setmethods__["pre_close_price"] = _ama.MDFundExpertSnapshot_pre_close_price_set
    __swig_getmethods__["pre_close_price"] = _ama.MDFundExpertSnapshot_pre_close_price_get
    if _newclass:pre_close_price = _swig_property(_ama.MDFundExpertSnapshot_pre_close_price_get, _ama.MDFundExpertSnapshot_pre_close_price_set)
    __swig_setmethods__["open_price"] = _ama.MDFundExpertSnapshot_open_price_set
    __swig_getmethods__["open_price"] = _ama.MDFundExpertSnapshot_open_price_get
    if _newclass:open_price = _swig_property(_ama.MDFundExpertSnapshot_open_price_get, _ama.MDFundExpertSnapshot_open_price_set)
    __swig_setmethods__["high_price"] = _ama.MDFundExpertSnapshot_high_price_set
    __swig_getmethods__["high_price"] = _ama.MDFundExpertSnapshot_high_price_get
    if _newclass:high_price = _swig_property(_ama.MDFundExpertSnapshot_high_price_get, _ama.MDFundExpertSnapshot_high_price_set)
    __swig_setmethods__["low_price"] = _ama.MDFundExpertSnapshot_low_price_set
    __swig_getmethods__["low_price"] = _ama.MDFundExpertSnapshot_low_price_get
    if _newclass:low_price = _swig_property(_ama.MDFundExpertSnapshot_low_price_get, _ama.MDFundExpertSnapshot_low_price_set)
    __swig_setmethods__["last_price"] = _ama.MDFundExpertSnapshot_last_price_set
    __swig_getmethods__["last_price"] = _ama.MDFundExpertSnapshot_last_price_get
    if _newclass:last_price = _swig_property(_ama.MDFundExpertSnapshot_last_price_get, _ama.MDFundExpertSnapshot_last_price_set)
    __swig_setmethods__["per_price"] = _ama.MDFundExpertSnapshot_per_price_set
    __swig_getmethods__["per_price"] = _ama.MDFundExpertSnapshot_per_price_get
    if _newclass:per_price = _swig_property(_ama.MDFundExpertSnapshot_per_price_get, _ama.MDFundExpertSnapshot_per_price_set)
    __swig_setmethods__["close_price"] = _ama.MDFundExpertSnapshot_close_price_set
    __swig_getmethods__["close_price"] = _ama.MDFundExpertSnapshot_close_price_get
    if _newclass:close_price = _swig_property(_ama.MDFundExpertSnapshot_close_price_get, _ama.MDFundExpertSnapshot_close_price_set)
    __swig_setmethods__["bid_price"] = _ama.MDFundExpertSnapshot_bid_price_set
    __swig_getmethods__["bid_price"] = _ama.MDFundExpertSnapshot_bid_price_get
    if _newclass:bid_price = _swig_property(_ama.MDFundExpertSnapshot_bid_price_get, _ama.MDFundExpertSnapshot_bid_price_set)
    __swig_setmethods__["bid_volume"] = _ama.MDFundExpertSnapshot_bid_volume_set
    __swig_getmethods__["bid_volume"] = _ama.MDFundExpertSnapshot_bid_volume_get
    if _newclass:bid_volume = _swig_property(_ama.MDFundExpertSnapshot_bid_volume_get, _ama.MDFundExpertSnapshot_bid_volume_set)
    __swig_setmethods__["offer_price"] = _ama.MDFundExpertSnapshot_offer_price_set
    __swig_getmethods__["offer_price"] = _ama.MDFundExpertSnapshot_offer_price_get
    if _newclass:offer_price = _swig_property(_ama.MDFundExpertSnapshot_offer_price_get, _ama.MDFundExpertSnapshot_offer_price_set)
    __swig_setmethods__["offer_volume"] = _ama.MDFundExpertSnapshot_offer_volume_set
    __swig_getmethods__["offer_volume"] = _ama.MDFundExpertSnapshot_offer_volume_get
    if _newclass:offer_volume = _swig_property(_ama.MDFundExpertSnapshot_offer_volume_get, _ama.MDFundExpertSnapshot_offer_volume_set)
    __swig_setmethods__["num_trades"] = _ama.MDFundExpertSnapshot_num_trades_set
    __swig_getmethods__["num_trades"] = _ama.MDFundExpertSnapshot_num_trades_get
    if _newclass:num_trades = _swig_property(_ama.MDFundExpertSnapshot_num_trades_get, _ama.MDFundExpertSnapshot_num_trades_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDFundExpertSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDFundExpertSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDFundExpertSnapshot_total_volume_trade_get, _ama.MDFundExpertSnapshot_total_volume_trade_set)
    __swig_setmethods__["total_value_trade"] = _ama.MDFundExpertSnapshot_total_value_trade_set
    __swig_getmethods__["total_value_trade"] = _ama.MDFundExpertSnapshot_total_value_trade_get
    if _newclass:total_value_trade = _swig_property(_ama.MDFundExpertSnapshot_total_value_trade_get, _ama.MDFundExpertSnapshot_total_value_trade_set)
    __swig_setmethods__["market_maker_bid_volume"] = _ama.MDFundExpertSnapshot_market_maker_bid_volume_set
    __swig_getmethods__["market_maker_bid_volume"] = _ama.MDFundExpertSnapshot_market_maker_bid_volume_get
    if _newclass:market_maker_bid_volume = _swig_property(_ama.MDFundExpertSnapshot_market_maker_bid_volume_get, _ama.MDFundExpertSnapshot_market_maker_bid_volume_set)
    __swig_setmethods__["sh_investor_offer_volume"] = _ama.MDFundExpertSnapshot_sh_investor_offer_volume_set
    __swig_getmethods__["sh_investor_offer_volume"] = _ama.MDFundExpertSnapshot_sh_investor_offer_volume_get
    if _newclass:sh_investor_offer_volume = _swig_property(_ama.MDFundExpertSnapshot_sh_investor_offer_volume_get, _ama.MDFundExpertSnapshot_sh_investor_offer_volume_set)
    __swig_setmethods__["market_maker_bid_price"] = _ama.MDFundExpertSnapshot_market_maker_bid_price_set
    __swig_getmethods__["market_maker_bid_price"] = _ama.MDFundExpertSnapshot_market_maker_bid_price_get
    if _newclass:market_maker_bid_price = _swig_property(_ama.MDFundExpertSnapshot_market_maker_bid_price_get, _ama.MDFundExpertSnapshot_market_maker_bid_price_set)
    __swig_setmethods__["sh_investor_offer_price"] = _ama.MDFundExpertSnapshot_sh_investor_offer_price_set
    __swig_getmethods__["sh_investor_offer_price"] = _ama.MDFundExpertSnapshot_sh_investor_offer_price_get
    if _newclass:sh_investor_offer_price = _swig_property(_ama.MDFundExpertSnapshot_sh_investor_offer_price_get, _ama.MDFundExpertSnapshot_sh_investor_offer_price_set)
    __swig_setmethods__["high_limited"] = _ama.MDFundExpertSnapshot_high_limited_set
    __swig_getmethods__["high_limited"] = _ama.MDFundExpertSnapshot_high_limited_get
    if _newclass:high_limited = _swig_property(_ama.MDFundExpertSnapshot_high_limited_get, _ama.MDFundExpertSnapshot_high_limited_set)
    __swig_setmethods__["low_limited"] = _ama.MDFundExpertSnapshot_low_limited_set
    __swig_getmethods__["low_limited"] = _ama.MDFundExpertSnapshot_low_limited_get
    if _newclass:low_limited = _swig_property(_ama.MDFundExpertSnapshot_low_limited_get, _ama.MDFundExpertSnapshot_low_limited_set)
    __swig_setmethods__["investor_bid_price"] = _ama.MDFundExpertSnapshot_investor_bid_price_set
    __swig_getmethods__["investor_bid_price"] = _ama.MDFundExpertSnapshot_investor_bid_price_get
    if _newclass:investor_bid_price = _swig_property(_ama.MDFundExpertSnapshot_investor_bid_price_get, _ama.MDFundExpertSnapshot_investor_bid_price_set)
    __swig_setmethods__["investor_bid_volume"] = _ama.MDFundExpertSnapshot_investor_bid_volume_set
    __swig_getmethods__["investor_bid_volume"] = _ama.MDFundExpertSnapshot_investor_bid_volume_get
    if _newclass:investor_bid_volume = _swig_property(_ama.MDFundExpertSnapshot_investor_bid_volume_get, _ama.MDFundExpertSnapshot_investor_bid_volume_set)
    __swig_setmethods__["investor_best_bid_price"] = _ama.MDFundExpertSnapshot_investor_best_bid_price_set
    __swig_getmethods__["investor_best_bid_price"] = _ama.MDFundExpertSnapshot_investor_best_bid_price_get
    if _newclass:investor_best_bid_price = _swig_property(_ama.MDFundExpertSnapshot_investor_best_bid_price_get, _ama.MDFundExpertSnapshot_investor_best_bid_price_set)
    __swig_setmethods__["investor_bid_volume_best_price"] = _ama.MDFundExpertSnapshot_investor_bid_volume_best_price_set
    __swig_getmethods__["investor_bid_volume_best_price"] = _ama.MDFundExpertSnapshot_investor_bid_volume_best_price_get
    if _newclass:investor_bid_volume_best_price = _swig_property(_ama.MDFundExpertSnapshot_investor_bid_volume_best_price_get, _ama.MDFundExpertSnapshot_investor_bid_volume_best_price_set)
    __swig_setmethods__["investor_offer_price"] = _ama.MDFundExpertSnapshot_investor_offer_price_set
    __swig_getmethods__["investor_offer_price"] = _ama.MDFundExpertSnapshot_investor_offer_price_get
    if _newclass:investor_offer_price = _swig_property(_ama.MDFundExpertSnapshot_investor_offer_price_get, _ama.MDFundExpertSnapshot_investor_offer_price_set)
    __swig_setmethods__["investor_offer_volume"] = _ama.MDFundExpertSnapshot_investor_offer_volume_set
    __swig_getmethods__["investor_offer_volume"] = _ama.MDFundExpertSnapshot_investor_offer_volume_get
    if _newclass:investor_offer_volume = _swig_property(_ama.MDFundExpertSnapshot_investor_offer_volume_get, _ama.MDFundExpertSnapshot_investor_offer_volume_set)
    __swig_setmethods__["investor_best_offer_price"] = _ama.MDFundExpertSnapshot_investor_best_offer_price_set
    __swig_getmethods__["investor_best_offer_price"] = _ama.MDFundExpertSnapshot_investor_best_offer_price_get
    if _newclass:investor_best_offer_price = _swig_property(_ama.MDFundExpertSnapshot_investor_best_offer_price_get, _ama.MDFundExpertSnapshot_investor_best_offer_price_set)
    __swig_setmethods__["investor_offer_volume_best_price"] = _ama.MDFundExpertSnapshot_investor_offer_volume_best_price_set
    __swig_getmethods__["investor_offer_volume_best_price"] = _ama.MDFundExpertSnapshot_investor_offer_volume_best_price_get
    if _newclass:investor_offer_volume_best_price = _swig_property(_ama.MDFundExpertSnapshot_investor_offer_volume_best_price_get, _ama.MDFundExpertSnapshot_investor_offer_volume_best_price_set)
    __swig_setmethods__["iopv"] = _ama.MDFundExpertSnapshot_iopv_set
    __swig_getmethods__["iopv"] = _ama.MDFundExpertSnapshot_iopv_get
    if _newclass:iopv = _swig_property(_ama.MDFundExpertSnapshot_iopv_get, _ama.MDFundExpertSnapshot_iopv_set)
    __swig_setmethods__["last_trade_time"] = _ama.MDFundExpertSnapshot_last_trade_time_set
    __swig_getmethods__["last_trade_time"] = _ama.MDFundExpertSnapshot_last_trade_time_get
    if _newclass:last_trade_time = _swig_property(_ama.MDFundExpertSnapshot_last_trade_time_get, _ama.MDFundExpertSnapshot_last_trade_time_set)
    def __init__(self): 
        this = _ama.new_MDFundExpertSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDFundExpertSnapshot
    __del__ = lambda self : None;
MDFundExpertSnapshot_swigregister = _ama.MDFundExpertSnapshot_swigregister
MDFundExpertSnapshot_swigregister(MDFundExpertSnapshot)

class MDSpotTickExecution(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDSpotTickExecution, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDSpotTickExecution, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDSpotTickExecution_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDSpotTickExecution_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDSpotTickExecution_market_type_get, _ama.MDSpotTickExecution_market_type_set)
    __swig_setmethods__["msg_type"] = _ama.MDSpotTickExecution_msg_type_set
    __swig_getmethods__["msg_type"] = _ama.MDSpotTickExecution_msg_type_get
    if _newclass:msg_type = _swig_property(_ama.MDSpotTickExecution_msg_type_get, _ama.MDSpotTickExecution_msg_type_set)
    __swig_setmethods__["msg_seq_num"] = _ama.MDSpotTickExecution_msg_seq_num_set
    __swig_getmethods__["msg_seq_num"] = _ama.MDSpotTickExecution_msg_seq_num_get
    if _newclass:msg_seq_num = _swig_property(_ama.MDSpotTickExecution_msg_seq_num_get, _ama.MDSpotTickExecution_msg_seq_num_set)
    __swig_setmethods__["sending_time"] = _ama.MDSpotTickExecution_sending_time_set
    __swig_getmethods__["sending_time"] = _ama.MDSpotTickExecution_sending_time_get
    if _newclass:sending_time = _swig_property(_ama.MDSpotTickExecution_sending_time_get, _ama.MDSpotTickExecution_sending_time_set)
    __swig_setmethods__["security_code"] = _ama.MDSpotTickExecution_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDSpotTickExecution_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDSpotTickExecution_security_code_get, _ama.MDSpotTickExecution_security_code_set)
    __swig_setmethods__["symbol"] = _ama.MDSpotTickExecution_symbol_set
    __swig_getmethods__["symbol"] = _ama.MDSpotTickExecution_symbol_get
    if _newclass:symbol = _swig_property(_ama.MDSpotTickExecution_symbol_get, _ama.MDSpotTickExecution_symbol_set)
    __swig_setmethods__["orig_time"] = _ama.MDSpotTickExecution_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDSpotTickExecution_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDSpotTickExecution_orig_time_get, _ama.MDSpotTickExecution_orig_time_set)
    __swig_setmethods__["market_indicator"] = _ama.MDSpotTickExecution_market_indicator_set
    __swig_getmethods__["market_indicator"] = _ama.MDSpotTickExecution_market_indicator_get
    if _newclass:market_indicator = _swig_property(_ama.MDSpotTickExecution_market_indicator_get, _ama.MDSpotTickExecution_market_indicator_set)
    __swig_setmethods__["deal_number"] = _ama.MDSpotTickExecution_deal_number_set
    __swig_getmethods__["deal_number"] = _ama.MDSpotTickExecution_deal_number_get
    if _newclass:deal_number = _swig_property(_ama.MDSpotTickExecution_deal_number_get, _ama.MDSpotTickExecution_deal_number_set)
    __swig_setmethods__["exec_type"] = _ama.MDSpotTickExecution_exec_type_set
    __swig_getmethods__["exec_type"] = _ama.MDSpotTickExecution_exec_type_get
    if _newclass:exec_type = _swig_property(_ama.MDSpotTickExecution_exec_type_get, _ama.MDSpotTickExecution_exec_type_set)
    __swig_setmethods__["trade_type"] = _ama.MDSpotTickExecution_trade_type_set
    __swig_getmethods__["trade_type"] = _ama.MDSpotTickExecution_trade_type_get
    if _newclass:trade_type = _swig_property(_ama.MDSpotTickExecution_trade_type_get, _ama.MDSpotTickExecution_trade_type_set)
    __swig_setmethods__["exec_price"] = _ama.MDSpotTickExecution_exec_price_set
    __swig_getmethods__["exec_price"] = _ama.MDSpotTickExecution_exec_price_get
    if _newclass:exec_price = _swig_property(_ama.MDSpotTickExecution_exec_price_get, _ama.MDSpotTickExecution_exec_price_set)
    __swig_setmethods__["exec_yield"] = _ama.MDSpotTickExecution_exec_yield_set
    __swig_getmethods__["exec_yield"] = _ama.MDSpotTickExecution_exec_yield_get
    if _newclass:exec_yield = _swig_property(_ama.MDSpotTickExecution_exec_yield_get, _ama.MDSpotTickExecution_exec_yield_set)
    __swig_setmethods__["total_face_value"] = _ama.MDSpotTickExecution_total_face_value_set
    __swig_getmethods__["total_face_value"] = _ama.MDSpotTickExecution_total_face_value_get
    if _newclass:total_face_value = _swig_property(_ama.MDSpotTickExecution_total_face_value_get, _ama.MDSpotTickExecution_total_face_value_set)
    __swig_setmethods__["pre_market_bond_indicator"] = _ama.MDSpotTickExecution_pre_market_bond_indicator_set
    __swig_getmethods__["pre_market_bond_indicator"] = _ama.MDSpotTickExecution_pre_market_bond_indicator_get
    if _newclass:pre_market_bond_indicator = _swig_property(_ama.MDSpotTickExecution_pre_market_bond_indicator_get, _ama.MDSpotTickExecution_pre_market_bond_indicator_set)
    __swig_setmethods__["trade_method"] = _ama.MDSpotTickExecution_trade_method_set
    __swig_getmethods__["trade_method"] = _ama.MDSpotTickExecution_trade_method_get
    if _newclass:trade_method = _swig_property(_ama.MDSpotTickExecution_trade_method_get, _ama.MDSpotTickExecution_trade_method_set)
    __swig_setmethods__["transaction_method"] = _ama.MDSpotTickExecution_transaction_method_set
    __swig_getmethods__["transaction_method"] = _ama.MDSpotTickExecution_transaction_method_get
    if _newclass:transaction_method = _swig_property(_ama.MDSpotTickExecution_transaction_method_get, _ama.MDSpotTickExecution_transaction_method_set)
    __swig_setmethods__["variety_category"] = _ama.MDSpotTickExecution_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDSpotTickExecution_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDSpotTickExecution_variety_category_get, _ama.MDSpotTickExecution_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDSpotTickExecution()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDSpotTickExecution
    __del__ = lambda self : None;
MDSpotTickExecution_swigregister = _ama.MDSpotTickExecution_swigregister
MDSpotTickExecution_swigregister(MDSpotTickExecution)

class MDSpotSummarySnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDSpotSummarySnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDSpotSummarySnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDSpotSummarySnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDSpotSummarySnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDSpotSummarySnapshot_market_type_get, _ama.MDSpotSummarySnapshot_market_type_set)
    __swig_setmethods__["msg_type"] = _ama.MDSpotSummarySnapshot_msg_type_set
    __swig_getmethods__["msg_type"] = _ama.MDSpotSummarySnapshot_msg_type_get
    if _newclass:msg_type = _swig_property(_ama.MDSpotSummarySnapshot_msg_type_get, _ama.MDSpotSummarySnapshot_msg_type_set)
    __swig_setmethods__["msg_seq_num"] = _ama.MDSpotSummarySnapshot_msg_seq_num_set
    __swig_getmethods__["msg_seq_num"] = _ama.MDSpotSummarySnapshot_msg_seq_num_get
    if _newclass:msg_seq_num = _swig_property(_ama.MDSpotSummarySnapshot_msg_seq_num_get, _ama.MDSpotSummarySnapshot_msg_seq_num_set)
    __swig_setmethods__["sending_time"] = _ama.MDSpotSummarySnapshot_sending_time_set
    __swig_getmethods__["sending_time"] = _ama.MDSpotSummarySnapshot_sending_time_get
    if _newclass:sending_time = _swig_property(_ama.MDSpotSummarySnapshot_sending_time_get, _ama.MDSpotSummarySnapshot_sending_time_set)
    __swig_setmethods__["security_code"] = _ama.MDSpotSummarySnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDSpotSummarySnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDSpotSummarySnapshot_security_code_get, _ama.MDSpotSummarySnapshot_security_code_set)
    __swig_setmethods__["symbol"] = _ama.MDSpotSummarySnapshot_symbol_set
    __swig_getmethods__["symbol"] = _ama.MDSpotSummarySnapshot_symbol_get
    if _newclass:symbol = _swig_property(_ama.MDSpotSummarySnapshot_symbol_get, _ama.MDSpotSummarySnapshot_symbol_set)
    __swig_setmethods__["orig_time"] = _ama.MDSpotSummarySnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDSpotSummarySnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDSpotSummarySnapshot_orig_time_get, _ama.MDSpotSummarySnapshot_orig_time_set)
    __swig_setmethods__["market_indicator"] = _ama.MDSpotSummarySnapshot_market_indicator_set
    __swig_getmethods__["market_indicator"] = _ama.MDSpotSummarySnapshot_market_indicator_get
    if _newclass:market_indicator = _swig_property(_ama.MDSpotSummarySnapshot_market_indicator_get, _ama.MDSpotSummarySnapshot_market_indicator_set)
    __swig_setmethods__["trade_method"] = _ama.MDSpotSummarySnapshot_trade_method_set
    __swig_getmethods__["trade_method"] = _ama.MDSpotSummarySnapshot_trade_method_get
    if _newclass:trade_method = _swig_property(_ama.MDSpotSummarySnapshot_trade_method_get, _ama.MDSpotSummarySnapshot_trade_method_set)
    __swig_setmethods__["md_type"] = _ama.MDSpotSummarySnapshot_md_type_set
    __swig_getmethods__["md_type"] = _ama.MDSpotSummarySnapshot_md_type_get
    if _newclass:md_type = _swig_property(_ama.MDSpotSummarySnapshot_md_type_get, _ama.MDSpotSummarySnapshot_md_type_set)
    __swig_setmethods__["md_sub_type"] = _ama.MDSpotSummarySnapshot_md_sub_type_set
    __swig_getmethods__["md_sub_type"] = _ama.MDSpotSummarySnapshot_md_sub_type_get
    if _newclass:md_sub_type = _swig_property(_ama.MDSpotSummarySnapshot_md_sub_type_get, _ama.MDSpotSummarySnapshot_md_sub_type_set)
    __swig_setmethods__["pre_close_clean_price"] = _ama.MDSpotSummarySnapshot_pre_close_clean_price_set
    __swig_getmethods__["pre_close_clean_price"] = _ama.MDSpotSummarySnapshot_pre_close_clean_price_get
    if _newclass:pre_close_clean_price = _swig_property(_ama.MDSpotSummarySnapshot_pre_close_clean_price_get, _ama.MDSpotSummarySnapshot_pre_close_clean_price_set)
    __swig_setmethods__["pre_weighted_avg_clean_price"] = _ama.MDSpotSummarySnapshot_pre_weighted_avg_clean_price_set
    __swig_getmethods__["pre_weighted_avg_clean_price"] = _ama.MDSpotSummarySnapshot_pre_weighted_avg_clean_price_get
    if _newclass:pre_weighted_avg_clean_price = _swig_property(_ama.MDSpotSummarySnapshot_pre_weighted_avg_clean_price_get, _ama.MDSpotSummarySnapshot_pre_weighted_avg_clean_price_set)
    __swig_setmethods__["open_clean_price"] = _ama.MDSpotSummarySnapshot_open_clean_price_set
    __swig_getmethods__["open_clean_price"] = _ama.MDSpotSummarySnapshot_open_clean_price_get
    if _newclass:open_clean_price = _swig_property(_ama.MDSpotSummarySnapshot_open_clean_price_get, _ama.MDSpotSummarySnapshot_open_clean_price_set)
    __swig_setmethods__["last_clean_price"] = _ama.MDSpotSummarySnapshot_last_clean_price_set
    __swig_getmethods__["last_clean_price"] = _ama.MDSpotSummarySnapshot_last_clean_price_get
    if _newclass:last_clean_price = _swig_property(_ama.MDSpotSummarySnapshot_last_clean_price_get, _ama.MDSpotSummarySnapshot_last_clean_price_set)
    __swig_setmethods__["ratio_of_change"] = _ama.MDSpotSummarySnapshot_ratio_of_change_set
    __swig_getmethods__["ratio_of_change"] = _ama.MDSpotSummarySnapshot_ratio_of_change_get
    if _newclass:ratio_of_change = _swig_property(_ama.MDSpotSummarySnapshot_ratio_of_change_get, _ama.MDSpotSummarySnapshot_ratio_of_change_set)
    __swig_setmethods__["high_clean_price"] = _ama.MDSpotSummarySnapshot_high_clean_price_set
    __swig_getmethods__["high_clean_price"] = _ama.MDSpotSummarySnapshot_high_clean_price_get
    if _newclass:high_clean_price = _swig_property(_ama.MDSpotSummarySnapshot_high_clean_price_get, _ama.MDSpotSummarySnapshot_high_clean_price_set)
    __swig_setmethods__["low_clean_price"] = _ama.MDSpotSummarySnapshot_low_clean_price_set
    __swig_getmethods__["low_clean_price"] = _ama.MDSpotSummarySnapshot_low_clean_price_get
    if _newclass:low_clean_price = _swig_property(_ama.MDSpotSummarySnapshot_low_clean_price_get, _ama.MDSpotSummarySnapshot_low_clean_price_set)
    __swig_setmethods__["close_clean_price"] = _ama.MDSpotSummarySnapshot_close_clean_price_set
    __swig_getmethods__["close_clean_price"] = _ama.MDSpotSummarySnapshot_close_clean_price_get
    if _newclass:close_clean_price = _swig_property(_ama.MDSpotSummarySnapshot_close_clean_price_get, _ama.MDSpotSummarySnapshot_close_clean_price_set)
    __swig_setmethods__["weighted_avg_clean_price"] = _ama.MDSpotSummarySnapshot_weighted_avg_clean_price_set
    __swig_getmethods__["weighted_avg_clean_price"] = _ama.MDSpotSummarySnapshot_weighted_avg_clean_price_get
    if _newclass:weighted_avg_clean_price = _swig_property(_ama.MDSpotSummarySnapshot_weighted_avg_clean_price_get, _ama.MDSpotSummarySnapshot_weighted_avg_clean_price_set)
    __swig_setmethods__["pre_close_yield"] = _ama.MDSpotSummarySnapshot_pre_close_yield_set
    __swig_getmethods__["pre_close_yield"] = _ama.MDSpotSummarySnapshot_pre_close_yield_get
    if _newclass:pre_close_yield = _swig_property(_ama.MDSpotSummarySnapshot_pre_close_yield_get, _ama.MDSpotSummarySnapshot_pre_close_yield_set)
    __swig_setmethods__["pre_weighted_avg_yield"] = _ama.MDSpotSummarySnapshot_pre_weighted_avg_yield_set
    __swig_getmethods__["pre_weighted_avg_yield"] = _ama.MDSpotSummarySnapshot_pre_weighted_avg_yield_get
    if _newclass:pre_weighted_avg_yield = _swig_property(_ama.MDSpotSummarySnapshot_pre_weighted_avg_yield_get, _ama.MDSpotSummarySnapshot_pre_weighted_avg_yield_set)
    __swig_setmethods__["open_yield"] = _ama.MDSpotSummarySnapshot_open_yield_set
    __swig_getmethods__["open_yield"] = _ama.MDSpotSummarySnapshot_open_yield_get
    if _newclass:open_yield = _swig_property(_ama.MDSpotSummarySnapshot_open_yield_get, _ama.MDSpotSummarySnapshot_open_yield_set)
    __swig_setmethods__["last_yield"] = _ama.MDSpotSummarySnapshot_last_yield_set
    __swig_getmethods__["last_yield"] = _ama.MDSpotSummarySnapshot_last_yield_get
    if _newclass:last_yield = _swig_property(_ama.MDSpotSummarySnapshot_last_yield_get, _ama.MDSpotSummarySnapshot_last_yield_set)
    __swig_setmethods__["high_yield"] = _ama.MDSpotSummarySnapshot_high_yield_set
    __swig_getmethods__["high_yield"] = _ama.MDSpotSummarySnapshot_high_yield_get
    if _newclass:high_yield = _swig_property(_ama.MDSpotSummarySnapshot_high_yield_get, _ama.MDSpotSummarySnapshot_high_yield_set)
    __swig_setmethods__["low_yield"] = _ama.MDSpotSummarySnapshot_low_yield_set
    __swig_getmethods__["low_yield"] = _ama.MDSpotSummarySnapshot_low_yield_get
    if _newclass:low_yield = _swig_property(_ama.MDSpotSummarySnapshot_low_yield_get, _ama.MDSpotSummarySnapshot_low_yield_set)
    __swig_setmethods__["close_yield"] = _ama.MDSpotSummarySnapshot_close_yield_set
    __swig_getmethods__["close_yield"] = _ama.MDSpotSummarySnapshot_close_yield_get
    if _newclass:close_yield = _swig_property(_ama.MDSpotSummarySnapshot_close_yield_get, _ama.MDSpotSummarySnapshot_close_yield_set)
    __swig_setmethods__["weighted_avg_yield"] = _ama.MDSpotSummarySnapshot_weighted_avg_yield_set
    __swig_getmethods__["weighted_avg_yield"] = _ama.MDSpotSummarySnapshot_weighted_avg_yield_get
    if _newclass:weighted_avg_yield = _swig_property(_ama.MDSpotSummarySnapshot_weighted_avg_yield_get, _ama.MDSpotSummarySnapshot_weighted_avg_yield_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDSpotSummarySnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDSpotSummarySnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDSpotSummarySnapshot_total_volume_trade_get, _ama.MDSpotSummarySnapshot_total_volume_trade_set)
    __swig_setmethods__["num_trades"] = _ama.MDSpotSummarySnapshot_num_trades_set
    __swig_getmethods__["num_trades"] = _ama.MDSpotSummarySnapshot_num_trades_get
    if _newclass:num_trades = _swig_property(_ama.MDSpotSummarySnapshot_num_trades_get, _ama.MDSpotSummarySnapshot_num_trades_set)
    __swig_setmethods__["change_over_net_price"] = _ama.MDSpotSummarySnapshot_change_over_net_price_set
    __swig_getmethods__["change_over_net_price"] = _ama.MDSpotSummarySnapshot_change_over_net_price_get
    if _newclass:change_over_net_price = _swig_property(_ama.MDSpotSummarySnapshot_change_over_net_price_get, _ama.MDSpotSummarySnapshot_change_over_net_price_set)
    __swig_setmethods__["change_over_yields"] = _ama.MDSpotSummarySnapshot_change_over_yields_set
    __swig_getmethods__["change_over_yields"] = _ama.MDSpotSummarySnapshot_change_over_yields_get
    if _newclass:change_over_yields = _swig_property(_ama.MDSpotSummarySnapshot_change_over_yields_get, _ama.MDSpotSummarySnapshot_change_over_yields_set)
    __swig_setmethods__["term_to_maturity"] = _ama.MDSpotSummarySnapshot_term_to_maturity_set
    __swig_getmethods__["term_to_maturity"] = _ama.MDSpotSummarySnapshot_term_to_maturity_get
    if _newclass:term_to_maturity = _swig_property(_ama.MDSpotSummarySnapshot_term_to_maturity_get, _ama.MDSpotSummarySnapshot_term_to_maturity_set)
    __swig_setmethods__["variety_category"] = _ama.MDSpotSummarySnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDSpotSummarySnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDSpotSummarySnapshot_variety_category_get, _ama.MDSpotSummarySnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDSpotSummarySnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDSpotSummarySnapshot
    __del__ = lambda self : None;
MDSpotSummarySnapshot_swigregister = _ama.MDSpotSummarySnapshot_swigregister
MDSpotSummarySnapshot_swigregister(MDSpotSummarySnapshot)

class MDSpotXBondSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDSpotXBondSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDSpotXBondSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDSpotXBondSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDSpotXBondSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDSpotXBondSnapshot_market_type_get, _ama.MDSpotXBondSnapshot_market_type_set)
    __swig_setmethods__["msg_type"] = _ama.MDSpotXBondSnapshot_msg_type_set
    __swig_getmethods__["msg_type"] = _ama.MDSpotXBondSnapshot_msg_type_get
    if _newclass:msg_type = _swig_property(_ama.MDSpotXBondSnapshot_msg_type_get, _ama.MDSpotXBondSnapshot_msg_type_set)
    __swig_setmethods__["msg_seq_num"] = _ama.MDSpotXBondSnapshot_msg_seq_num_set
    __swig_getmethods__["msg_seq_num"] = _ama.MDSpotXBondSnapshot_msg_seq_num_get
    if _newclass:msg_seq_num = _swig_property(_ama.MDSpotXBondSnapshot_msg_seq_num_get, _ama.MDSpotXBondSnapshot_msg_seq_num_set)
    __swig_setmethods__["sending_time"] = _ama.MDSpotXBondSnapshot_sending_time_set
    __swig_getmethods__["sending_time"] = _ama.MDSpotXBondSnapshot_sending_time_get
    if _newclass:sending_time = _swig_property(_ama.MDSpotXBondSnapshot_sending_time_get, _ama.MDSpotXBondSnapshot_sending_time_set)
    __swig_setmethods__["security_code"] = _ama.MDSpotXBondSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDSpotXBondSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDSpotXBondSnapshot_security_code_get, _ama.MDSpotXBondSnapshot_security_code_set)
    __swig_setmethods__["symbol"] = _ama.MDSpotXBondSnapshot_symbol_set
    __swig_getmethods__["symbol"] = _ama.MDSpotXBondSnapshot_symbol_get
    if _newclass:symbol = _swig_property(_ama.MDSpotXBondSnapshot_symbol_get, _ama.MDSpotXBondSnapshot_symbol_set)
    __swig_setmethods__["orig_time"] = _ama.MDSpotXBondSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDSpotXBondSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDSpotXBondSnapshot_orig_time_get, _ama.MDSpotXBondSnapshot_orig_time_set)
    __swig_setmethods__["market_indicator"] = _ama.MDSpotXBondSnapshot_market_indicator_set
    __swig_getmethods__["market_indicator"] = _ama.MDSpotXBondSnapshot_market_indicator_get
    if _newclass:market_indicator = _swig_property(_ama.MDSpotXBondSnapshot_market_indicator_get, _ama.MDSpotXBondSnapshot_market_indicator_set)
    __swig_setmethods__["trade_method"] = _ama.MDSpotXBondSnapshot_trade_method_set
    __swig_getmethods__["trade_method"] = _ama.MDSpotXBondSnapshot_trade_method_get
    if _newclass:trade_method = _swig_property(_ama.MDSpotXBondSnapshot_trade_method_get, _ama.MDSpotXBondSnapshot_trade_method_set)
    __swig_setmethods__["md_type"] = _ama.MDSpotXBondSnapshot_md_type_set
    __swig_getmethods__["md_type"] = _ama.MDSpotXBondSnapshot_md_type_get
    if _newclass:md_type = _swig_property(_ama.MDSpotXBondSnapshot_md_type_get, _ama.MDSpotXBondSnapshot_md_type_set)
    __swig_setmethods__["md_sub_type"] = _ama.MDSpotXBondSnapshot_md_sub_type_set
    __swig_getmethods__["md_sub_type"] = _ama.MDSpotXBondSnapshot_md_sub_type_get
    if _newclass:md_sub_type = _swig_property(_ama.MDSpotXBondSnapshot_md_sub_type_get, _ama.MDSpotXBondSnapshot_md_sub_type_set)
    __swig_setmethods__["settl_type"] = _ama.MDSpotXBondSnapshot_settl_type_set
    __swig_getmethods__["settl_type"] = _ama.MDSpotXBondSnapshot_settl_type_get
    if _newclass:settl_type = _swig_property(_ama.MDSpotXBondSnapshot_settl_type_get, _ama.MDSpotXBondSnapshot_settl_type_set)
    __swig_setmethods__["side"] = _ama.MDSpotXBondSnapshot_side_set
    __swig_getmethods__["side"] = _ama.MDSpotXBondSnapshot_side_get
    if _newclass:side = _swig_property(_ama.MDSpotXBondSnapshot_side_get, _ama.MDSpotXBondSnapshot_side_set)
    __swig_setmethods__["last_clean_price"] = _ama.MDSpotXBondSnapshot_last_clean_price_set
    __swig_getmethods__["last_clean_price"] = _ama.MDSpotXBondSnapshot_last_clean_price_get
    if _newclass:last_clean_price = _swig_property(_ama.MDSpotXBondSnapshot_last_clean_price_get, _ama.MDSpotXBondSnapshot_last_clean_price_set)
    __swig_setmethods__["last_yield"] = _ama.MDSpotXBondSnapshot_last_yield_set
    __swig_getmethods__["last_yield"] = _ama.MDSpotXBondSnapshot_last_yield_get
    if _newclass:last_yield = _swig_property(_ama.MDSpotXBondSnapshot_last_yield_get, _ama.MDSpotXBondSnapshot_last_yield_set)
    __swig_setmethods__["high_clean_price"] = _ama.MDSpotXBondSnapshot_high_clean_price_set
    __swig_getmethods__["high_clean_price"] = _ama.MDSpotXBondSnapshot_high_clean_price_get
    if _newclass:high_clean_price = _swig_property(_ama.MDSpotXBondSnapshot_high_clean_price_get, _ama.MDSpotXBondSnapshot_high_clean_price_set)
    __swig_setmethods__["high_yield"] = _ama.MDSpotXBondSnapshot_high_yield_set
    __swig_getmethods__["high_yield"] = _ama.MDSpotXBondSnapshot_high_yield_get
    if _newclass:high_yield = _swig_property(_ama.MDSpotXBondSnapshot_high_yield_get, _ama.MDSpotXBondSnapshot_high_yield_set)
    __swig_setmethods__["low_clean_price"] = _ama.MDSpotXBondSnapshot_low_clean_price_set
    __swig_getmethods__["low_clean_price"] = _ama.MDSpotXBondSnapshot_low_clean_price_get
    if _newclass:low_clean_price = _swig_property(_ama.MDSpotXBondSnapshot_low_clean_price_get, _ama.MDSpotXBondSnapshot_low_clean_price_set)
    __swig_setmethods__["low_yield"] = _ama.MDSpotXBondSnapshot_low_yield_set
    __swig_getmethods__["low_yield"] = _ama.MDSpotXBondSnapshot_low_yield_get
    if _newclass:low_yield = _swig_property(_ama.MDSpotXBondSnapshot_low_yield_get, _ama.MDSpotXBondSnapshot_low_yield_set)
    __swig_setmethods__["open_clean_price"] = _ama.MDSpotXBondSnapshot_open_clean_price_set
    __swig_getmethods__["open_clean_price"] = _ama.MDSpotXBondSnapshot_open_clean_price_get
    if _newclass:open_clean_price = _swig_property(_ama.MDSpotXBondSnapshot_open_clean_price_get, _ama.MDSpotXBondSnapshot_open_clean_price_set)
    __swig_setmethods__["open_yield"] = _ama.MDSpotXBondSnapshot_open_yield_set
    __swig_getmethods__["open_yield"] = _ama.MDSpotXBondSnapshot_open_yield_get
    if _newclass:open_yield = _swig_property(_ama.MDSpotXBondSnapshot_open_yield_get, _ama.MDSpotXBondSnapshot_open_yield_set)
    __swig_setmethods__["pre_open_clean_price"] = _ama.MDSpotXBondSnapshot_pre_open_clean_price_set
    __swig_getmethods__["pre_open_clean_price"] = _ama.MDSpotXBondSnapshot_pre_open_clean_price_get
    if _newclass:pre_open_clean_price = _swig_property(_ama.MDSpotXBondSnapshot_pre_open_clean_price_get, _ama.MDSpotXBondSnapshot_pre_open_clean_price_set)
    __swig_setmethods__["pre_open_yield"] = _ama.MDSpotXBondSnapshot_pre_open_yield_set
    __swig_getmethods__["pre_open_yield"] = _ama.MDSpotXBondSnapshot_pre_open_yield_get
    if _newclass:pre_open_yield = _swig_property(_ama.MDSpotXBondSnapshot_pre_open_yield_get, _ama.MDSpotXBondSnapshot_pre_open_yield_set)
    __swig_setmethods__["weighted_avg_clean_price"] = _ama.MDSpotXBondSnapshot_weighted_avg_clean_price_set
    __swig_getmethods__["weighted_avg_clean_price"] = _ama.MDSpotXBondSnapshot_weighted_avg_clean_price_get
    if _newclass:weighted_avg_clean_price = _swig_property(_ama.MDSpotXBondSnapshot_weighted_avg_clean_price_get, _ama.MDSpotXBondSnapshot_weighted_avg_clean_price_set)
    __swig_setmethods__["weighted_avg_yield"] = _ama.MDSpotXBondSnapshot_weighted_avg_yield_set
    __swig_getmethods__["weighted_avg_yield"] = _ama.MDSpotXBondSnapshot_weighted_avg_yield_get
    if _newclass:weighted_avg_yield = _swig_property(_ama.MDSpotXBondSnapshot_weighted_avg_yield_get, _ama.MDSpotXBondSnapshot_weighted_avg_yield_set)
    __swig_setmethods__["pre_weighted_avg_clean_price"] = _ama.MDSpotXBondSnapshot_pre_weighted_avg_clean_price_set
    __swig_getmethods__["pre_weighted_avg_clean_price"] = _ama.MDSpotXBondSnapshot_pre_weighted_avg_clean_price_get
    if _newclass:pre_weighted_avg_clean_price = _swig_property(_ama.MDSpotXBondSnapshot_pre_weighted_avg_clean_price_get, _ama.MDSpotXBondSnapshot_pre_weighted_avg_clean_price_set)
    __swig_setmethods__["pre_weighted_avg_yield"] = _ama.MDSpotXBondSnapshot_pre_weighted_avg_yield_set
    __swig_getmethods__["pre_weighted_avg_yield"] = _ama.MDSpotXBondSnapshot_pre_weighted_avg_yield_get
    if _newclass:pre_weighted_avg_yield = _swig_property(_ama.MDSpotXBondSnapshot_pre_weighted_avg_yield_get, _ama.MDSpotXBondSnapshot_pre_weighted_avg_yield_set)
    __swig_setmethods__["pre_close_clean_price"] = _ama.MDSpotXBondSnapshot_pre_close_clean_price_set
    __swig_getmethods__["pre_close_clean_price"] = _ama.MDSpotXBondSnapshot_pre_close_clean_price_get
    if _newclass:pre_close_clean_price = _swig_property(_ama.MDSpotXBondSnapshot_pre_close_clean_price_get, _ama.MDSpotXBondSnapshot_pre_close_clean_price_set)
    __swig_setmethods__["pre_close_yield"] = _ama.MDSpotXBondSnapshot_pre_close_yield_set
    __swig_getmethods__["pre_close_yield"] = _ama.MDSpotXBondSnapshot_pre_close_yield_get
    if _newclass:pre_close_yield = _swig_property(_ama.MDSpotXBondSnapshot_pre_close_yield_get, _ama.MDSpotXBondSnapshot_pre_close_yield_set)
    __swig_setmethods__["ratio_of_change"] = _ama.MDSpotXBondSnapshot_ratio_of_change_set
    __swig_getmethods__["ratio_of_change"] = _ama.MDSpotXBondSnapshot_ratio_of_change_get
    if _newclass:ratio_of_change = _swig_property(_ama.MDSpotXBondSnapshot_ratio_of_change_get, _ama.MDSpotXBondSnapshot_ratio_of_change_set)
    __swig_setmethods__["change_over_yields"] = _ama.MDSpotXBondSnapshot_change_over_yields_set
    __swig_getmethods__["change_over_yields"] = _ama.MDSpotXBondSnapshot_change_over_yields_get
    if _newclass:change_over_yields = _swig_property(_ama.MDSpotXBondSnapshot_change_over_yields_get, _ama.MDSpotXBondSnapshot_change_over_yields_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDSpotXBondSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDSpotXBondSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDSpotXBondSnapshot_total_volume_trade_get, _ama.MDSpotXBondSnapshot_total_volume_trade_set)
    __swig_setmethods__["pre_market_bond_indicator"] = _ama.MDSpotXBondSnapshot_pre_market_bond_indicator_set
    __swig_getmethods__["pre_market_bond_indicator"] = _ama.MDSpotXBondSnapshot_pre_market_bond_indicator_get
    if _newclass:pre_market_bond_indicator = _swig_property(_ama.MDSpotXBondSnapshot_pre_market_bond_indicator_get, _ama.MDSpotXBondSnapshot_pre_market_bond_indicator_set)
    __swig_setmethods__["variety_category"] = _ama.MDSpotXBondSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDSpotXBondSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDSpotXBondSnapshot_variety_category_get, _ama.MDSpotXBondSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDSpotXBondSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDSpotXBondSnapshot
    __del__ = lambda self : None;
MDSpotXBondSnapshot_swigregister = _ama.MDSpotXBondSnapshot_swigregister
MDSpotXBondSnapshot_swigregister(MDSpotXBondSnapshot)

class MDPledgeRepoTickExecution(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDPledgeRepoTickExecution, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDPledgeRepoTickExecution, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDPledgeRepoTickExecution_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDPledgeRepoTickExecution_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDPledgeRepoTickExecution_market_type_get, _ama.MDPledgeRepoTickExecution_market_type_set)
    __swig_setmethods__["msg_type"] = _ama.MDPledgeRepoTickExecution_msg_type_set
    __swig_getmethods__["msg_type"] = _ama.MDPledgeRepoTickExecution_msg_type_get
    if _newclass:msg_type = _swig_property(_ama.MDPledgeRepoTickExecution_msg_type_get, _ama.MDPledgeRepoTickExecution_msg_type_set)
    __swig_setmethods__["msg_seq_num"] = _ama.MDPledgeRepoTickExecution_msg_seq_num_set
    __swig_getmethods__["msg_seq_num"] = _ama.MDPledgeRepoTickExecution_msg_seq_num_get
    if _newclass:msg_seq_num = _swig_property(_ama.MDPledgeRepoTickExecution_msg_seq_num_get, _ama.MDPledgeRepoTickExecution_msg_seq_num_set)
    __swig_setmethods__["sending_time"] = _ama.MDPledgeRepoTickExecution_sending_time_set
    __swig_getmethods__["sending_time"] = _ama.MDPledgeRepoTickExecution_sending_time_get
    if _newclass:sending_time = _swig_property(_ama.MDPledgeRepoTickExecution_sending_time_get, _ama.MDPledgeRepoTickExecution_sending_time_set)
    __swig_setmethods__["security_code"] = _ama.MDPledgeRepoTickExecution_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDPledgeRepoTickExecution_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDPledgeRepoTickExecution_security_code_get, _ama.MDPledgeRepoTickExecution_security_code_set)
    __swig_setmethods__["symbol"] = _ama.MDPledgeRepoTickExecution_symbol_set
    __swig_getmethods__["symbol"] = _ama.MDPledgeRepoTickExecution_symbol_get
    if _newclass:symbol = _swig_property(_ama.MDPledgeRepoTickExecution_symbol_get, _ama.MDPledgeRepoTickExecution_symbol_set)
    __swig_setmethods__["orig_time"] = _ama.MDPledgeRepoTickExecution_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDPledgeRepoTickExecution_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDPledgeRepoTickExecution_orig_time_get, _ama.MDPledgeRepoTickExecution_orig_time_set)
    __swig_setmethods__["market_indicator"] = _ama.MDPledgeRepoTickExecution_market_indicator_set
    __swig_getmethods__["market_indicator"] = _ama.MDPledgeRepoTickExecution_market_indicator_get
    if _newclass:market_indicator = _swig_property(_ama.MDPledgeRepoTickExecution_market_indicator_get, _ama.MDPledgeRepoTickExecution_market_indicator_set)
    __swig_setmethods__["deal_number"] = _ama.MDPledgeRepoTickExecution_deal_number_set
    __swig_getmethods__["deal_number"] = _ama.MDPledgeRepoTickExecution_deal_number_get
    if _newclass:deal_number = _swig_property(_ama.MDPledgeRepoTickExecution_deal_number_get, _ama.MDPledgeRepoTickExecution_deal_number_set)
    __swig_setmethods__["exec_type"] = _ama.MDPledgeRepoTickExecution_exec_type_set
    __swig_getmethods__["exec_type"] = _ama.MDPledgeRepoTickExecution_exec_type_get
    if _newclass:exec_type = _swig_property(_ama.MDPledgeRepoTickExecution_exec_type_get, _ama.MDPledgeRepoTickExecution_exec_type_set)
    __swig_setmethods__["exec_price"] = _ama.MDPledgeRepoTickExecution_exec_price_set
    __swig_getmethods__["exec_price"] = _ama.MDPledgeRepoTickExecution_exec_price_get
    if _newclass:exec_price = _swig_property(_ama.MDPledgeRepoTickExecution_exec_price_get, _ama.MDPledgeRepoTickExecution_exec_price_set)
    __swig_setmethods__["exec_amount"] = _ama.MDPledgeRepoTickExecution_exec_amount_set
    __swig_getmethods__["exec_amount"] = _ama.MDPledgeRepoTickExecution_exec_amount_get
    if _newclass:exec_amount = _swig_property(_ama.MDPledgeRepoTickExecution_exec_amount_get, _ama.MDPledgeRepoTickExecution_exec_amount_set)
    __swig_setmethods__["trade_limit_days"] = _ama.MDPledgeRepoTickExecution_trade_limit_days_set
    __swig_getmethods__["trade_limit_days"] = _ama.MDPledgeRepoTickExecution_trade_limit_days_get
    if _newclass:trade_limit_days = _swig_property(_ama.MDPledgeRepoTickExecution_trade_limit_days_get, _ama.MDPledgeRepoTickExecution_trade_limit_days_set)
    __swig_setmethods__["variety_category"] = _ama.MDPledgeRepoTickExecution_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDPledgeRepoTickExecution_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDPledgeRepoTickExecution_variety_category_get, _ama.MDPledgeRepoTickExecution_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDPledgeRepoTickExecution()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDPledgeRepoTickExecution
    __del__ = lambda self : None;
MDPledgeRepoTickExecution_swigregister = _ama.MDPledgeRepoTickExecution_swigregister
MDPledgeRepoTickExecution_swigregister(MDPledgeRepoTickExecution)

class MDPledgeRepoSummarySnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDPledgeRepoSummarySnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDPledgeRepoSummarySnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDPledgeRepoSummarySnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDPledgeRepoSummarySnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDPledgeRepoSummarySnapshot_market_type_get, _ama.MDPledgeRepoSummarySnapshot_market_type_set)
    __swig_setmethods__["msg_type"] = _ama.MDPledgeRepoSummarySnapshot_msg_type_set
    __swig_getmethods__["msg_type"] = _ama.MDPledgeRepoSummarySnapshot_msg_type_get
    if _newclass:msg_type = _swig_property(_ama.MDPledgeRepoSummarySnapshot_msg_type_get, _ama.MDPledgeRepoSummarySnapshot_msg_type_set)
    __swig_setmethods__["msg_seq_num"] = _ama.MDPledgeRepoSummarySnapshot_msg_seq_num_set
    __swig_getmethods__["msg_seq_num"] = _ama.MDPledgeRepoSummarySnapshot_msg_seq_num_get
    if _newclass:msg_seq_num = _swig_property(_ama.MDPledgeRepoSummarySnapshot_msg_seq_num_get, _ama.MDPledgeRepoSummarySnapshot_msg_seq_num_set)
    __swig_setmethods__["sending_time"] = _ama.MDPledgeRepoSummarySnapshot_sending_time_set
    __swig_getmethods__["sending_time"] = _ama.MDPledgeRepoSummarySnapshot_sending_time_get
    if _newclass:sending_time = _swig_property(_ama.MDPledgeRepoSummarySnapshot_sending_time_get, _ama.MDPledgeRepoSummarySnapshot_sending_time_set)
    __swig_setmethods__["security_code"] = _ama.MDPledgeRepoSummarySnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDPledgeRepoSummarySnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDPledgeRepoSummarySnapshot_security_code_get, _ama.MDPledgeRepoSummarySnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDPledgeRepoSummarySnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDPledgeRepoSummarySnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDPledgeRepoSummarySnapshot_orig_time_get, _ama.MDPledgeRepoSummarySnapshot_orig_time_set)
    __swig_setmethods__["market_indicator"] = _ama.MDPledgeRepoSummarySnapshot_market_indicator_set
    __swig_getmethods__["market_indicator"] = _ama.MDPledgeRepoSummarySnapshot_market_indicator_get
    if _newclass:market_indicator = _swig_property(_ama.MDPledgeRepoSummarySnapshot_market_indicator_get, _ama.MDPledgeRepoSummarySnapshot_market_indicator_set)
    __swig_setmethods__["trade_method"] = _ama.MDPledgeRepoSummarySnapshot_trade_method_set
    __swig_getmethods__["trade_method"] = _ama.MDPledgeRepoSummarySnapshot_trade_method_get
    if _newclass:trade_method = _swig_property(_ama.MDPledgeRepoSummarySnapshot_trade_method_get, _ama.MDPledgeRepoSummarySnapshot_trade_method_set)
    __swig_setmethods__["md_type"] = _ama.MDPledgeRepoSummarySnapshot_md_type_set
    __swig_getmethods__["md_type"] = _ama.MDPledgeRepoSummarySnapshot_md_type_get
    if _newclass:md_type = _swig_property(_ama.MDPledgeRepoSummarySnapshot_md_type_get, _ama.MDPledgeRepoSummarySnapshot_md_type_set)
    __swig_setmethods__["md_sub_type"] = _ama.MDPledgeRepoSummarySnapshot_md_sub_type_set
    __swig_getmethods__["md_sub_type"] = _ama.MDPledgeRepoSummarySnapshot_md_sub_type_get
    if _newclass:md_sub_type = _swig_property(_ama.MDPledgeRepoSummarySnapshot_md_sub_type_get, _ama.MDPledgeRepoSummarySnapshot_md_sub_type_set)
    __swig_setmethods__["avg_term"] = _ama.MDPledgeRepoSummarySnapshot_avg_term_set
    __swig_getmethods__["avg_term"] = _ama.MDPledgeRepoSummarySnapshot_avg_term_get
    if _newclass:avg_term = _swig_property(_ama.MDPledgeRepoSummarySnapshot_avg_term_get, _ama.MDPledgeRepoSummarySnapshot_avg_term_set)
    __swig_setmethods__["last_price"] = _ama.MDPledgeRepoSummarySnapshot_last_price_set
    __swig_getmethods__["last_price"] = _ama.MDPledgeRepoSummarySnapshot_last_price_get
    if _newclass:last_price = _swig_property(_ama.MDPledgeRepoSummarySnapshot_last_price_get, _ama.MDPledgeRepoSummarySnapshot_last_price_set)
    __swig_setmethods__["open_price"] = _ama.MDPledgeRepoSummarySnapshot_open_price_set
    __swig_getmethods__["open_price"] = _ama.MDPledgeRepoSummarySnapshot_open_price_get
    if _newclass:open_price = _swig_property(_ama.MDPledgeRepoSummarySnapshot_open_price_get, _ama.MDPledgeRepoSummarySnapshot_open_price_set)
    __swig_setmethods__["high_price"] = _ama.MDPledgeRepoSummarySnapshot_high_price_set
    __swig_getmethods__["high_price"] = _ama.MDPledgeRepoSummarySnapshot_high_price_get
    if _newclass:high_price = _swig_property(_ama.MDPledgeRepoSummarySnapshot_high_price_get, _ama.MDPledgeRepoSummarySnapshot_high_price_set)
    __swig_setmethods__["low_price"] = _ama.MDPledgeRepoSummarySnapshot_low_price_set
    __swig_getmethods__["low_price"] = _ama.MDPledgeRepoSummarySnapshot_low_price_get
    if _newclass:low_price = _swig_property(_ama.MDPledgeRepoSummarySnapshot_low_price_get, _ama.MDPledgeRepoSummarySnapshot_low_price_set)
    __swig_setmethods__["weighted_avg_price"] = _ama.MDPledgeRepoSummarySnapshot_weighted_avg_price_set
    __swig_getmethods__["weighted_avg_price"] = _ama.MDPledgeRepoSummarySnapshot_weighted_avg_price_get
    if _newclass:weighted_avg_price = _swig_property(_ama.MDPledgeRepoSummarySnapshot_weighted_avg_price_get, _ama.MDPledgeRepoSummarySnapshot_weighted_avg_price_set)
    __swig_setmethods__["bond_weighted_avg_price"] = _ama.MDPledgeRepoSummarySnapshot_bond_weighted_avg_price_set
    __swig_getmethods__["bond_weighted_avg_price"] = _ama.MDPledgeRepoSummarySnapshot_bond_weighted_avg_price_get
    if _newclass:bond_weighted_avg_price = _swig_property(_ama.MDPledgeRepoSummarySnapshot_bond_weighted_avg_price_get, _ama.MDPledgeRepoSummarySnapshot_bond_weighted_avg_price_set)
    __swig_setmethods__["pre_weighted_avg_price"] = _ama.MDPledgeRepoSummarySnapshot_pre_weighted_avg_price_set
    __swig_getmethods__["pre_weighted_avg_price"] = _ama.MDPledgeRepoSummarySnapshot_pre_weighted_avg_price_get
    if _newclass:pre_weighted_avg_price = _swig_property(_ama.MDPledgeRepoSummarySnapshot_pre_weighted_avg_price_get, _ama.MDPledgeRepoSummarySnapshot_pre_weighted_avg_price_set)
    __swig_setmethods__["close_price"] = _ama.MDPledgeRepoSummarySnapshot_close_price_set
    __swig_getmethods__["close_price"] = _ama.MDPledgeRepoSummarySnapshot_close_price_get
    if _newclass:close_price = _swig_property(_ama.MDPledgeRepoSummarySnapshot_close_price_get, _ama.MDPledgeRepoSummarySnapshot_close_price_set)
    __swig_setmethods__["pre_close_price"] = _ama.MDPledgeRepoSummarySnapshot_pre_close_price_set
    __swig_getmethods__["pre_close_price"] = _ama.MDPledgeRepoSummarySnapshot_pre_close_price_get
    if _newclass:pre_close_price = _swig_property(_ama.MDPledgeRepoSummarySnapshot_pre_close_price_get, _ama.MDPledgeRepoSummarySnapshot_pre_close_price_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDPledgeRepoSummarySnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDPledgeRepoSummarySnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDPledgeRepoSummarySnapshot_total_volume_trade_get, _ama.MDPledgeRepoSummarySnapshot_total_volume_trade_set)
    __swig_setmethods__["num_trades"] = _ama.MDPledgeRepoSummarySnapshot_num_trades_set
    __swig_getmethods__["num_trades"] = _ama.MDPledgeRepoSummarySnapshot_num_trades_get
    if _newclass:num_trades = _swig_property(_ama.MDPledgeRepoSummarySnapshot_num_trades_get, _ama.MDPledgeRepoSummarySnapshot_num_trades_set)
    __swig_setmethods__["variety_category"] = _ama.MDPledgeRepoSummarySnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDPledgeRepoSummarySnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDPledgeRepoSummarySnapshot_variety_category_get, _ama.MDPledgeRepoSummarySnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDPledgeRepoSummarySnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDPledgeRepoSummarySnapshot
    __del__ = lambda self : None;
MDPledgeRepoSummarySnapshot_swigregister = _ama.MDPledgeRepoSummarySnapshot_swigregister
MDPledgeRepoSummarySnapshot_swigregister(MDPledgeRepoSummarySnapshot)

class MDPledgeRepoInquirySnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDPledgeRepoInquirySnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDPledgeRepoInquirySnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDPledgeRepoInquirySnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDPledgeRepoInquirySnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDPledgeRepoInquirySnapshot_market_type_get, _ama.MDPledgeRepoInquirySnapshot_market_type_set)
    __swig_setmethods__["msg_type"] = _ama.MDPledgeRepoInquirySnapshot_msg_type_set
    __swig_getmethods__["msg_type"] = _ama.MDPledgeRepoInquirySnapshot_msg_type_get
    if _newclass:msg_type = _swig_property(_ama.MDPledgeRepoInquirySnapshot_msg_type_get, _ama.MDPledgeRepoInquirySnapshot_msg_type_set)
    __swig_setmethods__["msg_seq_num"] = _ama.MDPledgeRepoInquirySnapshot_msg_seq_num_set
    __swig_getmethods__["msg_seq_num"] = _ama.MDPledgeRepoInquirySnapshot_msg_seq_num_get
    if _newclass:msg_seq_num = _swig_property(_ama.MDPledgeRepoInquirySnapshot_msg_seq_num_get, _ama.MDPledgeRepoInquirySnapshot_msg_seq_num_set)
    __swig_setmethods__["sending_time"] = _ama.MDPledgeRepoInquirySnapshot_sending_time_set
    __swig_getmethods__["sending_time"] = _ama.MDPledgeRepoInquirySnapshot_sending_time_get
    if _newclass:sending_time = _swig_property(_ama.MDPledgeRepoInquirySnapshot_sending_time_get, _ama.MDPledgeRepoInquirySnapshot_sending_time_set)
    __swig_setmethods__["security_code"] = _ama.MDPledgeRepoInquirySnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDPledgeRepoInquirySnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDPledgeRepoInquirySnapshot_security_code_get, _ama.MDPledgeRepoInquirySnapshot_security_code_set)
    __swig_setmethods__["symbol"] = _ama.MDPledgeRepoInquirySnapshot_symbol_set
    __swig_getmethods__["symbol"] = _ama.MDPledgeRepoInquirySnapshot_symbol_get
    if _newclass:symbol = _swig_property(_ama.MDPledgeRepoInquirySnapshot_symbol_get, _ama.MDPledgeRepoInquirySnapshot_symbol_set)
    __swig_setmethods__["orig_time"] = _ama.MDPledgeRepoInquirySnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDPledgeRepoInquirySnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDPledgeRepoInquirySnapshot_orig_time_get, _ama.MDPledgeRepoInquirySnapshot_orig_time_set)
    __swig_setmethods__["market_indicator"] = _ama.MDPledgeRepoInquirySnapshot_market_indicator_set
    __swig_getmethods__["market_indicator"] = _ama.MDPledgeRepoInquirySnapshot_market_indicator_get
    if _newclass:market_indicator = _swig_property(_ama.MDPledgeRepoInquirySnapshot_market_indicator_get, _ama.MDPledgeRepoInquirySnapshot_market_indicator_set)
    __swig_setmethods__["md_type"] = _ama.MDPledgeRepoInquirySnapshot_md_type_set
    __swig_getmethods__["md_type"] = _ama.MDPledgeRepoInquirySnapshot_md_type_get
    if _newclass:md_type = _swig_property(_ama.MDPledgeRepoInquirySnapshot_md_type_get, _ama.MDPledgeRepoInquirySnapshot_md_type_set)
    __swig_setmethods__["md_sub_type"] = _ama.MDPledgeRepoInquirySnapshot_md_sub_type_set
    __swig_getmethods__["md_sub_type"] = _ama.MDPledgeRepoInquirySnapshot_md_sub_type_get
    if _newclass:md_sub_type = _swig_property(_ama.MDPledgeRepoInquirySnapshot_md_sub_type_get, _ama.MDPledgeRepoInquirySnapshot_md_sub_type_set)
    __swig_setmethods__["avg_term"] = _ama.MDPledgeRepoInquirySnapshot_avg_term_set
    __swig_getmethods__["avg_term"] = _ama.MDPledgeRepoInquirySnapshot_avg_term_get
    if _newclass:avg_term = _swig_property(_ama.MDPledgeRepoInquirySnapshot_avg_term_get, _ama.MDPledgeRepoInquirySnapshot_avg_term_set)
    __swig_setmethods__["last_price"] = _ama.MDPledgeRepoInquirySnapshot_last_price_set
    __swig_getmethods__["last_price"] = _ama.MDPledgeRepoInquirySnapshot_last_price_get
    if _newclass:last_price = _swig_property(_ama.MDPledgeRepoInquirySnapshot_last_price_get, _ama.MDPledgeRepoInquirySnapshot_last_price_set)
    __swig_setmethods__["open_price"] = _ama.MDPledgeRepoInquirySnapshot_open_price_set
    __swig_getmethods__["open_price"] = _ama.MDPledgeRepoInquirySnapshot_open_price_get
    if _newclass:open_price = _swig_property(_ama.MDPledgeRepoInquirySnapshot_open_price_get, _ama.MDPledgeRepoInquirySnapshot_open_price_set)
    __swig_setmethods__["high_price"] = _ama.MDPledgeRepoInquirySnapshot_high_price_set
    __swig_getmethods__["high_price"] = _ama.MDPledgeRepoInquirySnapshot_high_price_get
    if _newclass:high_price = _swig_property(_ama.MDPledgeRepoInquirySnapshot_high_price_get, _ama.MDPledgeRepoInquirySnapshot_high_price_set)
    __swig_setmethods__["low_price"] = _ama.MDPledgeRepoInquirySnapshot_low_price_set
    __swig_getmethods__["low_price"] = _ama.MDPledgeRepoInquirySnapshot_low_price_get
    if _newclass:low_price = _swig_property(_ama.MDPledgeRepoInquirySnapshot_low_price_get, _ama.MDPledgeRepoInquirySnapshot_low_price_set)
    __swig_setmethods__["weighted_avg_price"] = _ama.MDPledgeRepoInquirySnapshot_weighted_avg_price_set
    __swig_getmethods__["weighted_avg_price"] = _ama.MDPledgeRepoInquirySnapshot_weighted_avg_price_get
    if _newclass:weighted_avg_price = _swig_property(_ama.MDPledgeRepoInquirySnapshot_weighted_avg_price_get, _ama.MDPledgeRepoInquirySnapshot_weighted_avg_price_set)
    __swig_setmethods__["bond_weighted_avg_price"] = _ama.MDPledgeRepoInquirySnapshot_bond_weighted_avg_price_set
    __swig_getmethods__["bond_weighted_avg_price"] = _ama.MDPledgeRepoInquirySnapshot_bond_weighted_avg_price_get
    if _newclass:bond_weighted_avg_price = _swig_property(_ama.MDPledgeRepoInquirySnapshot_bond_weighted_avg_price_get, _ama.MDPledgeRepoInquirySnapshot_bond_weighted_avg_price_set)
    __swig_setmethods__["pre_weighted_avg_price"] = _ama.MDPledgeRepoInquirySnapshot_pre_weighted_avg_price_set
    __swig_getmethods__["pre_weighted_avg_price"] = _ama.MDPledgeRepoInquirySnapshot_pre_weighted_avg_price_get
    if _newclass:pre_weighted_avg_price = _swig_property(_ama.MDPledgeRepoInquirySnapshot_pre_weighted_avg_price_get, _ama.MDPledgeRepoInquirySnapshot_pre_weighted_avg_price_set)
    __swig_setmethods__["close_price"] = _ama.MDPledgeRepoInquirySnapshot_close_price_set
    __swig_getmethods__["close_price"] = _ama.MDPledgeRepoInquirySnapshot_close_price_get
    if _newclass:close_price = _swig_property(_ama.MDPledgeRepoInquirySnapshot_close_price_get, _ama.MDPledgeRepoInquirySnapshot_close_price_set)
    __swig_setmethods__["pre_close_price"] = _ama.MDPledgeRepoInquirySnapshot_pre_close_price_set
    __swig_getmethods__["pre_close_price"] = _ama.MDPledgeRepoInquirySnapshot_pre_close_price_get
    if _newclass:pre_close_price = _swig_property(_ama.MDPledgeRepoInquirySnapshot_pre_close_price_get, _ama.MDPledgeRepoInquirySnapshot_pre_close_price_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDPledgeRepoInquirySnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDPledgeRepoInquirySnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDPledgeRepoInquirySnapshot_total_volume_trade_get, _ama.MDPledgeRepoInquirySnapshot_total_volume_trade_set)
    __swig_setmethods__["num_trades"] = _ama.MDPledgeRepoInquirySnapshot_num_trades_set
    __swig_getmethods__["num_trades"] = _ama.MDPledgeRepoInquirySnapshot_num_trades_get
    if _newclass:num_trades = _swig_property(_ama.MDPledgeRepoInquirySnapshot_num_trades_get, _ama.MDPledgeRepoInquirySnapshot_num_trades_set)
    __swig_setmethods__["variety_category"] = _ama.MDPledgeRepoInquirySnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDPledgeRepoInquirySnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDPledgeRepoInquirySnapshot_variety_category_get, _ama.MDPledgeRepoInquirySnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDPledgeRepoInquirySnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDPledgeRepoInquirySnapshot
    __del__ = lambda self : None;
MDPledgeRepoInquirySnapshot_swigregister = _ama.MDPledgeRepoInquirySnapshot_swigregister
MDPledgeRepoInquirySnapshot_swigregister(MDPledgeRepoInquirySnapshot)

class MDPledgeRepoDepositSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDPledgeRepoDepositSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDPledgeRepoDepositSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDPledgeRepoDepositSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDPledgeRepoDepositSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDPledgeRepoDepositSnapshot_market_type_get, _ama.MDPledgeRepoDepositSnapshot_market_type_set)
    __swig_setmethods__["msg_type"] = _ama.MDPledgeRepoDepositSnapshot_msg_type_set
    __swig_getmethods__["msg_type"] = _ama.MDPledgeRepoDepositSnapshot_msg_type_get
    if _newclass:msg_type = _swig_property(_ama.MDPledgeRepoDepositSnapshot_msg_type_get, _ama.MDPledgeRepoDepositSnapshot_msg_type_set)
    __swig_setmethods__["msg_seq_num"] = _ama.MDPledgeRepoDepositSnapshot_msg_seq_num_set
    __swig_getmethods__["msg_seq_num"] = _ama.MDPledgeRepoDepositSnapshot_msg_seq_num_get
    if _newclass:msg_seq_num = _swig_property(_ama.MDPledgeRepoDepositSnapshot_msg_seq_num_get, _ama.MDPledgeRepoDepositSnapshot_msg_seq_num_set)
    __swig_setmethods__["sending_time"] = _ama.MDPledgeRepoDepositSnapshot_sending_time_set
    __swig_getmethods__["sending_time"] = _ama.MDPledgeRepoDepositSnapshot_sending_time_get
    if _newclass:sending_time = _swig_property(_ama.MDPledgeRepoDepositSnapshot_sending_time_get, _ama.MDPledgeRepoDepositSnapshot_sending_time_set)
    __swig_setmethods__["security_code"] = _ama.MDPledgeRepoDepositSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDPledgeRepoDepositSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDPledgeRepoDepositSnapshot_security_code_get, _ama.MDPledgeRepoDepositSnapshot_security_code_set)
    __swig_setmethods__["symbol"] = _ama.MDPledgeRepoDepositSnapshot_symbol_set
    __swig_getmethods__["symbol"] = _ama.MDPledgeRepoDepositSnapshot_symbol_get
    if _newclass:symbol = _swig_property(_ama.MDPledgeRepoDepositSnapshot_symbol_get, _ama.MDPledgeRepoDepositSnapshot_symbol_set)
    __swig_setmethods__["orig_time"] = _ama.MDPledgeRepoDepositSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDPledgeRepoDepositSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDPledgeRepoDepositSnapshot_orig_time_get, _ama.MDPledgeRepoDepositSnapshot_orig_time_set)
    __swig_setmethods__["market_indicator"] = _ama.MDPledgeRepoDepositSnapshot_market_indicator_set
    __swig_getmethods__["market_indicator"] = _ama.MDPledgeRepoDepositSnapshot_market_indicator_get
    if _newclass:market_indicator = _swig_property(_ama.MDPledgeRepoDepositSnapshot_market_indicator_get, _ama.MDPledgeRepoDepositSnapshot_market_indicator_set)
    __swig_setmethods__["md_type"] = _ama.MDPledgeRepoDepositSnapshot_md_type_set
    __swig_getmethods__["md_type"] = _ama.MDPledgeRepoDepositSnapshot_md_type_get
    if _newclass:md_type = _swig_property(_ama.MDPledgeRepoDepositSnapshot_md_type_get, _ama.MDPledgeRepoDepositSnapshot_md_type_set)
    __swig_setmethods__["md_sub_type"] = _ama.MDPledgeRepoDepositSnapshot_md_sub_type_set
    __swig_getmethods__["md_sub_type"] = _ama.MDPledgeRepoDepositSnapshot_md_sub_type_get
    if _newclass:md_sub_type = _swig_property(_ama.MDPledgeRepoDepositSnapshot_md_sub_type_get, _ama.MDPledgeRepoDepositSnapshot_md_sub_type_set)
    __swig_setmethods__["avg_term"] = _ama.MDPledgeRepoDepositSnapshot_avg_term_set
    __swig_getmethods__["avg_term"] = _ama.MDPledgeRepoDepositSnapshot_avg_term_get
    if _newclass:avg_term = _swig_property(_ama.MDPledgeRepoDepositSnapshot_avg_term_get, _ama.MDPledgeRepoDepositSnapshot_avg_term_set)
    __swig_setmethods__["last_price"] = _ama.MDPledgeRepoDepositSnapshot_last_price_set
    __swig_getmethods__["last_price"] = _ama.MDPledgeRepoDepositSnapshot_last_price_get
    if _newclass:last_price = _swig_property(_ama.MDPledgeRepoDepositSnapshot_last_price_get, _ama.MDPledgeRepoDepositSnapshot_last_price_set)
    __swig_setmethods__["open_price"] = _ama.MDPledgeRepoDepositSnapshot_open_price_set
    __swig_getmethods__["open_price"] = _ama.MDPledgeRepoDepositSnapshot_open_price_get
    if _newclass:open_price = _swig_property(_ama.MDPledgeRepoDepositSnapshot_open_price_get, _ama.MDPledgeRepoDepositSnapshot_open_price_set)
    __swig_setmethods__["high_price"] = _ama.MDPledgeRepoDepositSnapshot_high_price_set
    __swig_getmethods__["high_price"] = _ama.MDPledgeRepoDepositSnapshot_high_price_get
    if _newclass:high_price = _swig_property(_ama.MDPledgeRepoDepositSnapshot_high_price_get, _ama.MDPledgeRepoDepositSnapshot_high_price_set)
    __swig_setmethods__["low_price"] = _ama.MDPledgeRepoDepositSnapshot_low_price_set
    __swig_getmethods__["low_price"] = _ama.MDPledgeRepoDepositSnapshot_low_price_get
    if _newclass:low_price = _swig_property(_ama.MDPledgeRepoDepositSnapshot_low_price_get, _ama.MDPledgeRepoDepositSnapshot_low_price_set)
    __swig_setmethods__["weighted_avg_price"] = _ama.MDPledgeRepoDepositSnapshot_weighted_avg_price_set
    __swig_getmethods__["weighted_avg_price"] = _ama.MDPledgeRepoDepositSnapshot_weighted_avg_price_get
    if _newclass:weighted_avg_price = _swig_property(_ama.MDPledgeRepoDepositSnapshot_weighted_avg_price_get, _ama.MDPledgeRepoDepositSnapshot_weighted_avg_price_set)
    __swig_setmethods__["bond_weighted_avg_price"] = _ama.MDPledgeRepoDepositSnapshot_bond_weighted_avg_price_set
    __swig_getmethods__["bond_weighted_avg_price"] = _ama.MDPledgeRepoDepositSnapshot_bond_weighted_avg_price_get
    if _newclass:bond_weighted_avg_price = _swig_property(_ama.MDPledgeRepoDepositSnapshot_bond_weighted_avg_price_get, _ama.MDPledgeRepoDepositSnapshot_bond_weighted_avg_price_set)
    __swig_setmethods__["pre_weighted_avg_price"] = _ama.MDPledgeRepoDepositSnapshot_pre_weighted_avg_price_set
    __swig_getmethods__["pre_weighted_avg_price"] = _ama.MDPledgeRepoDepositSnapshot_pre_weighted_avg_price_get
    if _newclass:pre_weighted_avg_price = _swig_property(_ama.MDPledgeRepoDepositSnapshot_pre_weighted_avg_price_get, _ama.MDPledgeRepoDepositSnapshot_pre_weighted_avg_price_set)
    __swig_setmethods__["close_price"] = _ama.MDPledgeRepoDepositSnapshot_close_price_set
    __swig_getmethods__["close_price"] = _ama.MDPledgeRepoDepositSnapshot_close_price_get
    if _newclass:close_price = _swig_property(_ama.MDPledgeRepoDepositSnapshot_close_price_get, _ama.MDPledgeRepoDepositSnapshot_close_price_set)
    __swig_setmethods__["pre_close_price"] = _ama.MDPledgeRepoDepositSnapshot_pre_close_price_set
    __swig_getmethods__["pre_close_price"] = _ama.MDPledgeRepoDepositSnapshot_pre_close_price_get
    if _newclass:pre_close_price = _swig_property(_ama.MDPledgeRepoDepositSnapshot_pre_close_price_get, _ama.MDPledgeRepoDepositSnapshot_pre_close_price_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDPledgeRepoDepositSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDPledgeRepoDepositSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDPledgeRepoDepositSnapshot_total_volume_trade_get, _ama.MDPledgeRepoDepositSnapshot_total_volume_trade_set)
    __swig_setmethods__["num_trades"] = _ama.MDPledgeRepoDepositSnapshot_num_trades_set
    __swig_getmethods__["num_trades"] = _ama.MDPledgeRepoDepositSnapshot_num_trades_get
    if _newclass:num_trades = _swig_property(_ama.MDPledgeRepoDepositSnapshot_num_trades_get, _ama.MDPledgeRepoDepositSnapshot_num_trades_set)
    __swig_setmethods__["variety_category"] = _ama.MDPledgeRepoDepositSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDPledgeRepoDepositSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDPledgeRepoDepositSnapshot_variety_category_get, _ama.MDPledgeRepoDepositSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDPledgeRepoDepositSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDPledgeRepoDepositSnapshot
    __del__ = lambda self : None;
MDPledgeRepoDepositSnapshot_swigregister = _ama.MDPledgeRepoDepositSnapshot_swigregister
MDPledgeRepoDepositSnapshot_swigregister(MDPledgeRepoDepositSnapshot)

class MDPledgeRepoXRepoSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDPledgeRepoXRepoSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDPledgeRepoXRepoSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDPledgeRepoXRepoSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDPledgeRepoXRepoSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDPledgeRepoXRepoSnapshot_market_type_get, _ama.MDPledgeRepoXRepoSnapshot_market_type_set)
    __swig_setmethods__["msg_type"] = _ama.MDPledgeRepoXRepoSnapshot_msg_type_set
    __swig_getmethods__["msg_type"] = _ama.MDPledgeRepoXRepoSnapshot_msg_type_get
    if _newclass:msg_type = _swig_property(_ama.MDPledgeRepoXRepoSnapshot_msg_type_get, _ama.MDPledgeRepoXRepoSnapshot_msg_type_set)
    __swig_setmethods__["msg_seq_num"] = _ama.MDPledgeRepoXRepoSnapshot_msg_seq_num_set
    __swig_getmethods__["msg_seq_num"] = _ama.MDPledgeRepoXRepoSnapshot_msg_seq_num_get
    if _newclass:msg_seq_num = _swig_property(_ama.MDPledgeRepoXRepoSnapshot_msg_seq_num_get, _ama.MDPledgeRepoXRepoSnapshot_msg_seq_num_set)
    __swig_setmethods__["sending_time"] = _ama.MDPledgeRepoXRepoSnapshot_sending_time_set
    __swig_getmethods__["sending_time"] = _ama.MDPledgeRepoXRepoSnapshot_sending_time_get
    if _newclass:sending_time = _swig_property(_ama.MDPledgeRepoXRepoSnapshot_sending_time_get, _ama.MDPledgeRepoXRepoSnapshot_sending_time_set)
    __swig_setmethods__["security_code"] = _ama.MDPledgeRepoXRepoSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDPledgeRepoXRepoSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDPledgeRepoXRepoSnapshot_security_code_get, _ama.MDPledgeRepoXRepoSnapshot_security_code_set)
    __swig_setmethods__["security_group"] = _ama.MDPledgeRepoXRepoSnapshot_security_group_set
    __swig_getmethods__["security_group"] = _ama.MDPledgeRepoXRepoSnapshot_security_group_get
    if _newclass:security_group = _swig_property(_ama.MDPledgeRepoXRepoSnapshot_security_group_get, _ama.MDPledgeRepoXRepoSnapshot_security_group_set)
    __swig_setmethods__["orig_time"] = _ama.MDPledgeRepoXRepoSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDPledgeRepoXRepoSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDPledgeRepoXRepoSnapshot_orig_time_get, _ama.MDPledgeRepoXRepoSnapshot_orig_time_set)
    __swig_setmethods__["market_indicator"] = _ama.MDPledgeRepoXRepoSnapshot_market_indicator_set
    __swig_getmethods__["market_indicator"] = _ama.MDPledgeRepoXRepoSnapshot_market_indicator_get
    if _newclass:market_indicator = _swig_property(_ama.MDPledgeRepoXRepoSnapshot_market_indicator_get, _ama.MDPledgeRepoXRepoSnapshot_market_indicator_set)
    __swig_setmethods__["trade_method"] = _ama.MDPledgeRepoXRepoSnapshot_trade_method_set
    __swig_getmethods__["trade_method"] = _ama.MDPledgeRepoXRepoSnapshot_trade_method_get
    if _newclass:trade_method = _swig_property(_ama.MDPledgeRepoXRepoSnapshot_trade_method_get, _ama.MDPledgeRepoXRepoSnapshot_trade_method_set)
    __swig_setmethods__["md_type"] = _ama.MDPledgeRepoXRepoSnapshot_md_type_set
    __swig_getmethods__["md_type"] = _ama.MDPledgeRepoXRepoSnapshot_md_type_get
    if _newclass:md_type = _swig_property(_ama.MDPledgeRepoXRepoSnapshot_md_type_get, _ama.MDPledgeRepoXRepoSnapshot_md_type_set)
    __swig_setmethods__["md_sub_type"] = _ama.MDPledgeRepoXRepoSnapshot_md_sub_type_set
    __swig_getmethods__["md_sub_type"] = _ama.MDPledgeRepoXRepoSnapshot_md_sub_type_get
    if _newclass:md_sub_type = _swig_property(_ama.MDPledgeRepoXRepoSnapshot_md_sub_type_get, _ama.MDPledgeRepoXRepoSnapshot_md_sub_type_set)
    __swig_setmethods__["last_price"] = _ama.MDPledgeRepoXRepoSnapshot_last_price_set
    __swig_getmethods__["last_price"] = _ama.MDPledgeRepoXRepoSnapshot_last_price_get
    if _newclass:last_price = _swig_property(_ama.MDPledgeRepoXRepoSnapshot_last_price_get, _ama.MDPledgeRepoXRepoSnapshot_last_price_set)
    __swig_setmethods__["open_price"] = _ama.MDPledgeRepoXRepoSnapshot_open_price_set
    __swig_getmethods__["open_price"] = _ama.MDPledgeRepoXRepoSnapshot_open_price_get
    if _newclass:open_price = _swig_property(_ama.MDPledgeRepoXRepoSnapshot_open_price_get, _ama.MDPledgeRepoXRepoSnapshot_open_price_set)
    __swig_setmethods__["high_price"] = _ama.MDPledgeRepoXRepoSnapshot_high_price_set
    __swig_getmethods__["high_price"] = _ama.MDPledgeRepoXRepoSnapshot_high_price_get
    if _newclass:high_price = _swig_property(_ama.MDPledgeRepoXRepoSnapshot_high_price_get, _ama.MDPledgeRepoXRepoSnapshot_high_price_set)
    __swig_setmethods__["low_price"] = _ama.MDPledgeRepoXRepoSnapshot_low_price_set
    __swig_getmethods__["low_price"] = _ama.MDPledgeRepoXRepoSnapshot_low_price_get
    if _newclass:low_price = _swig_property(_ama.MDPledgeRepoXRepoSnapshot_low_price_get, _ama.MDPledgeRepoXRepoSnapshot_low_price_set)
    __swig_setmethods__["weighted_avg_price"] = _ama.MDPledgeRepoXRepoSnapshot_weighted_avg_price_set
    __swig_getmethods__["weighted_avg_price"] = _ama.MDPledgeRepoXRepoSnapshot_weighted_avg_price_get
    if _newclass:weighted_avg_price = _swig_property(_ama.MDPledgeRepoXRepoSnapshot_weighted_avg_price_get, _ama.MDPledgeRepoXRepoSnapshot_weighted_avg_price_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDPledgeRepoXRepoSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDPledgeRepoXRepoSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDPledgeRepoXRepoSnapshot_total_volume_trade_get, _ama.MDPledgeRepoXRepoSnapshot_total_volume_trade_set)
    __swig_setmethods__["num_trades"] = _ama.MDPledgeRepoXRepoSnapshot_num_trades_set
    __swig_getmethods__["num_trades"] = _ama.MDPledgeRepoXRepoSnapshot_num_trades_get
    if _newclass:num_trades = _swig_property(_ama.MDPledgeRepoXRepoSnapshot_num_trades_get, _ama.MDPledgeRepoXRepoSnapshot_num_trades_set)
    __swig_setmethods__["variety_category"] = _ama.MDPledgeRepoXRepoSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDPledgeRepoXRepoSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDPledgeRepoXRepoSnapshot_variety_category_get, _ama.MDPledgeRepoXRepoSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDPledgeRepoXRepoSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDPledgeRepoXRepoSnapshot
    __del__ = lambda self : None;
MDPledgeRepoXRepoSnapshot_swigregister = _ama.MDPledgeRepoXRepoSnapshot_swigregister
MDPledgeRepoXRepoSnapshot_swigregister(MDPledgeRepoXRepoSnapshot)

class MDCeditLoanTickExecution(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDCeditLoanTickExecution, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDCeditLoanTickExecution, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDCeditLoanTickExecution_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDCeditLoanTickExecution_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDCeditLoanTickExecution_market_type_get, _ama.MDCeditLoanTickExecution_market_type_set)
    __swig_setmethods__["msg_type"] = _ama.MDCeditLoanTickExecution_msg_type_set
    __swig_getmethods__["msg_type"] = _ama.MDCeditLoanTickExecution_msg_type_get
    if _newclass:msg_type = _swig_property(_ama.MDCeditLoanTickExecution_msg_type_get, _ama.MDCeditLoanTickExecution_msg_type_set)
    __swig_setmethods__["msg_seq_num"] = _ama.MDCeditLoanTickExecution_msg_seq_num_set
    __swig_getmethods__["msg_seq_num"] = _ama.MDCeditLoanTickExecution_msg_seq_num_get
    if _newclass:msg_seq_num = _swig_property(_ama.MDCeditLoanTickExecution_msg_seq_num_get, _ama.MDCeditLoanTickExecution_msg_seq_num_set)
    __swig_setmethods__["sending_time"] = _ama.MDCeditLoanTickExecution_sending_time_set
    __swig_getmethods__["sending_time"] = _ama.MDCeditLoanTickExecution_sending_time_get
    if _newclass:sending_time = _swig_property(_ama.MDCeditLoanTickExecution_sending_time_get, _ama.MDCeditLoanTickExecution_sending_time_set)
    __swig_setmethods__["security_code"] = _ama.MDCeditLoanTickExecution_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDCeditLoanTickExecution_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDCeditLoanTickExecution_security_code_get, _ama.MDCeditLoanTickExecution_security_code_set)
    __swig_setmethods__["symbol"] = _ama.MDCeditLoanTickExecution_symbol_set
    __swig_getmethods__["symbol"] = _ama.MDCeditLoanTickExecution_symbol_get
    if _newclass:symbol = _swig_property(_ama.MDCeditLoanTickExecution_symbol_get, _ama.MDCeditLoanTickExecution_symbol_set)
    __swig_setmethods__["orig_time"] = _ama.MDCeditLoanTickExecution_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDCeditLoanTickExecution_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDCeditLoanTickExecution_orig_time_get, _ama.MDCeditLoanTickExecution_orig_time_set)
    __swig_setmethods__["market_indicator"] = _ama.MDCeditLoanTickExecution_market_indicator_set
    __swig_getmethods__["market_indicator"] = _ama.MDCeditLoanTickExecution_market_indicator_get
    if _newclass:market_indicator = _swig_property(_ama.MDCeditLoanTickExecution_market_indicator_get, _ama.MDCeditLoanTickExecution_market_indicator_set)
    __swig_setmethods__["deal_number"] = _ama.MDCeditLoanTickExecution_deal_number_set
    __swig_getmethods__["deal_number"] = _ama.MDCeditLoanTickExecution_deal_number_get
    if _newclass:deal_number = _swig_property(_ama.MDCeditLoanTickExecution_deal_number_get, _ama.MDCeditLoanTickExecution_deal_number_set)
    __swig_setmethods__["exec_type"] = _ama.MDCeditLoanTickExecution_exec_type_set
    __swig_getmethods__["exec_type"] = _ama.MDCeditLoanTickExecution_exec_type_get
    if _newclass:exec_type = _swig_property(_ama.MDCeditLoanTickExecution_exec_type_get, _ama.MDCeditLoanTickExecution_exec_type_set)
    __swig_setmethods__["exec_price"] = _ama.MDCeditLoanTickExecution_exec_price_set
    __swig_getmethods__["exec_price"] = _ama.MDCeditLoanTickExecution_exec_price_get
    if _newclass:exec_price = _swig_property(_ama.MDCeditLoanTickExecution_exec_price_get, _ama.MDCeditLoanTickExecution_exec_price_set)
    __swig_setmethods__["exec_amount"] = _ama.MDCeditLoanTickExecution_exec_amount_set
    __swig_getmethods__["exec_amount"] = _ama.MDCeditLoanTickExecution_exec_amount_get
    if _newclass:exec_amount = _swig_property(_ama.MDCeditLoanTickExecution_exec_amount_get, _ama.MDCeditLoanTickExecution_exec_amount_set)
    __swig_setmethods__["variety_category"] = _ama.MDCeditLoanTickExecution_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDCeditLoanTickExecution_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDCeditLoanTickExecution_variety_category_get, _ama.MDCeditLoanTickExecution_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDCeditLoanTickExecution()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDCeditLoanTickExecution
    __del__ = lambda self : None;
MDCeditLoanTickExecution_swigregister = _ama.MDCeditLoanTickExecution_swigregister
MDCeditLoanTickExecution_swigregister(MDCeditLoanTickExecution)

class MDCeditLoanSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDCeditLoanSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDCeditLoanSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDCeditLoanSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDCeditLoanSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDCeditLoanSnapshot_market_type_get, _ama.MDCeditLoanSnapshot_market_type_set)
    __swig_setmethods__["msg_type"] = _ama.MDCeditLoanSnapshot_msg_type_set
    __swig_getmethods__["msg_type"] = _ama.MDCeditLoanSnapshot_msg_type_get
    if _newclass:msg_type = _swig_property(_ama.MDCeditLoanSnapshot_msg_type_get, _ama.MDCeditLoanSnapshot_msg_type_set)
    __swig_setmethods__["msg_seq_num"] = _ama.MDCeditLoanSnapshot_msg_seq_num_set
    __swig_getmethods__["msg_seq_num"] = _ama.MDCeditLoanSnapshot_msg_seq_num_get
    if _newclass:msg_seq_num = _swig_property(_ama.MDCeditLoanSnapshot_msg_seq_num_get, _ama.MDCeditLoanSnapshot_msg_seq_num_set)
    __swig_setmethods__["sending_time"] = _ama.MDCeditLoanSnapshot_sending_time_set
    __swig_getmethods__["sending_time"] = _ama.MDCeditLoanSnapshot_sending_time_get
    if _newclass:sending_time = _swig_property(_ama.MDCeditLoanSnapshot_sending_time_get, _ama.MDCeditLoanSnapshot_sending_time_set)
    __swig_setmethods__["security_code"] = _ama.MDCeditLoanSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDCeditLoanSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDCeditLoanSnapshot_security_code_get, _ama.MDCeditLoanSnapshot_security_code_set)
    __swig_setmethods__["symbol"] = _ama.MDCeditLoanSnapshot_symbol_set
    __swig_getmethods__["symbol"] = _ama.MDCeditLoanSnapshot_symbol_get
    if _newclass:symbol = _swig_property(_ama.MDCeditLoanSnapshot_symbol_get, _ama.MDCeditLoanSnapshot_symbol_set)
    __swig_setmethods__["orig_time"] = _ama.MDCeditLoanSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDCeditLoanSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDCeditLoanSnapshot_orig_time_get, _ama.MDCeditLoanSnapshot_orig_time_set)
    __swig_setmethods__["market_indicator"] = _ama.MDCeditLoanSnapshot_market_indicator_set
    __swig_getmethods__["market_indicator"] = _ama.MDCeditLoanSnapshot_market_indicator_get
    if _newclass:market_indicator = _swig_property(_ama.MDCeditLoanSnapshot_market_indicator_get, _ama.MDCeditLoanSnapshot_market_indicator_set)
    __swig_setmethods__["md_type"] = _ama.MDCeditLoanSnapshot_md_type_set
    __swig_getmethods__["md_type"] = _ama.MDCeditLoanSnapshot_md_type_get
    if _newclass:md_type = _swig_property(_ama.MDCeditLoanSnapshot_md_type_get, _ama.MDCeditLoanSnapshot_md_type_set)
    __swig_setmethods__["md_sub_type"] = _ama.MDCeditLoanSnapshot_md_sub_type_set
    __swig_getmethods__["md_sub_type"] = _ama.MDCeditLoanSnapshot_md_sub_type_get
    if _newclass:md_sub_type = _swig_property(_ama.MDCeditLoanSnapshot_md_sub_type_get, _ama.MDCeditLoanSnapshot_md_sub_type_set)
    __swig_setmethods__["avg_term"] = _ama.MDCeditLoanSnapshot_avg_term_set
    __swig_getmethods__["avg_term"] = _ama.MDCeditLoanSnapshot_avg_term_get
    if _newclass:avg_term = _swig_property(_ama.MDCeditLoanSnapshot_avg_term_get, _ama.MDCeditLoanSnapshot_avg_term_set)
    __swig_setmethods__["last_price"] = _ama.MDCeditLoanSnapshot_last_price_set
    __swig_getmethods__["last_price"] = _ama.MDCeditLoanSnapshot_last_price_get
    if _newclass:last_price = _swig_property(_ama.MDCeditLoanSnapshot_last_price_get, _ama.MDCeditLoanSnapshot_last_price_set)
    __swig_setmethods__["open_price"] = _ama.MDCeditLoanSnapshot_open_price_set
    __swig_getmethods__["open_price"] = _ama.MDCeditLoanSnapshot_open_price_get
    if _newclass:open_price = _swig_property(_ama.MDCeditLoanSnapshot_open_price_get, _ama.MDCeditLoanSnapshot_open_price_set)
    __swig_setmethods__["high_price"] = _ama.MDCeditLoanSnapshot_high_price_set
    __swig_getmethods__["high_price"] = _ama.MDCeditLoanSnapshot_high_price_get
    if _newclass:high_price = _swig_property(_ama.MDCeditLoanSnapshot_high_price_get, _ama.MDCeditLoanSnapshot_high_price_set)
    __swig_setmethods__["low_price"] = _ama.MDCeditLoanSnapshot_low_price_set
    __swig_getmethods__["low_price"] = _ama.MDCeditLoanSnapshot_low_price_get
    if _newclass:low_price = _swig_property(_ama.MDCeditLoanSnapshot_low_price_get, _ama.MDCeditLoanSnapshot_low_price_set)
    __swig_setmethods__["weighted_avg_price"] = _ama.MDCeditLoanSnapshot_weighted_avg_price_set
    __swig_getmethods__["weighted_avg_price"] = _ama.MDCeditLoanSnapshot_weighted_avg_price_get
    if _newclass:weighted_avg_price = _swig_property(_ama.MDCeditLoanSnapshot_weighted_avg_price_get, _ama.MDCeditLoanSnapshot_weighted_avg_price_set)
    __swig_setmethods__["pre_weighted_avg_price"] = _ama.MDCeditLoanSnapshot_pre_weighted_avg_price_set
    __swig_getmethods__["pre_weighted_avg_price"] = _ama.MDCeditLoanSnapshot_pre_weighted_avg_price_get
    if _newclass:pre_weighted_avg_price = _swig_property(_ama.MDCeditLoanSnapshot_pre_weighted_avg_price_get, _ama.MDCeditLoanSnapshot_pre_weighted_avg_price_set)
    __swig_setmethods__["close_price"] = _ama.MDCeditLoanSnapshot_close_price_set
    __swig_getmethods__["close_price"] = _ama.MDCeditLoanSnapshot_close_price_get
    if _newclass:close_price = _swig_property(_ama.MDCeditLoanSnapshot_close_price_get, _ama.MDCeditLoanSnapshot_close_price_set)
    __swig_setmethods__["pre_close_price"] = _ama.MDCeditLoanSnapshot_pre_close_price_set
    __swig_getmethods__["pre_close_price"] = _ama.MDCeditLoanSnapshot_pre_close_price_get
    if _newclass:pre_close_price = _swig_property(_ama.MDCeditLoanSnapshot_pre_close_price_get, _ama.MDCeditLoanSnapshot_pre_close_price_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDCeditLoanSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDCeditLoanSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDCeditLoanSnapshot_total_volume_trade_get, _ama.MDCeditLoanSnapshot_total_volume_trade_set)
    __swig_setmethods__["num_trades"] = _ama.MDCeditLoanSnapshot_num_trades_set
    __swig_getmethods__["num_trades"] = _ama.MDCeditLoanSnapshot_num_trades_get
    if _newclass:num_trades = _swig_property(_ama.MDCeditLoanSnapshot_num_trades_get, _ama.MDCeditLoanSnapshot_num_trades_set)
    __swig_setmethods__["variety_category"] = _ama.MDCeditLoanSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDCeditLoanSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDCeditLoanSnapshot_variety_category_get, _ama.MDCeditLoanSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDCeditLoanSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDCeditLoanSnapshot
    __del__ = lambda self : None;
MDCeditLoanSnapshot_swigregister = _ama.MDCeditLoanSnapshot_swigregister
MDCeditLoanSnapshot_swigregister(MDCeditLoanSnapshot)

class MDCeditLoanDepositSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDCeditLoanDepositSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDCeditLoanDepositSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDCeditLoanDepositSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDCeditLoanDepositSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDCeditLoanDepositSnapshot_market_type_get, _ama.MDCeditLoanDepositSnapshot_market_type_set)
    __swig_setmethods__["msg_type"] = _ama.MDCeditLoanDepositSnapshot_msg_type_set
    __swig_getmethods__["msg_type"] = _ama.MDCeditLoanDepositSnapshot_msg_type_get
    if _newclass:msg_type = _swig_property(_ama.MDCeditLoanDepositSnapshot_msg_type_get, _ama.MDCeditLoanDepositSnapshot_msg_type_set)
    __swig_setmethods__["msg_seq_num"] = _ama.MDCeditLoanDepositSnapshot_msg_seq_num_set
    __swig_getmethods__["msg_seq_num"] = _ama.MDCeditLoanDepositSnapshot_msg_seq_num_get
    if _newclass:msg_seq_num = _swig_property(_ama.MDCeditLoanDepositSnapshot_msg_seq_num_get, _ama.MDCeditLoanDepositSnapshot_msg_seq_num_set)
    __swig_setmethods__["sending_time"] = _ama.MDCeditLoanDepositSnapshot_sending_time_set
    __swig_getmethods__["sending_time"] = _ama.MDCeditLoanDepositSnapshot_sending_time_get
    if _newclass:sending_time = _swig_property(_ama.MDCeditLoanDepositSnapshot_sending_time_get, _ama.MDCeditLoanDepositSnapshot_sending_time_set)
    __swig_setmethods__["security_code"] = _ama.MDCeditLoanDepositSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDCeditLoanDepositSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDCeditLoanDepositSnapshot_security_code_get, _ama.MDCeditLoanDepositSnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDCeditLoanDepositSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDCeditLoanDepositSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDCeditLoanDepositSnapshot_orig_time_get, _ama.MDCeditLoanDepositSnapshot_orig_time_set)
    __swig_setmethods__["market_indicator"] = _ama.MDCeditLoanDepositSnapshot_market_indicator_set
    __swig_getmethods__["market_indicator"] = _ama.MDCeditLoanDepositSnapshot_market_indicator_get
    if _newclass:market_indicator = _swig_property(_ama.MDCeditLoanDepositSnapshot_market_indicator_get, _ama.MDCeditLoanDepositSnapshot_market_indicator_set)
    __swig_setmethods__["md_type"] = _ama.MDCeditLoanDepositSnapshot_md_type_set
    __swig_getmethods__["md_type"] = _ama.MDCeditLoanDepositSnapshot_md_type_get
    if _newclass:md_type = _swig_property(_ama.MDCeditLoanDepositSnapshot_md_type_get, _ama.MDCeditLoanDepositSnapshot_md_type_set)
    __swig_setmethods__["md_sub_type"] = _ama.MDCeditLoanDepositSnapshot_md_sub_type_set
    __swig_getmethods__["md_sub_type"] = _ama.MDCeditLoanDepositSnapshot_md_sub_type_get
    if _newclass:md_sub_type = _swig_property(_ama.MDCeditLoanDepositSnapshot_md_sub_type_get, _ama.MDCeditLoanDepositSnapshot_md_sub_type_set)
    __swig_setmethods__["avg_term"] = _ama.MDCeditLoanDepositSnapshot_avg_term_set
    __swig_getmethods__["avg_term"] = _ama.MDCeditLoanDepositSnapshot_avg_term_get
    if _newclass:avg_term = _swig_property(_ama.MDCeditLoanDepositSnapshot_avg_term_get, _ama.MDCeditLoanDepositSnapshot_avg_term_set)
    __swig_setmethods__["last_price"] = _ama.MDCeditLoanDepositSnapshot_last_price_set
    __swig_getmethods__["last_price"] = _ama.MDCeditLoanDepositSnapshot_last_price_get
    if _newclass:last_price = _swig_property(_ama.MDCeditLoanDepositSnapshot_last_price_get, _ama.MDCeditLoanDepositSnapshot_last_price_set)
    __swig_setmethods__["open_price"] = _ama.MDCeditLoanDepositSnapshot_open_price_set
    __swig_getmethods__["open_price"] = _ama.MDCeditLoanDepositSnapshot_open_price_get
    if _newclass:open_price = _swig_property(_ama.MDCeditLoanDepositSnapshot_open_price_get, _ama.MDCeditLoanDepositSnapshot_open_price_set)
    __swig_setmethods__["high_price"] = _ama.MDCeditLoanDepositSnapshot_high_price_set
    __swig_getmethods__["high_price"] = _ama.MDCeditLoanDepositSnapshot_high_price_get
    if _newclass:high_price = _swig_property(_ama.MDCeditLoanDepositSnapshot_high_price_get, _ama.MDCeditLoanDepositSnapshot_high_price_set)
    __swig_setmethods__["low_price"] = _ama.MDCeditLoanDepositSnapshot_low_price_set
    __swig_getmethods__["low_price"] = _ama.MDCeditLoanDepositSnapshot_low_price_get
    if _newclass:low_price = _swig_property(_ama.MDCeditLoanDepositSnapshot_low_price_get, _ama.MDCeditLoanDepositSnapshot_low_price_set)
    __swig_setmethods__["weighted_avg_price"] = _ama.MDCeditLoanDepositSnapshot_weighted_avg_price_set
    __swig_getmethods__["weighted_avg_price"] = _ama.MDCeditLoanDepositSnapshot_weighted_avg_price_get
    if _newclass:weighted_avg_price = _swig_property(_ama.MDCeditLoanDepositSnapshot_weighted_avg_price_get, _ama.MDCeditLoanDepositSnapshot_weighted_avg_price_set)
    __swig_setmethods__["bond_weighted_avg_price"] = _ama.MDCeditLoanDepositSnapshot_bond_weighted_avg_price_set
    __swig_getmethods__["bond_weighted_avg_price"] = _ama.MDCeditLoanDepositSnapshot_bond_weighted_avg_price_get
    if _newclass:bond_weighted_avg_price = _swig_property(_ama.MDCeditLoanDepositSnapshot_bond_weighted_avg_price_get, _ama.MDCeditLoanDepositSnapshot_bond_weighted_avg_price_set)
    __swig_setmethods__["pre_weighted_avg_price"] = _ama.MDCeditLoanDepositSnapshot_pre_weighted_avg_price_set
    __swig_getmethods__["pre_weighted_avg_price"] = _ama.MDCeditLoanDepositSnapshot_pre_weighted_avg_price_get
    if _newclass:pre_weighted_avg_price = _swig_property(_ama.MDCeditLoanDepositSnapshot_pre_weighted_avg_price_get, _ama.MDCeditLoanDepositSnapshot_pre_weighted_avg_price_set)
    __swig_setmethods__["close_price"] = _ama.MDCeditLoanDepositSnapshot_close_price_set
    __swig_getmethods__["close_price"] = _ama.MDCeditLoanDepositSnapshot_close_price_get
    if _newclass:close_price = _swig_property(_ama.MDCeditLoanDepositSnapshot_close_price_get, _ama.MDCeditLoanDepositSnapshot_close_price_set)
    __swig_setmethods__["pre_close_price"] = _ama.MDCeditLoanDepositSnapshot_pre_close_price_set
    __swig_getmethods__["pre_close_price"] = _ama.MDCeditLoanDepositSnapshot_pre_close_price_get
    if _newclass:pre_close_price = _swig_property(_ama.MDCeditLoanDepositSnapshot_pre_close_price_get, _ama.MDCeditLoanDepositSnapshot_pre_close_price_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDCeditLoanDepositSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDCeditLoanDepositSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDCeditLoanDepositSnapshot_total_volume_trade_get, _ama.MDCeditLoanDepositSnapshot_total_volume_trade_set)
    __swig_setmethods__["num_trades"] = _ama.MDCeditLoanDepositSnapshot_num_trades_set
    __swig_getmethods__["num_trades"] = _ama.MDCeditLoanDepositSnapshot_num_trades_get
    if _newclass:num_trades = _swig_property(_ama.MDCeditLoanDepositSnapshot_num_trades_get, _ama.MDCeditLoanDepositSnapshot_num_trades_set)
    __swig_setmethods__["variety_category"] = _ama.MDCeditLoanDepositSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDCeditLoanDepositSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDCeditLoanDepositSnapshot_variety_category_get, _ama.MDCeditLoanDepositSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDCeditLoanDepositSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDCeditLoanDepositSnapshot
    __del__ = lambda self : None;
MDCeditLoanDepositSnapshot_swigregister = _ama.MDCeditLoanDepositSnapshot_swigregister
MDCeditLoanDepositSnapshot_swigregister(MDCeditLoanDepositSnapshot)

class MDSwapFixedFloatTickExecution(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDSwapFixedFloatTickExecution, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDSwapFixedFloatTickExecution, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDSwapFixedFloatTickExecution_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDSwapFixedFloatTickExecution_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDSwapFixedFloatTickExecution_market_type_get, _ama.MDSwapFixedFloatTickExecution_market_type_set)
    __swig_setmethods__["msg_type"] = _ama.MDSwapFixedFloatTickExecution_msg_type_set
    __swig_getmethods__["msg_type"] = _ama.MDSwapFixedFloatTickExecution_msg_type_get
    if _newclass:msg_type = _swig_property(_ama.MDSwapFixedFloatTickExecution_msg_type_get, _ama.MDSwapFixedFloatTickExecution_msg_type_set)
    __swig_setmethods__["msg_seq_num"] = _ama.MDSwapFixedFloatTickExecution_msg_seq_num_set
    __swig_getmethods__["msg_seq_num"] = _ama.MDSwapFixedFloatTickExecution_msg_seq_num_get
    if _newclass:msg_seq_num = _swig_property(_ama.MDSwapFixedFloatTickExecution_msg_seq_num_get, _ama.MDSwapFixedFloatTickExecution_msg_seq_num_set)
    __swig_setmethods__["sending_time"] = _ama.MDSwapFixedFloatTickExecution_sending_time_set
    __swig_getmethods__["sending_time"] = _ama.MDSwapFixedFloatTickExecution_sending_time_get
    if _newclass:sending_time = _swig_property(_ama.MDSwapFixedFloatTickExecution_sending_time_get, _ama.MDSwapFixedFloatTickExecution_sending_time_set)
    __swig_setmethods__["security_code"] = _ama.MDSwapFixedFloatTickExecution_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDSwapFixedFloatTickExecution_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDSwapFixedFloatTickExecution_security_code_get, _ama.MDSwapFixedFloatTickExecution_security_code_set)
    __swig_setmethods__["symbol"] = _ama.MDSwapFixedFloatTickExecution_symbol_set
    __swig_getmethods__["symbol"] = _ama.MDSwapFixedFloatTickExecution_symbol_get
    if _newclass:symbol = _swig_property(_ama.MDSwapFixedFloatTickExecution_symbol_get, _ama.MDSwapFixedFloatTickExecution_symbol_set)
    __swig_setmethods__["orig_time"] = _ama.MDSwapFixedFloatTickExecution_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDSwapFixedFloatTickExecution_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDSwapFixedFloatTickExecution_orig_time_get, _ama.MDSwapFixedFloatTickExecution_orig_time_set)
    __swig_setmethods__["market_indicator"] = _ama.MDSwapFixedFloatTickExecution_market_indicator_set
    __swig_getmethods__["market_indicator"] = _ama.MDSwapFixedFloatTickExecution_market_indicator_get
    if _newclass:market_indicator = _swig_property(_ama.MDSwapFixedFloatTickExecution_market_indicator_get, _ama.MDSwapFixedFloatTickExecution_market_indicator_set)
    __swig_setmethods__["deal_number"] = _ama.MDSwapFixedFloatTickExecution_deal_number_set
    __swig_getmethods__["deal_number"] = _ama.MDSwapFixedFloatTickExecution_deal_number_get
    if _newclass:deal_number = _swig_property(_ama.MDSwapFixedFloatTickExecution_deal_number_get, _ama.MDSwapFixedFloatTickExecution_deal_number_set)
    __swig_setmethods__["exec_type"] = _ama.MDSwapFixedFloatTickExecution_exec_type_set
    __swig_getmethods__["exec_type"] = _ama.MDSwapFixedFloatTickExecution_exec_type_get
    if _newclass:exec_type = _swig_property(_ama.MDSwapFixedFloatTickExecution_exec_type_get, _ama.MDSwapFixedFloatTickExecution_exec_type_set)
    __swig_setmethods__["side"] = _ama.MDSwapFixedFloatTickExecution_side_set
    __swig_getmethods__["side"] = _ama.MDSwapFixedFloatTickExecution_side_get
    if _newclass:side = _swig_property(_ama.MDSwapFixedFloatTickExecution_side_get, _ama.MDSwapFixedFloatTickExecution_side_set)
    __swig_setmethods__["price"] = _ama.MDSwapFixedFloatTickExecution_price_set
    __swig_getmethods__["price"] = _ama.MDSwapFixedFloatTickExecution_price_get
    if _newclass:price = _swig_property(_ama.MDSwapFixedFloatTickExecution_price_get, _ama.MDSwapFixedFloatTickExecution_price_set)
    __swig_setmethods__["fixed_rate"] = _ama.MDSwapFixedFloatTickExecution_fixed_rate_set
    __swig_getmethods__["fixed_rate"] = _ama.MDSwapFixedFloatTickExecution_fixed_rate_get
    if _newclass:fixed_rate = _swig_property(_ama.MDSwapFixedFloatTickExecution_fixed_rate_get, _ama.MDSwapFixedFloatTickExecution_fixed_rate_set)
    __swig_setmethods__["benchmark_curve_name"] = _ama.MDSwapFixedFloatTickExecution_benchmark_curve_name_set
    __swig_getmethods__["benchmark_curve_name"] = _ama.MDSwapFixedFloatTickExecution_benchmark_curve_name_get
    if _newclass:benchmark_curve_name = _swig_property(_ama.MDSwapFixedFloatTickExecution_benchmark_curve_name_get, _ama.MDSwapFixedFloatTickExecution_benchmark_curve_name_set)
    __swig_setmethods__["interest_rate_spread"] = _ama.MDSwapFixedFloatTickExecution_interest_rate_spread_set
    __swig_getmethods__["interest_rate_spread"] = _ama.MDSwapFixedFloatTickExecution_interest_rate_spread_get
    if _newclass:interest_rate_spread = _swig_property(_ama.MDSwapFixedFloatTickExecution_interest_rate_spread_get, _ama.MDSwapFixedFloatTickExecution_interest_rate_spread_set)
    __swig_setmethods__["trade_limit_days"] = _ama.MDSwapFixedFloatTickExecution_trade_limit_days_set
    __swig_getmethods__["trade_limit_days"] = _ama.MDSwapFixedFloatTickExecution_trade_limit_days_get
    if _newclass:trade_limit_days = _swig_property(_ama.MDSwapFixedFloatTickExecution_trade_limit_days_get, _ama.MDSwapFixedFloatTickExecution_trade_limit_days_set)
    __swig_setmethods__["variety_category"] = _ama.MDSwapFixedFloatTickExecution_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDSwapFixedFloatTickExecution_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDSwapFixedFloatTickExecution_variety_category_get, _ama.MDSwapFixedFloatTickExecution_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDSwapFixedFloatTickExecution()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDSwapFixedFloatTickExecution
    __del__ = lambda self : None;
MDSwapFixedFloatTickExecution_swigregister = _ama.MDSwapFixedFloatTickExecution_swigregister
MDSwapFixedFloatTickExecution_swigregister(MDSwapFixedFloatTickExecution)

class MDSwapFixedFloatSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDSwapFixedFloatSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDSwapFixedFloatSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDSwapFixedFloatSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDSwapFixedFloatSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDSwapFixedFloatSnapshot_market_type_get, _ama.MDSwapFixedFloatSnapshot_market_type_set)
    __swig_setmethods__["msg_type"] = _ama.MDSwapFixedFloatSnapshot_msg_type_set
    __swig_getmethods__["msg_type"] = _ama.MDSwapFixedFloatSnapshot_msg_type_get
    if _newclass:msg_type = _swig_property(_ama.MDSwapFixedFloatSnapshot_msg_type_get, _ama.MDSwapFixedFloatSnapshot_msg_type_set)
    __swig_setmethods__["msg_seq_num"] = _ama.MDSwapFixedFloatSnapshot_msg_seq_num_set
    __swig_getmethods__["msg_seq_num"] = _ama.MDSwapFixedFloatSnapshot_msg_seq_num_get
    if _newclass:msg_seq_num = _swig_property(_ama.MDSwapFixedFloatSnapshot_msg_seq_num_get, _ama.MDSwapFixedFloatSnapshot_msg_seq_num_set)
    __swig_setmethods__["sending_time"] = _ama.MDSwapFixedFloatSnapshot_sending_time_set
    __swig_getmethods__["sending_time"] = _ama.MDSwapFixedFloatSnapshot_sending_time_get
    if _newclass:sending_time = _swig_property(_ama.MDSwapFixedFloatSnapshot_sending_time_get, _ama.MDSwapFixedFloatSnapshot_sending_time_set)
    __swig_setmethods__["security_code"] = _ama.MDSwapFixedFloatSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDSwapFixedFloatSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDSwapFixedFloatSnapshot_security_code_get, _ama.MDSwapFixedFloatSnapshot_security_code_set)
    __swig_setmethods__["symbol"] = _ama.MDSwapFixedFloatSnapshot_symbol_set
    __swig_getmethods__["symbol"] = _ama.MDSwapFixedFloatSnapshot_symbol_get
    if _newclass:symbol = _swig_property(_ama.MDSwapFixedFloatSnapshot_symbol_get, _ama.MDSwapFixedFloatSnapshot_symbol_set)
    __swig_setmethods__["orig_time"] = _ama.MDSwapFixedFloatSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDSwapFixedFloatSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDSwapFixedFloatSnapshot_orig_time_get, _ama.MDSwapFixedFloatSnapshot_orig_time_set)
    __swig_setmethods__["market_indicator"] = _ama.MDSwapFixedFloatSnapshot_market_indicator_set
    __swig_getmethods__["market_indicator"] = _ama.MDSwapFixedFloatSnapshot_market_indicator_get
    if _newclass:market_indicator = _swig_property(_ama.MDSwapFixedFloatSnapshot_market_indicator_get, _ama.MDSwapFixedFloatSnapshot_market_indicator_set)
    __swig_setmethods__["md_type"] = _ama.MDSwapFixedFloatSnapshot_md_type_set
    __swig_getmethods__["md_type"] = _ama.MDSwapFixedFloatSnapshot_md_type_get
    if _newclass:md_type = _swig_property(_ama.MDSwapFixedFloatSnapshot_md_type_get, _ama.MDSwapFixedFloatSnapshot_md_type_set)
    __swig_setmethods__["md_sub_type"] = _ama.MDSwapFixedFloatSnapshot_md_sub_type_set
    __swig_getmethods__["md_sub_type"] = _ama.MDSwapFixedFloatSnapshot_md_sub_type_get
    if _newclass:md_sub_type = _swig_property(_ama.MDSwapFixedFloatSnapshot_md_sub_type_get, _ama.MDSwapFixedFloatSnapshot_md_sub_type_set)
    __swig_setmethods__["benchmark_curve_name"] = _ama.MDSwapFixedFloatSnapshot_benchmark_curve_name_set
    __swig_getmethods__["benchmark_curve_name"] = _ama.MDSwapFixedFloatSnapshot_benchmark_curve_name_get
    if _newclass:benchmark_curve_name = _swig_property(_ama.MDSwapFixedFloatSnapshot_benchmark_curve_name_get, _ama.MDSwapFixedFloatSnapshot_benchmark_curve_name_set)
    __swig_setmethods__["trade_limit_days"] = _ama.MDSwapFixedFloatSnapshot_trade_limit_days_set
    __swig_getmethods__["trade_limit_days"] = _ama.MDSwapFixedFloatSnapshot_trade_limit_days_get
    if _newclass:trade_limit_days = _swig_property(_ama.MDSwapFixedFloatSnapshot_trade_limit_days_get, _ama.MDSwapFixedFloatSnapshot_trade_limit_days_set)
    __swig_setmethods__["last_price"] = _ama.MDSwapFixedFloatSnapshot_last_price_set
    __swig_getmethods__["last_price"] = _ama.MDSwapFixedFloatSnapshot_last_price_get
    if _newclass:last_price = _swig_property(_ama.MDSwapFixedFloatSnapshot_last_price_get, _ama.MDSwapFixedFloatSnapshot_last_price_set)
    __swig_setmethods__["open_price"] = _ama.MDSwapFixedFloatSnapshot_open_price_set
    __swig_getmethods__["open_price"] = _ama.MDSwapFixedFloatSnapshot_open_price_get
    if _newclass:open_price = _swig_property(_ama.MDSwapFixedFloatSnapshot_open_price_get, _ama.MDSwapFixedFloatSnapshot_open_price_set)
    __swig_setmethods__["high_price"] = _ama.MDSwapFixedFloatSnapshot_high_price_set
    __swig_getmethods__["high_price"] = _ama.MDSwapFixedFloatSnapshot_high_price_get
    if _newclass:high_price = _swig_property(_ama.MDSwapFixedFloatSnapshot_high_price_get, _ama.MDSwapFixedFloatSnapshot_high_price_set)
    __swig_setmethods__["low_price"] = _ama.MDSwapFixedFloatSnapshot_low_price_set
    __swig_getmethods__["low_price"] = _ama.MDSwapFixedFloatSnapshot_low_price_get
    if _newclass:low_price = _swig_property(_ama.MDSwapFixedFloatSnapshot_low_price_get, _ama.MDSwapFixedFloatSnapshot_low_price_set)
    __swig_setmethods__["weighted_avg_price"] = _ama.MDSwapFixedFloatSnapshot_weighted_avg_price_set
    __swig_getmethods__["weighted_avg_price"] = _ama.MDSwapFixedFloatSnapshot_weighted_avg_price_get
    if _newclass:weighted_avg_price = _swig_property(_ama.MDSwapFixedFloatSnapshot_weighted_avg_price_get, _ama.MDSwapFixedFloatSnapshot_weighted_avg_price_set)
    __swig_setmethods__["pre_weighted_avg_price"] = _ama.MDSwapFixedFloatSnapshot_pre_weighted_avg_price_set
    __swig_getmethods__["pre_weighted_avg_price"] = _ama.MDSwapFixedFloatSnapshot_pre_weighted_avg_price_get
    if _newclass:pre_weighted_avg_price = _swig_property(_ama.MDSwapFixedFloatSnapshot_pre_weighted_avg_price_get, _ama.MDSwapFixedFloatSnapshot_pre_weighted_avg_price_set)
    __swig_setmethods__["close_price"] = _ama.MDSwapFixedFloatSnapshot_close_price_set
    __swig_getmethods__["close_price"] = _ama.MDSwapFixedFloatSnapshot_close_price_get
    if _newclass:close_price = _swig_property(_ama.MDSwapFixedFloatSnapshot_close_price_get, _ama.MDSwapFixedFloatSnapshot_close_price_set)
    __swig_setmethods__["pre_close_price"] = _ama.MDSwapFixedFloatSnapshot_pre_close_price_set
    __swig_getmethods__["pre_close_price"] = _ama.MDSwapFixedFloatSnapshot_pre_close_price_get
    if _newclass:pre_close_price = _swig_property(_ama.MDSwapFixedFloatSnapshot_pre_close_price_get, _ama.MDSwapFixedFloatSnapshot_pre_close_price_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDSwapFixedFloatSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDSwapFixedFloatSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDSwapFixedFloatSnapshot_total_volume_trade_get, _ama.MDSwapFixedFloatSnapshot_total_volume_trade_set)
    __swig_setmethods__["variety_category"] = _ama.MDSwapFixedFloatSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDSwapFixedFloatSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDSwapFixedFloatSnapshot_variety_category_get, _ama.MDSwapFixedFloatSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDSwapFixedFloatSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDSwapFixedFloatSnapshot
    __del__ = lambda self : None;
MDSwapFixedFloatSnapshot_swigregister = _ama.MDSwapFixedFloatSnapshot_swigregister
MDSwapFixedFloatSnapshot_swigregister(MDSwapFixedFloatSnapshot)

class MDSwapXSwapSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDSwapXSwapSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDSwapXSwapSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDSwapXSwapSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDSwapXSwapSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDSwapXSwapSnapshot_market_type_get, _ama.MDSwapXSwapSnapshot_market_type_set)
    __swig_setmethods__["msg_type"] = _ama.MDSwapXSwapSnapshot_msg_type_set
    __swig_getmethods__["msg_type"] = _ama.MDSwapXSwapSnapshot_msg_type_get
    if _newclass:msg_type = _swig_property(_ama.MDSwapXSwapSnapshot_msg_type_get, _ama.MDSwapXSwapSnapshot_msg_type_set)
    __swig_setmethods__["msg_seq_num"] = _ama.MDSwapXSwapSnapshot_msg_seq_num_set
    __swig_getmethods__["msg_seq_num"] = _ama.MDSwapXSwapSnapshot_msg_seq_num_get
    if _newclass:msg_seq_num = _swig_property(_ama.MDSwapXSwapSnapshot_msg_seq_num_get, _ama.MDSwapXSwapSnapshot_msg_seq_num_set)
    __swig_setmethods__["sending_time"] = _ama.MDSwapXSwapSnapshot_sending_time_set
    __swig_getmethods__["sending_time"] = _ama.MDSwapXSwapSnapshot_sending_time_get
    if _newclass:sending_time = _swig_property(_ama.MDSwapXSwapSnapshot_sending_time_get, _ama.MDSwapXSwapSnapshot_sending_time_set)
    __swig_setmethods__["security_code"] = _ama.MDSwapXSwapSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDSwapXSwapSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDSwapXSwapSnapshot_security_code_get, _ama.MDSwapXSwapSnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDSwapXSwapSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDSwapXSwapSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDSwapXSwapSnapshot_orig_time_get, _ama.MDSwapXSwapSnapshot_orig_time_set)
    __swig_setmethods__["market_indicator"] = _ama.MDSwapXSwapSnapshot_market_indicator_set
    __swig_getmethods__["market_indicator"] = _ama.MDSwapXSwapSnapshot_market_indicator_get
    if _newclass:market_indicator = _swig_property(_ama.MDSwapXSwapSnapshot_market_indicator_get, _ama.MDSwapXSwapSnapshot_market_indicator_set)
    __swig_setmethods__["trade_method"] = _ama.MDSwapXSwapSnapshot_trade_method_set
    __swig_getmethods__["trade_method"] = _ama.MDSwapXSwapSnapshot_trade_method_get
    if _newclass:trade_method = _swig_property(_ama.MDSwapXSwapSnapshot_trade_method_get, _ama.MDSwapXSwapSnapshot_trade_method_set)
    __swig_setmethods__["md_type"] = _ama.MDSwapXSwapSnapshot_md_type_set
    __swig_getmethods__["md_type"] = _ama.MDSwapXSwapSnapshot_md_type_get
    if _newclass:md_type = _swig_property(_ama.MDSwapXSwapSnapshot_md_type_get, _ama.MDSwapXSwapSnapshot_md_type_set)
    __swig_setmethods__["md_sub_type"] = _ama.MDSwapXSwapSnapshot_md_sub_type_set
    __swig_getmethods__["md_sub_type"] = _ama.MDSwapXSwapSnapshot_md_sub_type_get
    if _newclass:md_sub_type = _swig_property(_ama.MDSwapXSwapSnapshot_md_sub_type_get, _ama.MDSwapXSwapSnapshot_md_sub_type_set)
    __swig_setmethods__["last_price"] = _ama.MDSwapXSwapSnapshot_last_price_set
    __swig_getmethods__["last_price"] = _ama.MDSwapXSwapSnapshot_last_price_get
    if _newclass:last_price = _swig_property(_ama.MDSwapXSwapSnapshot_last_price_get, _ama.MDSwapXSwapSnapshot_last_price_set)
    __swig_setmethods__["open_price"] = _ama.MDSwapXSwapSnapshot_open_price_set
    __swig_getmethods__["open_price"] = _ama.MDSwapXSwapSnapshot_open_price_get
    if _newclass:open_price = _swig_property(_ama.MDSwapXSwapSnapshot_open_price_get, _ama.MDSwapXSwapSnapshot_open_price_set)
    __swig_setmethods__["high_price"] = _ama.MDSwapXSwapSnapshot_high_price_set
    __swig_getmethods__["high_price"] = _ama.MDSwapXSwapSnapshot_high_price_get
    if _newclass:high_price = _swig_property(_ama.MDSwapXSwapSnapshot_high_price_get, _ama.MDSwapXSwapSnapshot_high_price_set)
    __swig_setmethods__["low_price"] = _ama.MDSwapXSwapSnapshot_low_price_set
    __swig_getmethods__["low_price"] = _ama.MDSwapXSwapSnapshot_low_price_get
    if _newclass:low_price = _swig_property(_ama.MDSwapXSwapSnapshot_low_price_get, _ama.MDSwapXSwapSnapshot_low_price_set)
    __swig_setmethods__["ref_price"] = _ama.MDSwapXSwapSnapshot_ref_price_set
    __swig_getmethods__["ref_price"] = _ama.MDSwapXSwapSnapshot_ref_price_get
    if _newclass:ref_price = _swig_property(_ama.MDSwapXSwapSnapshot_ref_price_get, _ama.MDSwapXSwapSnapshot_ref_price_set)
    __swig_setmethods__["volume_trade"] = _ama.MDSwapXSwapSnapshot_volume_trade_set
    __swig_getmethods__["volume_trade"] = _ama.MDSwapXSwapSnapshot_volume_trade_get
    if _newclass:volume_trade = _swig_property(_ama.MDSwapXSwapSnapshot_volume_trade_get, _ama.MDSwapXSwapSnapshot_volume_trade_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDSwapXSwapSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDSwapXSwapSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDSwapXSwapSnapshot_total_volume_trade_get, _ama.MDSwapXSwapSnapshot_total_volume_trade_set)
    __swig_setmethods__["variety_category"] = _ama.MDSwapXSwapSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDSwapXSwapSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDSwapXSwapSnapshot_variety_category_get, _ama.MDSwapXSwapSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDSwapXSwapSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDSwapXSwapSnapshot
    __del__ = lambda self : None;
MDSwapXSwapSnapshot_swigregister = _ama.MDSwapXSwapSnapshot_swigregister
MDSwapXSwapSnapshot_swigregister(MDSwapXSwapSnapshot)

class MDSwapXSwapBestOfferSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDSwapXSwapBestOfferSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDSwapXSwapBestOfferSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDSwapXSwapBestOfferSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDSwapXSwapBestOfferSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDSwapXSwapBestOfferSnapshot_market_type_get, _ama.MDSwapXSwapBestOfferSnapshot_market_type_set)
    __swig_setmethods__["msg_type"] = _ama.MDSwapXSwapBestOfferSnapshot_msg_type_set
    __swig_getmethods__["msg_type"] = _ama.MDSwapXSwapBestOfferSnapshot_msg_type_get
    if _newclass:msg_type = _swig_property(_ama.MDSwapXSwapBestOfferSnapshot_msg_type_get, _ama.MDSwapXSwapBestOfferSnapshot_msg_type_set)
    __swig_setmethods__["msg_seq_num"] = _ama.MDSwapXSwapBestOfferSnapshot_msg_seq_num_set
    __swig_getmethods__["msg_seq_num"] = _ama.MDSwapXSwapBestOfferSnapshot_msg_seq_num_get
    if _newclass:msg_seq_num = _swig_property(_ama.MDSwapXSwapBestOfferSnapshot_msg_seq_num_get, _ama.MDSwapXSwapBestOfferSnapshot_msg_seq_num_set)
    __swig_setmethods__["sending_time"] = _ama.MDSwapXSwapBestOfferSnapshot_sending_time_set
    __swig_getmethods__["sending_time"] = _ama.MDSwapXSwapBestOfferSnapshot_sending_time_get
    if _newclass:sending_time = _swig_property(_ama.MDSwapXSwapBestOfferSnapshot_sending_time_get, _ama.MDSwapXSwapBestOfferSnapshot_sending_time_set)
    __swig_setmethods__["security_code"] = _ama.MDSwapXSwapBestOfferSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDSwapXSwapBestOfferSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDSwapXSwapBestOfferSnapshot_security_code_get, _ama.MDSwapXSwapBestOfferSnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDSwapXSwapBestOfferSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDSwapXSwapBestOfferSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDSwapXSwapBestOfferSnapshot_orig_time_get, _ama.MDSwapXSwapBestOfferSnapshot_orig_time_set)
    __swig_setmethods__["market_indicator"] = _ama.MDSwapXSwapBestOfferSnapshot_market_indicator_set
    __swig_getmethods__["market_indicator"] = _ama.MDSwapXSwapBestOfferSnapshot_market_indicator_get
    if _newclass:market_indicator = _swig_property(_ama.MDSwapXSwapBestOfferSnapshot_market_indicator_get, _ama.MDSwapXSwapBestOfferSnapshot_market_indicator_set)
    __swig_setmethods__["trade_method"] = _ama.MDSwapXSwapBestOfferSnapshot_trade_method_set
    __swig_getmethods__["trade_method"] = _ama.MDSwapXSwapBestOfferSnapshot_trade_method_get
    if _newclass:trade_method = _swig_property(_ama.MDSwapXSwapBestOfferSnapshot_trade_method_get, _ama.MDSwapXSwapBestOfferSnapshot_trade_method_set)
    __swig_setmethods__["md_type"] = _ama.MDSwapXSwapBestOfferSnapshot_md_type_set
    __swig_getmethods__["md_type"] = _ama.MDSwapXSwapBestOfferSnapshot_md_type_get
    if _newclass:md_type = _swig_property(_ama.MDSwapXSwapBestOfferSnapshot_md_type_get, _ama.MDSwapXSwapBestOfferSnapshot_md_type_set)
    __swig_setmethods__["md_sub_type"] = _ama.MDSwapXSwapBestOfferSnapshot_md_sub_type_set
    __swig_getmethods__["md_sub_type"] = _ama.MDSwapXSwapBestOfferSnapshot_md_sub_type_get
    if _newclass:md_sub_type = _swig_property(_ama.MDSwapXSwapBestOfferSnapshot_md_sub_type_get, _ama.MDSwapXSwapBestOfferSnapshot_md_sub_type_set)
    __swig_setmethods__["bid_price"] = _ama.MDSwapXSwapBestOfferSnapshot_bid_price_set
    __swig_getmethods__["bid_price"] = _ama.MDSwapXSwapBestOfferSnapshot_bid_price_get
    if _newclass:bid_price = _swig_property(_ama.MDSwapXSwapBestOfferSnapshot_bid_price_get, _ama.MDSwapXSwapBestOfferSnapshot_bid_price_set)
    __swig_setmethods__["bid_volume"] = _ama.MDSwapXSwapBestOfferSnapshot_bid_volume_set
    __swig_getmethods__["bid_volume"] = _ama.MDSwapXSwapBestOfferSnapshot_bid_volume_get
    if _newclass:bid_volume = _swig_property(_ama.MDSwapXSwapBestOfferSnapshot_bid_volume_get, _ama.MDSwapXSwapBestOfferSnapshot_bid_volume_set)
    __swig_setmethods__["offer_price"] = _ama.MDSwapXSwapBestOfferSnapshot_offer_price_set
    __swig_getmethods__["offer_price"] = _ama.MDSwapXSwapBestOfferSnapshot_offer_price_get
    if _newclass:offer_price = _swig_property(_ama.MDSwapXSwapBestOfferSnapshot_offer_price_get, _ama.MDSwapXSwapBestOfferSnapshot_offer_price_set)
    __swig_setmethods__["offer_volume"] = _ama.MDSwapXSwapBestOfferSnapshot_offer_volume_set
    __swig_getmethods__["offer_volume"] = _ama.MDSwapXSwapBestOfferSnapshot_offer_volume_get
    if _newclass:offer_volume = _swig_property(_ama.MDSwapXSwapBestOfferSnapshot_offer_volume_get, _ama.MDSwapXSwapBestOfferSnapshot_offer_volume_set)
    __swig_setmethods__["variety_category"] = _ama.MDSwapXSwapBestOfferSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDSwapXSwapBestOfferSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDSwapXSwapBestOfferSnapshot_variety_category_get, _ama.MDSwapXSwapBestOfferSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDSwapXSwapBestOfferSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDSwapXSwapBestOfferSnapshot
    __del__ = lambda self : None;
MDSwapXSwapBestOfferSnapshot_swigregister = _ama.MDSwapXSwapBestOfferSnapshot_swigregister
MDSwapXSwapBestOfferSnapshot_swigregister(MDSwapXSwapBestOfferSnapshot)

class MDBondLoanTickExecution(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDBondLoanTickExecution, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDBondLoanTickExecution, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDBondLoanTickExecution_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDBondLoanTickExecution_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDBondLoanTickExecution_market_type_get, _ama.MDBondLoanTickExecution_market_type_set)
    __swig_setmethods__["msg_type"] = _ama.MDBondLoanTickExecution_msg_type_set
    __swig_getmethods__["msg_type"] = _ama.MDBondLoanTickExecution_msg_type_get
    if _newclass:msg_type = _swig_property(_ama.MDBondLoanTickExecution_msg_type_get, _ama.MDBondLoanTickExecution_msg_type_set)
    __swig_setmethods__["msg_seq_num"] = _ama.MDBondLoanTickExecution_msg_seq_num_set
    __swig_getmethods__["msg_seq_num"] = _ama.MDBondLoanTickExecution_msg_seq_num_get
    if _newclass:msg_seq_num = _swig_property(_ama.MDBondLoanTickExecution_msg_seq_num_get, _ama.MDBondLoanTickExecution_msg_seq_num_set)
    __swig_setmethods__["sending_time"] = _ama.MDBondLoanTickExecution_sending_time_set
    __swig_getmethods__["sending_time"] = _ama.MDBondLoanTickExecution_sending_time_get
    if _newclass:sending_time = _swig_property(_ama.MDBondLoanTickExecution_sending_time_get, _ama.MDBondLoanTickExecution_sending_time_set)
    __swig_setmethods__["security_code"] = _ama.MDBondLoanTickExecution_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDBondLoanTickExecution_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDBondLoanTickExecution_security_code_get, _ama.MDBondLoanTickExecution_security_code_set)
    __swig_setmethods__["symbol"] = _ama.MDBondLoanTickExecution_symbol_set
    __swig_getmethods__["symbol"] = _ama.MDBondLoanTickExecution_symbol_get
    if _newclass:symbol = _swig_property(_ama.MDBondLoanTickExecution_symbol_get, _ama.MDBondLoanTickExecution_symbol_set)
    __swig_setmethods__["orig_time"] = _ama.MDBondLoanTickExecution_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDBondLoanTickExecution_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDBondLoanTickExecution_orig_time_get, _ama.MDBondLoanTickExecution_orig_time_set)
    __swig_setmethods__["market_indicator"] = _ama.MDBondLoanTickExecution_market_indicator_set
    __swig_getmethods__["market_indicator"] = _ama.MDBondLoanTickExecution_market_indicator_get
    if _newclass:market_indicator = _swig_property(_ama.MDBondLoanTickExecution_market_indicator_get, _ama.MDBondLoanTickExecution_market_indicator_set)
    __swig_setmethods__["deal_number"] = _ama.MDBondLoanTickExecution_deal_number_set
    __swig_getmethods__["deal_number"] = _ama.MDBondLoanTickExecution_deal_number_get
    if _newclass:deal_number = _swig_property(_ama.MDBondLoanTickExecution_deal_number_get, _ama.MDBondLoanTickExecution_deal_number_set)
    __swig_setmethods__["exec_type"] = _ama.MDBondLoanTickExecution_exec_type_set
    __swig_getmethods__["exec_type"] = _ama.MDBondLoanTickExecution_exec_type_get
    if _newclass:exec_type = _swig_property(_ama.MDBondLoanTickExecution_exec_type_get, _ama.MDBondLoanTickExecution_exec_type_set)
    __swig_setmethods__["price"] = _ama.MDBondLoanTickExecution_price_set
    __swig_getmethods__["price"] = _ama.MDBondLoanTickExecution_price_get
    if _newclass:price = _swig_property(_ama.MDBondLoanTickExecution_price_get, _ama.MDBondLoanTickExecution_price_set)
    __swig_setmethods__["underlying_security_code"] = _ama.MDBondLoanTickExecution_underlying_security_code_set
    __swig_getmethods__["underlying_security_code"] = _ama.MDBondLoanTickExecution_underlying_security_code_get
    if _newclass:underlying_security_code = _swig_property(_ama.MDBondLoanTickExecution_underlying_security_code_get, _ama.MDBondLoanTickExecution_underlying_security_code_set)
    __swig_setmethods__["underlying_symbol"] = _ama.MDBondLoanTickExecution_underlying_symbol_set
    __swig_getmethods__["underlying_symbol"] = _ama.MDBondLoanTickExecution_underlying_symbol_get
    if _newclass:underlying_symbol = _swig_property(_ama.MDBondLoanTickExecution_underlying_symbol_get, _ama.MDBondLoanTickExecution_underlying_symbol_set)
    __swig_setmethods__["underlying_qty"] = _ama.MDBondLoanTickExecution_underlying_qty_set
    __swig_getmethods__["underlying_qty"] = _ama.MDBondLoanTickExecution_underlying_qty_get
    if _newclass:underlying_qty = _swig_property(_ama.MDBondLoanTickExecution_underlying_qty_get, _ama.MDBondLoanTickExecution_underlying_qty_set)
    __swig_setmethods__["variety_category"] = _ama.MDBondLoanTickExecution_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDBondLoanTickExecution_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDBondLoanTickExecution_variety_category_get, _ama.MDBondLoanTickExecution_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDBondLoanTickExecution()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDBondLoanTickExecution
    __del__ = lambda self : None;
MDBondLoanTickExecution_swigregister = _ama.MDBondLoanTickExecution_swigregister
MDBondLoanTickExecution_swigregister(MDBondLoanTickExecution)

class MDBondLoanUnderlyingSecurityRateSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDBondLoanUnderlyingSecurityRateSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDBondLoanUnderlyingSecurityRateSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDBondLoanUnderlyingSecurityRateSnapshot_market_type_get, _ama.MDBondLoanUnderlyingSecurityRateSnapshot_market_type_set)
    __swig_setmethods__["msg_type"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_msg_type_set
    __swig_getmethods__["msg_type"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_msg_type_get
    if _newclass:msg_type = _swig_property(_ama.MDBondLoanUnderlyingSecurityRateSnapshot_msg_type_get, _ama.MDBondLoanUnderlyingSecurityRateSnapshot_msg_type_set)
    __swig_setmethods__["msg_seq_num"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_msg_seq_num_set
    __swig_getmethods__["msg_seq_num"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_msg_seq_num_get
    if _newclass:msg_seq_num = _swig_property(_ama.MDBondLoanUnderlyingSecurityRateSnapshot_msg_seq_num_get, _ama.MDBondLoanUnderlyingSecurityRateSnapshot_msg_seq_num_set)
    __swig_setmethods__["sending_time"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_sending_time_set
    __swig_getmethods__["sending_time"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_sending_time_get
    if _newclass:sending_time = _swig_property(_ama.MDBondLoanUnderlyingSecurityRateSnapshot_sending_time_get, _ama.MDBondLoanUnderlyingSecurityRateSnapshot_sending_time_set)
    __swig_setmethods__["underlying_security_code"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_underlying_security_code_set
    __swig_getmethods__["underlying_security_code"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_underlying_security_code_get
    if _newclass:underlying_security_code = _swig_property(_ama.MDBondLoanUnderlyingSecurityRateSnapshot_underlying_security_code_get, _ama.MDBondLoanUnderlyingSecurityRateSnapshot_underlying_security_code_set)
    __swig_setmethods__["underlying_symbol"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_underlying_symbol_set
    __swig_getmethods__["underlying_symbol"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_underlying_symbol_get
    if _newclass:underlying_symbol = _swig_property(_ama.MDBondLoanUnderlyingSecurityRateSnapshot_underlying_symbol_get, _ama.MDBondLoanUnderlyingSecurityRateSnapshot_underlying_symbol_set)
    __swig_setmethods__["orig_time"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDBondLoanUnderlyingSecurityRateSnapshot_orig_time_get, _ama.MDBondLoanUnderlyingSecurityRateSnapshot_orig_time_set)
    __swig_setmethods__["market_indicator"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_market_indicator_set
    __swig_getmethods__["market_indicator"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_market_indicator_get
    if _newclass:market_indicator = _swig_property(_ama.MDBondLoanUnderlyingSecurityRateSnapshot_market_indicator_get, _ama.MDBondLoanUnderlyingSecurityRateSnapshot_market_indicator_set)
    __swig_setmethods__["md_type"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_md_type_set
    __swig_getmethods__["md_type"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_md_type_get
    if _newclass:md_type = _swig_property(_ama.MDBondLoanUnderlyingSecurityRateSnapshot_md_type_get, _ama.MDBondLoanUnderlyingSecurityRateSnapshot_md_type_set)
    __swig_setmethods__["md_sub_type"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_md_sub_type_set
    __swig_getmethods__["md_sub_type"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_md_sub_type_get
    if _newclass:md_sub_type = _swig_property(_ama.MDBondLoanUnderlyingSecurityRateSnapshot_md_sub_type_get, _ama.MDBondLoanUnderlyingSecurityRateSnapshot_md_sub_type_set)
    __swig_setmethods__["last_price"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_last_price_set
    __swig_getmethods__["last_price"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_last_price_get
    if _newclass:last_price = _swig_property(_ama.MDBondLoanUnderlyingSecurityRateSnapshot_last_price_get, _ama.MDBondLoanUnderlyingSecurityRateSnapshot_last_price_set)
    __swig_setmethods__["open_price"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_open_price_set
    __swig_getmethods__["open_price"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_open_price_get
    if _newclass:open_price = _swig_property(_ama.MDBondLoanUnderlyingSecurityRateSnapshot_open_price_get, _ama.MDBondLoanUnderlyingSecurityRateSnapshot_open_price_set)
    __swig_setmethods__["high_price"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_high_price_set
    __swig_getmethods__["high_price"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_high_price_get
    if _newclass:high_price = _swig_property(_ama.MDBondLoanUnderlyingSecurityRateSnapshot_high_price_get, _ama.MDBondLoanUnderlyingSecurityRateSnapshot_high_price_set)
    __swig_setmethods__["low_price"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_low_price_set
    __swig_getmethods__["low_price"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_low_price_get
    if _newclass:low_price = _swig_property(_ama.MDBondLoanUnderlyingSecurityRateSnapshot_low_price_get, _ama.MDBondLoanUnderlyingSecurityRateSnapshot_low_price_set)
    __swig_setmethods__["weighted_avg_price"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_weighted_avg_price_set
    __swig_getmethods__["weighted_avg_price"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_weighted_avg_price_get
    if _newclass:weighted_avg_price = _swig_property(_ama.MDBondLoanUnderlyingSecurityRateSnapshot_weighted_avg_price_get, _ama.MDBondLoanUnderlyingSecurityRateSnapshot_weighted_avg_price_set)
    __swig_setmethods__["pre_weighted_avg_price"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_pre_weighted_avg_price_set
    __swig_getmethods__["pre_weighted_avg_price"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_pre_weighted_avg_price_get
    if _newclass:pre_weighted_avg_price = _swig_property(_ama.MDBondLoanUnderlyingSecurityRateSnapshot_pre_weighted_avg_price_get, _ama.MDBondLoanUnderlyingSecurityRateSnapshot_pre_weighted_avg_price_set)
    __swig_setmethods__["close_price"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_close_price_set
    __swig_getmethods__["close_price"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_close_price_get
    if _newclass:close_price = _swig_property(_ama.MDBondLoanUnderlyingSecurityRateSnapshot_close_price_get, _ama.MDBondLoanUnderlyingSecurityRateSnapshot_close_price_set)
    __swig_setmethods__["pre_close_price"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_pre_close_price_set
    __swig_getmethods__["pre_close_price"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_pre_close_price_get
    if _newclass:pre_close_price = _swig_property(_ama.MDBondLoanUnderlyingSecurityRateSnapshot_pre_close_price_get, _ama.MDBondLoanUnderlyingSecurityRateSnapshot_pre_close_price_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDBondLoanUnderlyingSecurityRateSnapshot_total_volume_trade_get, _ama.MDBondLoanUnderlyingSecurityRateSnapshot_total_volume_trade_set)
    __swig_setmethods__["variety_category"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDBondLoanUnderlyingSecurityRateSnapshot_variety_category_get, _ama.MDBondLoanUnderlyingSecurityRateSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDBondLoanUnderlyingSecurityRateSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDBondLoanUnderlyingSecurityRateSnapshot
    __del__ = lambda self : None;
MDBondLoanUnderlyingSecurityRateSnapshot_swigregister = _ama.MDBondLoanUnderlyingSecurityRateSnapshot_swigregister
MDBondLoanUnderlyingSecurityRateSnapshot_swigregister(MDBondLoanUnderlyingSecurityRateSnapshot)

class MDBondLoanTradingProductRateSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDBondLoanTradingProductRateSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDBondLoanTradingProductRateSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDBondLoanTradingProductRateSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDBondLoanTradingProductRateSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDBondLoanTradingProductRateSnapshot_market_type_get, _ama.MDBondLoanTradingProductRateSnapshot_market_type_set)
    __swig_setmethods__["msg_type"] = _ama.MDBondLoanTradingProductRateSnapshot_msg_type_set
    __swig_getmethods__["msg_type"] = _ama.MDBondLoanTradingProductRateSnapshot_msg_type_get
    if _newclass:msg_type = _swig_property(_ama.MDBondLoanTradingProductRateSnapshot_msg_type_get, _ama.MDBondLoanTradingProductRateSnapshot_msg_type_set)
    __swig_setmethods__["msg_seq_num"] = _ama.MDBondLoanTradingProductRateSnapshot_msg_seq_num_set
    __swig_getmethods__["msg_seq_num"] = _ama.MDBondLoanTradingProductRateSnapshot_msg_seq_num_get
    if _newclass:msg_seq_num = _swig_property(_ama.MDBondLoanTradingProductRateSnapshot_msg_seq_num_get, _ama.MDBondLoanTradingProductRateSnapshot_msg_seq_num_set)
    __swig_setmethods__["sending_time"] = _ama.MDBondLoanTradingProductRateSnapshot_sending_time_set
    __swig_getmethods__["sending_time"] = _ama.MDBondLoanTradingProductRateSnapshot_sending_time_get
    if _newclass:sending_time = _swig_property(_ama.MDBondLoanTradingProductRateSnapshot_sending_time_get, _ama.MDBondLoanTradingProductRateSnapshot_sending_time_set)
    __swig_setmethods__["security_code"] = _ama.MDBondLoanTradingProductRateSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDBondLoanTradingProductRateSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDBondLoanTradingProductRateSnapshot_security_code_get, _ama.MDBondLoanTradingProductRateSnapshot_security_code_set)
    __swig_setmethods__["symbol"] = _ama.MDBondLoanTradingProductRateSnapshot_symbol_set
    __swig_getmethods__["symbol"] = _ama.MDBondLoanTradingProductRateSnapshot_symbol_get
    if _newclass:symbol = _swig_property(_ama.MDBondLoanTradingProductRateSnapshot_symbol_get, _ama.MDBondLoanTradingProductRateSnapshot_symbol_set)
    __swig_setmethods__["orig_time"] = _ama.MDBondLoanTradingProductRateSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDBondLoanTradingProductRateSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDBondLoanTradingProductRateSnapshot_orig_time_get, _ama.MDBondLoanTradingProductRateSnapshot_orig_time_set)
    __swig_setmethods__["market_indicator"] = _ama.MDBondLoanTradingProductRateSnapshot_market_indicator_set
    __swig_getmethods__["market_indicator"] = _ama.MDBondLoanTradingProductRateSnapshot_market_indicator_get
    if _newclass:market_indicator = _swig_property(_ama.MDBondLoanTradingProductRateSnapshot_market_indicator_get, _ama.MDBondLoanTradingProductRateSnapshot_market_indicator_set)
    __swig_setmethods__["md_type"] = _ama.MDBondLoanTradingProductRateSnapshot_md_type_set
    __swig_getmethods__["md_type"] = _ama.MDBondLoanTradingProductRateSnapshot_md_type_get
    if _newclass:md_type = _swig_property(_ama.MDBondLoanTradingProductRateSnapshot_md_type_get, _ama.MDBondLoanTradingProductRateSnapshot_md_type_set)
    __swig_setmethods__["md_sub_type"] = _ama.MDBondLoanTradingProductRateSnapshot_md_sub_type_set
    __swig_getmethods__["md_sub_type"] = _ama.MDBondLoanTradingProductRateSnapshot_md_sub_type_get
    if _newclass:md_sub_type = _swig_property(_ama.MDBondLoanTradingProductRateSnapshot_md_sub_type_get, _ama.MDBondLoanTradingProductRateSnapshot_md_sub_type_set)
    __swig_setmethods__["last_price"] = _ama.MDBondLoanTradingProductRateSnapshot_last_price_set
    __swig_getmethods__["last_price"] = _ama.MDBondLoanTradingProductRateSnapshot_last_price_get
    if _newclass:last_price = _swig_property(_ama.MDBondLoanTradingProductRateSnapshot_last_price_get, _ama.MDBondLoanTradingProductRateSnapshot_last_price_set)
    __swig_setmethods__["open_price"] = _ama.MDBondLoanTradingProductRateSnapshot_open_price_set
    __swig_getmethods__["open_price"] = _ama.MDBondLoanTradingProductRateSnapshot_open_price_get
    if _newclass:open_price = _swig_property(_ama.MDBondLoanTradingProductRateSnapshot_open_price_get, _ama.MDBondLoanTradingProductRateSnapshot_open_price_set)
    __swig_setmethods__["high_price"] = _ama.MDBondLoanTradingProductRateSnapshot_high_price_set
    __swig_getmethods__["high_price"] = _ama.MDBondLoanTradingProductRateSnapshot_high_price_get
    if _newclass:high_price = _swig_property(_ama.MDBondLoanTradingProductRateSnapshot_high_price_get, _ama.MDBondLoanTradingProductRateSnapshot_high_price_set)
    __swig_setmethods__["low_price"] = _ama.MDBondLoanTradingProductRateSnapshot_low_price_set
    __swig_getmethods__["low_price"] = _ama.MDBondLoanTradingProductRateSnapshot_low_price_get
    if _newclass:low_price = _swig_property(_ama.MDBondLoanTradingProductRateSnapshot_low_price_get, _ama.MDBondLoanTradingProductRateSnapshot_low_price_set)
    __swig_setmethods__["weighted_avg_price"] = _ama.MDBondLoanTradingProductRateSnapshot_weighted_avg_price_set
    __swig_getmethods__["weighted_avg_price"] = _ama.MDBondLoanTradingProductRateSnapshot_weighted_avg_price_get
    if _newclass:weighted_avg_price = _swig_property(_ama.MDBondLoanTradingProductRateSnapshot_weighted_avg_price_get, _ama.MDBondLoanTradingProductRateSnapshot_weighted_avg_price_set)
    __swig_setmethods__["pre_weighted_avg_price"] = _ama.MDBondLoanTradingProductRateSnapshot_pre_weighted_avg_price_set
    __swig_getmethods__["pre_weighted_avg_price"] = _ama.MDBondLoanTradingProductRateSnapshot_pre_weighted_avg_price_get
    if _newclass:pre_weighted_avg_price = _swig_property(_ama.MDBondLoanTradingProductRateSnapshot_pre_weighted_avg_price_get, _ama.MDBondLoanTradingProductRateSnapshot_pre_weighted_avg_price_set)
    __swig_setmethods__["close_price"] = _ama.MDBondLoanTradingProductRateSnapshot_close_price_set
    __swig_getmethods__["close_price"] = _ama.MDBondLoanTradingProductRateSnapshot_close_price_get
    if _newclass:close_price = _swig_property(_ama.MDBondLoanTradingProductRateSnapshot_close_price_get, _ama.MDBondLoanTradingProductRateSnapshot_close_price_set)
    __swig_setmethods__["pre_close_price"] = _ama.MDBondLoanTradingProductRateSnapshot_pre_close_price_set
    __swig_getmethods__["pre_close_price"] = _ama.MDBondLoanTradingProductRateSnapshot_pre_close_price_get
    if _newclass:pre_close_price = _swig_property(_ama.MDBondLoanTradingProductRateSnapshot_pre_close_price_get, _ama.MDBondLoanTradingProductRateSnapshot_pre_close_price_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDBondLoanTradingProductRateSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDBondLoanTradingProductRateSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDBondLoanTradingProductRateSnapshot_total_volume_trade_get, _ama.MDBondLoanTradingProductRateSnapshot_total_volume_trade_set)
    __swig_setmethods__["variety_category"] = _ama.MDBondLoanTradingProductRateSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDBondLoanTradingProductRateSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDBondLoanTradingProductRateSnapshot_variety_category_get, _ama.MDBondLoanTradingProductRateSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDBondLoanTradingProductRateSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDBondLoanTradingProductRateSnapshot
    __del__ = lambda self : None;
MDBondLoanTradingProductRateSnapshot_swigregister = _ama.MDBondLoanTradingProductRateSnapshot_swigregister
MDBondLoanTradingProductRateSnapshot_swigregister(MDBondLoanTradingProductRateSnapshot)

class MarketMakersQuoteItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MarketMakersQuoteItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MarketMakersQuoteItem, name)
    __repr__ = _swig_repr
    __swig_setmethods__["quote_type"] = _ama.MarketMakersQuoteItem_quote_type_set
    __swig_getmethods__["quote_type"] = _ama.MarketMakersQuoteItem_quote_type_get
    if _newclass:quote_type = _swig_property(_ama.MarketMakersQuoteItem_quote_type_get, _ama.MarketMakersQuoteItem_quote_type_set)
    __swig_setmethods__["quote_entry_id"] = _ama.MarketMakersQuoteItem_quote_entry_id_set
    __swig_getmethods__["quote_entry_id"] = _ama.MarketMakersQuoteItem_quote_entry_id_get
    if _newclass:quote_entry_id = _swig_property(_ama.MarketMakersQuoteItem_quote_entry_id_get, _ama.MarketMakersQuoteItem_quote_entry_id_set)
    __swig_setmethods__["tranding_time"] = _ama.MarketMakersQuoteItem_tranding_time_set
    __swig_getmethods__["tranding_time"] = _ama.MarketMakersQuoteItem_tranding_time_get
    if _newclass:tranding_time = _swig_property(_ama.MarketMakersQuoteItem_tranding_time_get, _ama.MarketMakersQuoteItem_tranding_time_set)
    __swig_setmethods__["clean_price"] = _ama.MarketMakersQuoteItem_clean_price_set
    __swig_getmethods__["clean_price"] = _ama.MarketMakersQuoteItem_clean_price_get
    if _newclass:clean_price = _swig_property(_ama.MarketMakersQuoteItem_clean_price_get, _ama.MarketMakersQuoteItem_clean_price_set)
    __swig_setmethods__["maturity_yield"] = _ama.MarketMakersQuoteItem_maturity_yield_set
    __swig_getmethods__["maturity_yield"] = _ama.MarketMakersQuoteItem_maturity_yield_get
    if _newclass:maturity_yield = _swig_property(_ama.MarketMakersQuoteItem_maturity_yield_get, _ama.MarketMakersQuoteItem_maturity_yield_set)
    __swig_setmethods__["dirty_price"] = _ama.MarketMakersQuoteItem_dirty_price_set
    __swig_getmethods__["dirty_price"] = _ama.MarketMakersQuoteItem_dirty_price_get
    if _newclass:dirty_price = _swig_property(_ama.MarketMakersQuoteItem_dirty_price_get, _ama.MarketMakersQuoteItem_dirty_price_set)
    __swig_setmethods__["total_face_value"] = _ama.MarketMakersQuoteItem_total_face_value_set
    __swig_getmethods__["total_face_value"] = _ama.MarketMakersQuoteItem_total_face_value_get
    if _newclass:total_face_value = _swig_property(_ama.MarketMakersQuoteItem_total_face_value_get, _ama.MarketMakersQuoteItem_total_face_value_set)
    __swig_setmethods__["clearing_method"] = _ama.MarketMakersQuoteItem_clearing_method_set
    __swig_getmethods__["clearing_method"] = _ama.MarketMakersQuoteItem_clearing_method_get
    if _newclass:clearing_method = _swig_property(_ama.MarketMakersQuoteItem_clearing_method_get, _ama.MarketMakersQuoteItem_clearing_method_set)
    __swig_setmethods__["settl_type"] = _ama.MarketMakersQuoteItem_settl_type_set
    __swig_getmethods__["settl_type"] = _ama.MarketMakersQuoteItem_settl_type_get
    if _newclass:settl_type = _swig_property(_ama.MarketMakersQuoteItem_settl_type_get, _ama.MarketMakersQuoteItem_settl_type_set)
    __swig_setmethods__["settl_date"] = _ama.MarketMakersQuoteItem_settl_date_set
    __swig_getmethods__["settl_date"] = _ama.MarketMakersQuoteItem_settl_date_get
    if _newclass:settl_date = _swig_property(_ama.MarketMakersQuoteItem_settl_date_get, _ama.MarketMakersQuoteItem_settl_date_set)
    __swig_setmethods__["delivery_type"] = _ama.MarketMakersQuoteItem_delivery_type_set
    __swig_getmethods__["delivery_type"] = _ama.MarketMakersQuoteItem_delivery_type_get
    if _newclass:delivery_type = _swig_property(_ama.MarketMakersQuoteItem_delivery_type_get, _ama.MarketMakersQuoteItem_delivery_type_set)
    __swig_setmethods__["settl_currency"] = _ama.MarketMakersQuoteItem_settl_currency_set
    __swig_getmethods__["settl_currency"] = _ama.MarketMakersQuoteItem_settl_currency_get
    if _newclass:settl_currency = _swig_property(_ama.MarketMakersQuoteItem_settl_currency_get, _ama.MarketMakersQuoteItem_settl_currency_set)
    __swig_setmethods__["settl_curr_fx_rate"] = _ama.MarketMakersQuoteItem_settl_curr_fx_rate_set
    __swig_getmethods__["settl_curr_fx_rate"] = _ama.MarketMakersQuoteItem_settl_curr_fx_rate_get
    if _newclass:settl_curr_fx_rate = _swig_property(_ama.MarketMakersQuoteItem_settl_curr_fx_rate_get, _ama.MarketMakersQuoteItem_settl_curr_fx_rate_set)
    __swig_setmethods__["trade_account_id"] = _ama.MarketMakersQuoteItem_trade_account_id_set
    __swig_getmethods__["trade_account_id"] = _ama.MarketMakersQuoteItem_trade_account_id_get
    if _newclass:trade_account_id = _swig_property(_ama.MarketMakersQuoteItem_trade_account_id_get, _ama.MarketMakersQuoteItem_trade_account_id_set)
    __swig_setmethods__["trader_id"] = _ama.MarketMakersQuoteItem_trader_id_set
    __swig_getmethods__["trader_id"] = _ama.MarketMakersQuoteItem_trader_id_get
    if _newclass:trader_id = _swig_property(_ama.MarketMakersQuoteItem_trader_id_get, _ama.MarketMakersQuoteItem_trader_id_set)
    def __init__(self): 
        this = _ama.new_MarketMakersQuoteItem()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MarketMakersQuoteItem
    __del__ = lambda self : None;
MarketMakersQuoteItem_swigregister = _ama.MarketMakersQuoteItem_swigregister
MarketMakersQuoteItem_swigregister(MarketMakersQuoteItem)

class MDSpotMarketMakersQuoteSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDSpotMarketMakersQuoteSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDSpotMarketMakersQuoteSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDSpotMarketMakersQuoteSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDSpotMarketMakersQuoteSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDSpotMarketMakersQuoteSnapshot_market_type_get, _ama.MDSpotMarketMakersQuoteSnapshot_market_type_set)
    __swig_setmethods__["msg_type"] = _ama.MDSpotMarketMakersQuoteSnapshot_msg_type_set
    __swig_getmethods__["msg_type"] = _ama.MDSpotMarketMakersQuoteSnapshot_msg_type_get
    if _newclass:msg_type = _swig_property(_ama.MDSpotMarketMakersQuoteSnapshot_msg_type_get, _ama.MDSpotMarketMakersQuoteSnapshot_msg_type_set)
    __swig_setmethods__["msg_seq_num"] = _ama.MDSpotMarketMakersQuoteSnapshot_msg_seq_num_set
    __swig_getmethods__["msg_seq_num"] = _ama.MDSpotMarketMakersQuoteSnapshot_msg_seq_num_get
    if _newclass:msg_seq_num = _swig_property(_ama.MDSpotMarketMakersQuoteSnapshot_msg_seq_num_get, _ama.MDSpotMarketMakersQuoteSnapshot_msg_seq_num_set)
    __swig_setmethods__["sending_time"] = _ama.MDSpotMarketMakersQuoteSnapshot_sending_time_set
    __swig_getmethods__["sending_time"] = _ama.MDSpotMarketMakersQuoteSnapshot_sending_time_get
    if _newclass:sending_time = _swig_property(_ama.MDSpotMarketMakersQuoteSnapshot_sending_time_get, _ama.MDSpotMarketMakersQuoteSnapshot_sending_time_set)
    __swig_setmethods__["security_code"] = _ama.MDSpotMarketMakersQuoteSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDSpotMarketMakersQuoteSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDSpotMarketMakersQuoteSnapshot_security_code_get, _ama.MDSpotMarketMakersQuoteSnapshot_security_code_set)
    __swig_setmethods__["symbol"] = _ama.MDSpotMarketMakersQuoteSnapshot_symbol_set
    __swig_getmethods__["symbol"] = _ama.MDSpotMarketMakersQuoteSnapshot_symbol_get
    if _newclass:symbol = _swig_property(_ama.MDSpotMarketMakersQuoteSnapshot_symbol_get, _ama.MDSpotMarketMakersQuoteSnapshot_symbol_set)
    __swig_setmethods__["market_indicator"] = _ama.MDSpotMarketMakersQuoteSnapshot_market_indicator_set
    __swig_getmethods__["market_indicator"] = _ama.MDSpotMarketMakersQuoteSnapshot_market_indicator_get
    if _newclass:market_indicator = _swig_property(_ama.MDSpotMarketMakersQuoteSnapshot_market_indicator_get, _ama.MDSpotMarketMakersQuoteSnapshot_market_indicator_set)
    __swig_setmethods__["md_book_type"] = _ama.MDSpotMarketMakersQuoteSnapshot_md_book_type_set
    __swig_getmethods__["md_book_type"] = _ama.MDSpotMarketMakersQuoteSnapshot_md_book_type_get
    if _newclass:md_book_type = _swig_property(_ama.MDSpotMarketMakersQuoteSnapshot_md_book_type_get, _ama.MDSpotMarketMakersQuoteSnapshot_md_book_type_set)
    __swig_setmethods__["md_sub_book_type"] = _ama.MDSpotMarketMakersQuoteSnapshot_md_sub_book_type_set
    __swig_getmethods__["md_sub_book_type"] = _ama.MDSpotMarketMakersQuoteSnapshot_md_sub_book_type_get
    if _newclass:md_sub_book_type = _swig_property(_ama.MDSpotMarketMakersQuoteSnapshot_md_sub_book_type_get, _ama.MDSpotMarketMakersQuoteSnapshot_md_sub_book_type_set)
    __swig_setmethods__["security_type"] = _ama.MDSpotMarketMakersQuoteSnapshot_security_type_set
    __swig_getmethods__["security_type"] = _ama.MDSpotMarketMakersQuoteSnapshot_security_type_get
    if _newclass:security_type = _swig_property(_ama.MDSpotMarketMakersQuoteSnapshot_security_type_get, _ama.MDSpotMarketMakersQuoteSnapshot_security_type_set)
    __swig_setmethods__["md_req_id"] = _ama.MDSpotMarketMakersQuoteSnapshot_md_req_id_set
    __swig_getmethods__["md_req_id"] = _ama.MDSpotMarketMakersQuoteSnapshot_md_req_id_get
    if _newclass:md_req_id = _swig_property(_ama.MDSpotMarketMakersQuoteSnapshot_md_req_id_get, _ama.MDSpotMarketMakersQuoteSnapshot_md_req_id_set)
    __swig_setmethods__["bid"] = _ama.MDSpotMarketMakersQuoteSnapshot_bid_set
    __swig_getmethods__["bid"] = _ama.MDSpotMarketMakersQuoteSnapshot_bid_get
    if _newclass:bid = _swig_property(_ama.MDSpotMarketMakersQuoteSnapshot_bid_get, _ama.MDSpotMarketMakersQuoteSnapshot_bid_set)
    __swig_setmethods__["offer"] = _ama.MDSpotMarketMakersQuoteSnapshot_offer_set
    __swig_getmethods__["offer"] = _ama.MDSpotMarketMakersQuoteSnapshot_offer_get
    if _newclass:offer = _swig_property(_ama.MDSpotMarketMakersQuoteSnapshot_offer_get, _ama.MDSpotMarketMakersQuoteSnapshot_offer_set)
    __swig_setmethods__["variety_category"] = _ama.MDSpotMarketMakersQuoteSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDSpotMarketMakersQuoteSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDSpotMarketMakersQuoteSnapshot_variety_category_get, _ama.MDSpotMarketMakersQuoteSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDSpotMarketMakersQuoteSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDSpotMarketMakersQuoteSnapshot
    __del__ = lambda self : None;
MDSpotMarketMakersQuoteSnapshot_swigregister = _ama.MDSpotMarketMakersQuoteSnapshot_swigregister
MDSpotMarketMakersQuoteSnapshot_swigregister(MDSpotMarketMakersQuoteSnapshot)

class DirectiveQuoteItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, DirectiveQuoteItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, DirectiveQuoteItem, name)
    __repr__ = _swig_repr
    __swig_setmethods__["tranding_time"] = _ama.DirectiveQuoteItem_tranding_time_set
    __swig_getmethods__["tranding_time"] = _ama.DirectiveQuoteItem_tranding_time_get
    if _newclass:tranding_time = _swig_property(_ama.DirectiveQuoteItem_tranding_time_get, _ama.DirectiveQuoteItem_tranding_time_set)
    __swig_setmethods__["clean_price"] = _ama.DirectiveQuoteItem_clean_price_set
    __swig_getmethods__["clean_price"] = _ama.DirectiveQuoteItem_clean_price_get
    if _newclass:clean_price = _swig_property(_ama.DirectiveQuoteItem_clean_price_get, _ama.DirectiveQuoteItem_clean_price_set)
    __swig_setmethods__["maturity_yield"] = _ama.DirectiveQuoteItem_maturity_yield_set
    __swig_getmethods__["maturity_yield"] = _ama.DirectiveQuoteItem_maturity_yield_get
    if _newclass:maturity_yield = _swig_property(_ama.DirectiveQuoteItem_maturity_yield_get, _ama.DirectiveQuoteItem_maturity_yield_set)
    __swig_setmethods__["settl_type"] = _ama.DirectiveQuoteItem_settl_type_set
    __swig_getmethods__["settl_type"] = _ama.DirectiveQuoteItem_settl_type_get
    if _newclass:settl_type = _swig_property(_ama.DirectiveQuoteItem_settl_type_get, _ama.DirectiveQuoteItem_settl_type_set)
    __swig_setmethods__["party_id"] = _ama.DirectiveQuoteItem_party_id_set
    __swig_getmethods__["party_id"] = _ama.DirectiveQuoteItem_party_id_get
    if _newclass:party_id = _swig_property(_ama.DirectiveQuoteItem_party_id_get, _ama.DirectiveQuoteItem_party_id_set)
    def __init__(self): 
        this = _ama.new_DirectiveQuoteItem()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_DirectiveQuoteItem
    __del__ = lambda self : None;
DirectiveQuoteItem_swigregister = _ama.DirectiveQuoteItem_swigregister
DirectiveQuoteItem_swigregister(DirectiveQuoteItem)

class MDSpotDirectiveQuoteSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDSpotDirectiveQuoteSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDSpotDirectiveQuoteSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDSpotDirectiveQuoteSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDSpotDirectiveQuoteSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDSpotDirectiveQuoteSnapshot_market_type_get, _ama.MDSpotDirectiveQuoteSnapshot_market_type_set)
    __swig_setmethods__["msg_type"] = _ama.MDSpotDirectiveQuoteSnapshot_msg_type_set
    __swig_getmethods__["msg_type"] = _ama.MDSpotDirectiveQuoteSnapshot_msg_type_get
    if _newclass:msg_type = _swig_property(_ama.MDSpotDirectiveQuoteSnapshot_msg_type_get, _ama.MDSpotDirectiveQuoteSnapshot_msg_type_set)
    __swig_setmethods__["msg_seq_num"] = _ama.MDSpotDirectiveQuoteSnapshot_msg_seq_num_set
    __swig_getmethods__["msg_seq_num"] = _ama.MDSpotDirectiveQuoteSnapshot_msg_seq_num_get
    if _newclass:msg_seq_num = _swig_property(_ama.MDSpotDirectiveQuoteSnapshot_msg_seq_num_get, _ama.MDSpotDirectiveQuoteSnapshot_msg_seq_num_set)
    __swig_setmethods__["sending_time"] = _ama.MDSpotDirectiveQuoteSnapshot_sending_time_set
    __swig_getmethods__["sending_time"] = _ama.MDSpotDirectiveQuoteSnapshot_sending_time_get
    if _newclass:sending_time = _swig_property(_ama.MDSpotDirectiveQuoteSnapshot_sending_time_get, _ama.MDSpotDirectiveQuoteSnapshot_sending_time_set)
    __swig_setmethods__["security_code"] = _ama.MDSpotDirectiveQuoteSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDSpotDirectiveQuoteSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDSpotDirectiveQuoteSnapshot_security_code_get, _ama.MDSpotDirectiveQuoteSnapshot_security_code_set)
    __swig_setmethods__["market_indicator"] = _ama.MDSpotDirectiveQuoteSnapshot_market_indicator_set
    __swig_getmethods__["market_indicator"] = _ama.MDSpotDirectiveQuoteSnapshot_market_indicator_get
    if _newclass:market_indicator = _swig_property(_ama.MDSpotDirectiveQuoteSnapshot_market_indicator_get, _ama.MDSpotDirectiveQuoteSnapshot_market_indicator_set)
    __swig_setmethods__["md_book_type"] = _ama.MDSpotDirectiveQuoteSnapshot_md_book_type_set
    __swig_getmethods__["md_book_type"] = _ama.MDSpotDirectiveQuoteSnapshot_md_book_type_get
    if _newclass:md_book_type = _swig_property(_ama.MDSpotDirectiveQuoteSnapshot_md_book_type_get, _ama.MDSpotDirectiveQuoteSnapshot_md_book_type_set)
    __swig_setmethods__["md_sub_book_type"] = _ama.MDSpotDirectiveQuoteSnapshot_md_sub_book_type_set
    __swig_getmethods__["md_sub_book_type"] = _ama.MDSpotDirectiveQuoteSnapshot_md_sub_book_type_get
    if _newclass:md_sub_book_type = _swig_property(_ama.MDSpotDirectiveQuoteSnapshot_md_sub_book_type_get, _ama.MDSpotDirectiveQuoteSnapshot_md_sub_book_type_set)
    __swig_setmethods__["security_type"] = _ama.MDSpotDirectiveQuoteSnapshot_security_type_set
    __swig_getmethods__["security_type"] = _ama.MDSpotDirectiveQuoteSnapshot_security_type_get
    if _newclass:security_type = _swig_property(_ama.MDSpotDirectiveQuoteSnapshot_security_type_get, _ama.MDSpotDirectiveQuoteSnapshot_security_type_set)
    __swig_setmethods__["md_req_id"] = _ama.MDSpotDirectiveQuoteSnapshot_md_req_id_set
    __swig_getmethods__["md_req_id"] = _ama.MDSpotDirectiveQuoteSnapshot_md_req_id_get
    if _newclass:md_req_id = _swig_property(_ama.MDSpotDirectiveQuoteSnapshot_md_req_id_get, _ama.MDSpotDirectiveQuoteSnapshot_md_req_id_set)
    __swig_setmethods__["bid"] = _ama.MDSpotDirectiveQuoteSnapshot_bid_set
    __swig_getmethods__["bid"] = _ama.MDSpotDirectiveQuoteSnapshot_bid_get
    if _newclass:bid = _swig_property(_ama.MDSpotDirectiveQuoteSnapshot_bid_get, _ama.MDSpotDirectiveQuoteSnapshot_bid_set)
    __swig_setmethods__["offer"] = _ama.MDSpotDirectiveQuoteSnapshot_offer_set
    __swig_getmethods__["offer"] = _ama.MDSpotDirectiveQuoteSnapshot_offer_get
    if _newclass:offer = _swig_property(_ama.MDSpotDirectiveQuoteSnapshot_offer_get, _ama.MDSpotDirectiveQuoteSnapshot_offer_set)
    __swig_setmethods__["variety_category"] = _ama.MDSpotDirectiveQuoteSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDSpotDirectiveQuoteSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDSpotDirectiveQuoteSnapshot_variety_category_get, _ama.MDSpotDirectiveQuoteSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDSpotDirectiveQuoteSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDSpotDirectiveQuoteSnapshot
    __del__ = lambda self : None;
MDSpotDirectiveQuoteSnapshot_swigregister = _ama.MDSpotDirectiveQuoteSnapshot_swigregister
MDSpotDirectiveQuoteSnapshot_swigregister(MDSpotDirectiveQuoteSnapshot)

class MDSpotXBondDepthQuoteSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDSpotXBondDepthQuoteSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDSpotXBondDepthQuoteSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDSpotXBondDepthQuoteSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDSpotXBondDepthQuoteSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDSpotXBondDepthQuoteSnapshot_market_type_get, _ama.MDSpotXBondDepthQuoteSnapshot_market_type_set)
    __swig_setmethods__["msg_type"] = _ama.MDSpotXBondDepthQuoteSnapshot_msg_type_set
    __swig_getmethods__["msg_type"] = _ama.MDSpotXBondDepthQuoteSnapshot_msg_type_get
    if _newclass:msg_type = _swig_property(_ama.MDSpotXBondDepthQuoteSnapshot_msg_type_get, _ama.MDSpotXBondDepthQuoteSnapshot_msg_type_set)
    __swig_setmethods__["msg_seq_num"] = _ama.MDSpotXBondDepthQuoteSnapshot_msg_seq_num_set
    __swig_getmethods__["msg_seq_num"] = _ama.MDSpotXBondDepthQuoteSnapshot_msg_seq_num_get
    if _newclass:msg_seq_num = _swig_property(_ama.MDSpotXBondDepthQuoteSnapshot_msg_seq_num_get, _ama.MDSpotXBondDepthQuoteSnapshot_msg_seq_num_set)
    __swig_setmethods__["sending_time"] = _ama.MDSpotXBondDepthQuoteSnapshot_sending_time_set
    __swig_getmethods__["sending_time"] = _ama.MDSpotXBondDepthQuoteSnapshot_sending_time_get
    if _newclass:sending_time = _swig_property(_ama.MDSpotXBondDepthQuoteSnapshot_sending_time_get, _ama.MDSpotXBondDepthQuoteSnapshot_sending_time_set)
    __swig_setmethods__["security_code"] = _ama.MDSpotXBondDepthQuoteSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDSpotXBondDepthQuoteSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDSpotXBondDepthQuoteSnapshot_security_code_get, _ama.MDSpotXBondDepthQuoteSnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDSpotXBondDepthQuoteSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDSpotXBondDepthQuoteSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDSpotXBondDepthQuoteSnapshot_orig_time_get, _ama.MDSpotXBondDepthQuoteSnapshot_orig_time_set)
    __swig_setmethods__["md_book_type"] = _ama.MDSpotXBondDepthQuoteSnapshot_md_book_type_set
    __swig_getmethods__["md_book_type"] = _ama.MDSpotXBondDepthQuoteSnapshot_md_book_type_get
    if _newclass:md_book_type = _swig_property(_ama.MDSpotXBondDepthQuoteSnapshot_md_book_type_get, _ama.MDSpotXBondDepthQuoteSnapshot_md_book_type_set)
    __swig_setmethods__["md_req_id"] = _ama.MDSpotXBondDepthQuoteSnapshot_md_req_id_set
    __swig_getmethods__["md_req_id"] = _ama.MDSpotXBondDepthQuoteSnapshot_md_req_id_get
    if _newclass:md_req_id = _swig_property(_ama.MDSpotXBondDepthQuoteSnapshot_md_req_id_get, _ama.MDSpotXBondDepthQuoteSnapshot_md_req_id_set)
    __swig_setmethods__["settl_type"] = _ama.MDSpotXBondDepthQuoteSnapshot_settl_type_set
    __swig_getmethods__["settl_type"] = _ama.MDSpotXBondDepthQuoteSnapshot_settl_type_get
    if _newclass:settl_type = _swig_property(_ama.MDSpotXBondDepthQuoteSnapshot_settl_type_get, _ama.MDSpotXBondDepthQuoteSnapshot_settl_type_set)
    __swig_setmethods__["bid_clean_price"] = _ama.MDSpotXBondDepthQuoteSnapshot_bid_clean_price_set
    __swig_getmethods__["bid_clean_price"] = _ama.MDSpotXBondDepthQuoteSnapshot_bid_clean_price_get
    if _newclass:bid_clean_price = _swig_property(_ama.MDSpotXBondDepthQuoteSnapshot_bid_clean_price_get, _ama.MDSpotXBondDepthQuoteSnapshot_bid_clean_price_set)
    __swig_setmethods__["bid_volume"] = _ama.MDSpotXBondDepthQuoteSnapshot_bid_volume_set
    __swig_getmethods__["bid_volume"] = _ama.MDSpotXBondDepthQuoteSnapshot_bid_volume_get
    if _newclass:bid_volume = _swig_property(_ama.MDSpotXBondDepthQuoteSnapshot_bid_volume_get, _ama.MDSpotXBondDepthQuoteSnapshot_bid_volume_set)
    __swig_setmethods__["bid_yield"] = _ama.MDSpotXBondDepthQuoteSnapshot_bid_yield_set
    __swig_getmethods__["bid_yield"] = _ama.MDSpotXBondDepthQuoteSnapshot_bid_yield_get
    if _newclass:bid_yield = _swig_property(_ama.MDSpotXBondDepthQuoteSnapshot_bid_yield_get, _ama.MDSpotXBondDepthQuoteSnapshot_bid_yield_set)
    __swig_setmethods__["offer_clean_price"] = _ama.MDSpotXBondDepthQuoteSnapshot_offer_clean_price_set
    __swig_getmethods__["offer_clean_price"] = _ama.MDSpotXBondDepthQuoteSnapshot_offer_clean_price_get
    if _newclass:offer_clean_price = _swig_property(_ama.MDSpotXBondDepthQuoteSnapshot_offer_clean_price_get, _ama.MDSpotXBondDepthQuoteSnapshot_offer_clean_price_set)
    __swig_setmethods__["offer_volume"] = _ama.MDSpotXBondDepthQuoteSnapshot_offer_volume_set
    __swig_getmethods__["offer_volume"] = _ama.MDSpotXBondDepthQuoteSnapshot_offer_volume_get
    if _newclass:offer_volume = _swig_property(_ama.MDSpotXBondDepthQuoteSnapshot_offer_volume_get, _ama.MDSpotXBondDepthQuoteSnapshot_offer_volume_set)
    __swig_setmethods__["offer_yield"] = _ama.MDSpotXBondDepthQuoteSnapshot_offer_yield_set
    __swig_getmethods__["offer_yield"] = _ama.MDSpotXBondDepthQuoteSnapshot_offer_yield_get
    if _newclass:offer_yield = _swig_property(_ama.MDSpotXBondDepthQuoteSnapshot_offer_yield_get, _ama.MDSpotXBondDepthQuoteSnapshot_offer_yield_set)
    __swig_setmethods__["variety_category"] = _ama.MDSpotXBondDepthQuoteSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDSpotXBondDepthQuoteSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDSpotXBondDepthQuoteSnapshot_variety_category_get, _ama.MDSpotXBondDepthQuoteSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDSpotXBondDepthQuoteSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDSpotXBondDepthQuoteSnapshot
    __del__ = lambda self : None;
MDSpotXBondDepthQuoteSnapshot_swigregister = _ama.MDSpotXBondDepthQuoteSnapshot_swigregister
MDSpotXBondDepthQuoteSnapshot_swigregister(MDSpotXBondDepthQuoteSnapshot)

class MDSpotXBondMatchQuoteSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDSpotXBondMatchQuoteSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDSpotXBondMatchQuoteSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDSpotXBondMatchQuoteSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDSpotXBondMatchQuoteSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDSpotXBondMatchQuoteSnapshot_market_type_get, _ama.MDSpotXBondMatchQuoteSnapshot_market_type_set)
    __swig_setmethods__["msg_type"] = _ama.MDSpotXBondMatchQuoteSnapshot_msg_type_set
    __swig_getmethods__["msg_type"] = _ama.MDSpotXBondMatchQuoteSnapshot_msg_type_get
    if _newclass:msg_type = _swig_property(_ama.MDSpotXBondMatchQuoteSnapshot_msg_type_get, _ama.MDSpotXBondMatchQuoteSnapshot_msg_type_set)
    __swig_setmethods__["msg_seq_num"] = _ama.MDSpotXBondMatchQuoteSnapshot_msg_seq_num_set
    __swig_getmethods__["msg_seq_num"] = _ama.MDSpotXBondMatchQuoteSnapshot_msg_seq_num_get
    if _newclass:msg_seq_num = _swig_property(_ama.MDSpotXBondMatchQuoteSnapshot_msg_seq_num_get, _ama.MDSpotXBondMatchQuoteSnapshot_msg_seq_num_set)
    __swig_setmethods__["sending_time"] = _ama.MDSpotXBondMatchQuoteSnapshot_sending_time_set
    __swig_getmethods__["sending_time"] = _ama.MDSpotXBondMatchQuoteSnapshot_sending_time_get
    if _newclass:sending_time = _swig_property(_ama.MDSpotXBondMatchQuoteSnapshot_sending_time_get, _ama.MDSpotXBondMatchQuoteSnapshot_sending_time_set)
    __swig_setmethods__["security_code"] = _ama.MDSpotXBondMatchQuoteSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDSpotXBondMatchQuoteSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDSpotXBondMatchQuoteSnapshot_security_code_get, _ama.MDSpotXBondMatchQuoteSnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDSpotXBondMatchQuoteSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDSpotXBondMatchQuoteSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDSpotXBondMatchQuoteSnapshot_orig_time_get, _ama.MDSpotXBondMatchQuoteSnapshot_orig_time_set)
    __swig_setmethods__["md_book_type"] = _ama.MDSpotXBondMatchQuoteSnapshot_md_book_type_set
    __swig_getmethods__["md_book_type"] = _ama.MDSpotXBondMatchQuoteSnapshot_md_book_type_get
    if _newclass:md_book_type = _swig_property(_ama.MDSpotXBondMatchQuoteSnapshot_md_book_type_get, _ama.MDSpotXBondMatchQuoteSnapshot_md_book_type_set)
    __swig_setmethods__["md_req_id"] = _ama.MDSpotXBondMatchQuoteSnapshot_md_req_id_set
    __swig_getmethods__["md_req_id"] = _ama.MDSpotXBondMatchQuoteSnapshot_md_req_id_get
    if _newclass:md_req_id = _swig_property(_ama.MDSpotXBondMatchQuoteSnapshot_md_req_id_get, _ama.MDSpotXBondMatchQuoteSnapshot_md_req_id_set)
    __swig_setmethods__["settl_type"] = _ama.MDSpotXBondMatchQuoteSnapshot_settl_type_set
    __swig_getmethods__["settl_type"] = _ama.MDSpotXBondMatchQuoteSnapshot_settl_type_get
    if _newclass:settl_type = _swig_property(_ama.MDSpotXBondMatchQuoteSnapshot_settl_type_get, _ama.MDSpotXBondMatchQuoteSnapshot_settl_type_set)
    __swig_setmethods__["bid_volume"] = _ama.MDSpotXBondMatchQuoteSnapshot_bid_volume_set
    __swig_getmethods__["bid_volume"] = _ama.MDSpotXBondMatchQuoteSnapshot_bid_volume_get
    if _newclass:bid_volume = _swig_property(_ama.MDSpotXBondMatchQuoteSnapshot_bid_volume_get, _ama.MDSpotXBondMatchQuoteSnapshot_bid_volume_set)
    __swig_setmethods__["offer_volume"] = _ama.MDSpotXBondMatchQuoteSnapshot_offer_volume_set
    __swig_getmethods__["offer_volume"] = _ama.MDSpotXBondMatchQuoteSnapshot_offer_volume_get
    if _newclass:offer_volume = _swig_property(_ama.MDSpotXBondMatchQuoteSnapshot_offer_volume_get, _ama.MDSpotXBondMatchQuoteSnapshot_offer_volume_set)
    __swig_setmethods__["total_available_volume"] = _ama.MDSpotXBondMatchQuoteSnapshot_total_available_volume_set
    __swig_getmethods__["total_available_volume"] = _ama.MDSpotXBondMatchQuoteSnapshot_total_available_volume_get
    if _newclass:total_available_volume = _swig_property(_ama.MDSpotXBondMatchQuoteSnapshot_total_available_volume_get, _ama.MDSpotXBondMatchQuoteSnapshot_total_available_volume_set)
    __swig_setmethods__["open_clean_price"] = _ama.MDSpotXBondMatchQuoteSnapshot_open_clean_price_set
    __swig_getmethods__["open_clean_price"] = _ama.MDSpotXBondMatchQuoteSnapshot_open_clean_price_get
    if _newclass:open_clean_price = _swig_property(_ama.MDSpotXBondMatchQuoteSnapshot_open_clean_price_get, _ama.MDSpotXBondMatchQuoteSnapshot_open_clean_price_set)
    __swig_setmethods__["open_yield"] = _ama.MDSpotXBondMatchQuoteSnapshot_open_yield_set
    __swig_getmethods__["open_yield"] = _ama.MDSpotXBondMatchQuoteSnapshot_open_yield_get
    if _newclass:open_yield = _swig_property(_ama.MDSpotXBondMatchQuoteSnapshot_open_yield_get, _ama.MDSpotXBondMatchQuoteSnapshot_open_yield_set)
    __swig_setmethods__["variety_category"] = _ama.MDSpotXBondMatchQuoteSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDSpotXBondMatchQuoteSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDSpotXBondMatchQuoteSnapshot_variety_category_get, _ama.MDSpotXBondMatchQuoteSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDSpotXBondMatchQuoteSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDSpotXBondMatchQuoteSnapshot
    __del__ = lambda self : None;
MDSpotXBondMatchQuoteSnapshot_swigregister = _ama.MDSpotXBondMatchQuoteSnapshot_swigregister
MDSpotXBondMatchQuoteSnapshot_swigregister(MDSpotXBondMatchQuoteSnapshot)

class MDPledgeRepoXRepoDepthQuoteSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDPledgeRepoXRepoDepthQuoteSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDPledgeRepoXRepoDepthQuoteSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDPledgeRepoXRepoDepthQuoteSnapshot_market_type_get, _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_market_type_set)
    __swig_setmethods__["msg_type"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_msg_type_set
    __swig_getmethods__["msg_type"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_msg_type_get
    if _newclass:msg_type = _swig_property(_ama.MDPledgeRepoXRepoDepthQuoteSnapshot_msg_type_get, _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_msg_type_set)
    __swig_setmethods__["msg_seq_num"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_msg_seq_num_set
    __swig_getmethods__["msg_seq_num"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_msg_seq_num_get
    if _newclass:msg_seq_num = _swig_property(_ama.MDPledgeRepoXRepoDepthQuoteSnapshot_msg_seq_num_get, _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_msg_seq_num_set)
    __swig_setmethods__["sending_time"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_sending_time_set
    __swig_getmethods__["sending_time"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_sending_time_get
    if _newclass:sending_time = _swig_property(_ama.MDPledgeRepoXRepoDepthQuoteSnapshot_sending_time_get, _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_sending_time_set)
    __swig_setmethods__["security_code"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDPledgeRepoXRepoDepthQuoteSnapshot_security_code_get, _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDPledgeRepoXRepoDepthQuoteSnapshot_orig_time_get, _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_orig_time_set)
    __swig_setmethods__["market_indicator"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_market_indicator_set
    __swig_getmethods__["market_indicator"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_market_indicator_get
    if _newclass:market_indicator = _swig_property(_ama.MDPledgeRepoXRepoDepthQuoteSnapshot_market_indicator_get, _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_market_indicator_set)
    __swig_setmethods__["md_book_type"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_md_book_type_set
    __swig_getmethods__["md_book_type"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_md_book_type_get
    if _newclass:md_book_type = _swig_property(_ama.MDPledgeRepoXRepoDepthQuoteSnapshot_md_book_type_get, _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_md_book_type_set)
    __swig_setmethods__["match_type"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_match_type_set
    __swig_getmethods__["match_type"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_match_type_get
    if _newclass:match_type = _swig_property(_ama.MDPledgeRepoXRepoDepthQuoteSnapshot_match_type_get, _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_match_type_set)
    __swig_setmethods__["md_req_id"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_md_req_id_set
    __swig_getmethods__["md_req_id"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_md_req_id_get
    if _newclass:md_req_id = _swig_property(_ama.MDPledgeRepoXRepoDepthQuoteSnapshot_md_req_id_get, _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_md_req_id_set)
    __swig_setmethods__["bid_price"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_bid_price_set
    __swig_getmethods__["bid_price"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_bid_price_get
    if _newclass:bid_price = _swig_property(_ama.MDPledgeRepoXRepoDepthQuoteSnapshot_bid_price_get, _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_bid_price_set)
    __swig_setmethods__["bid_volume"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_bid_volume_set
    __swig_getmethods__["bid_volume"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_bid_volume_get
    if _newclass:bid_volume = _swig_property(_ama.MDPledgeRepoXRepoDepthQuoteSnapshot_bid_volume_get, _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_bid_volume_set)
    __swig_setmethods__["bid_trade_volume"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_bid_trade_volume_set
    __swig_getmethods__["bid_trade_volume"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_bid_trade_volume_get
    if _newclass:bid_trade_volume = _swig_property(_ama.MDPledgeRepoXRepoDepthQuoteSnapshot_bid_trade_volume_get, _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_bid_trade_volume_set)
    __swig_setmethods__["offer_price"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_offer_price_set
    __swig_getmethods__["offer_price"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_offer_price_get
    if _newclass:offer_price = _swig_property(_ama.MDPledgeRepoXRepoDepthQuoteSnapshot_offer_price_get, _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_offer_price_set)
    __swig_setmethods__["offer_volume"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_offer_volume_set
    __swig_getmethods__["offer_volume"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_offer_volume_get
    if _newclass:offer_volume = _swig_property(_ama.MDPledgeRepoXRepoDepthQuoteSnapshot_offer_volume_get, _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_offer_volume_set)
    __swig_setmethods__["offer_trade_volume"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_offer_trade_volume_set
    __swig_getmethods__["offer_trade_volume"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_offer_trade_volume_get
    if _newclass:offer_trade_volume = _swig_property(_ama.MDPledgeRepoXRepoDepthQuoteSnapshot_offer_trade_volume_get, _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_offer_trade_volume_set)
    __swig_setmethods__["account_id"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_account_id_set
    __swig_getmethods__["account_id"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_account_id_get
    if _newclass:account_id = _swig_property(_ama.MDPledgeRepoXRepoDepthQuoteSnapshot_account_id_get, _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_account_id_set)
    __swig_setmethods__["variety_category"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDPledgeRepoXRepoDepthQuoteSnapshot_variety_category_get, _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDPledgeRepoXRepoDepthQuoteSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDPledgeRepoXRepoDepthQuoteSnapshot
    __del__ = lambda self : None;
MDPledgeRepoXRepoDepthQuoteSnapshot_swigregister = _ama.MDPledgeRepoXRepoDepthQuoteSnapshot_swigregister
MDPledgeRepoXRepoDepthQuoteSnapshot_swigregister(MDPledgeRepoXRepoDepthQuoteSnapshot)

class MDPledgeRepoXRepoBestOfferQuoteSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDPledgeRepoXRepoBestOfferQuoteSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDPledgeRepoXRepoBestOfferQuoteSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_market_type_get, _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_market_type_set)
    __swig_setmethods__["msg_type"] = _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_msg_type_set
    __swig_getmethods__["msg_type"] = _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_msg_type_get
    if _newclass:msg_type = _swig_property(_ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_msg_type_get, _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_msg_type_set)
    __swig_setmethods__["msg_seq_num"] = _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_msg_seq_num_set
    __swig_getmethods__["msg_seq_num"] = _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_msg_seq_num_get
    if _newclass:msg_seq_num = _swig_property(_ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_msg_seq_num_get, _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_msg_seq_num_set)
    __swig_setmethods__["sending_time"] = _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_sending_time_set
    __swig_getmethods__["sending_time"] = _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_sending_time_get
    if _newclass:sending_time = _swig_property(_ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_sending_time_get, _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_sending_time_set)
    __swig_setmethods__["security_code"] = _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_security_code_get, _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_orig_time_get, _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_orig_time_set)
    __swig_setmethods__["market_indicator"] = _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_market_indicator_set
    __swig_getmethods__["market_indicator"] = _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_market_indicator_get
    if _newclass:market_indicator = _swig_property(_ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_market_indicator_get, _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_market_indicator_set)
    __swig_setmethods__["md_book_type"] = _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_md_book_type_set
    __swig_getmethods__["md_book_type"] = _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_md_book_type_get
    if _newclass:md_book_type = _swig_property(_ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_md_book_type_get, _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_md_book_type_set)
    __swig_setmethods__["match_type"] = _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_match_type_set
    __swig_getmethods__["match_type"] = _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_match_type_get
    if _newclass:match_type = _swig_property(_ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_match_type_get, _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_match_type_set)
    __swig_setmethods__["md_req_id"] = _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_md_req_id_set
    __swig_getmethods__["md_req_id"] = _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_md_req_id_get
    if _newclass:md_req_id = _swig_property(_ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_md_req_id_get, _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_md_req_id_set)
    __swig_setmethods__["bid_price"] = _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_bid_price_set
    __swig_getmethods__["bid_price"] = _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_bid_price_get
    if _newclass:bid_price = _swig_property(_ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_bid_price_get, _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_bid_price_set)
    __swig_setmethods__["bid_trade_volume"] = _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_bid_trade_volume_set
    __swig_getmethods__["bid_trade_volume"] = _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_bid_trade_volume_get
    if _newclass:bid_trade_volume = _swig_property(_ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_bid_trade_volume_get, _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_bid_trade_volume_set)
    __swig_setmethods__["offer_price"] = _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_offer_price_set
    __swig_getmethods__["offer_price"] = _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_offer_price_get
    if _newclass:offer_price = _swig_property(_ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_offer_price_get, _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_offer_price_set)
    __swig_setmethods__["offer_trade_volume"] = _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_offer_trade_volume_set
    __swig_getmethods__["offer_trade_volume"] = _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_offer_trade_volume_get
    if _newclass:offer_trade_volume = _swig_property(_ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_offer_trade_volume_get, _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_offer_trade_volume_set)
    __swig_setmethods__["variety_category"] = _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_variety_category_get, _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDPledgeRepoXRepoBestOfferQuoteSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDPledgeRepoXRepoBestOfferQuoteSnapshot
    __del__ = lambda self : None;
MDPledgeRepoXRepoBestOfferQuoteSnapshot_swigregister = _ama.MDPledgeRepoXRepoBestOfferQuoteSnapshot_swigregister
MDPledgeRepoXRepoBestOfferQuoteSnapshot_swigregister(MDPledgeRepoXRepoBestOfferQuoteSnapshot)

class MDSwapXSwapDepthQuoteSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDSwapXSwapDepthQuoteSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDSwapXSwapDepthQuoteSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDSwapXSwapDepthQuoteSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDSwapXSwapDepthQuoteSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDSwapXSwapDepthQuoteSnapshot_market_type_get, _ama.MDSwapXSwapDepthQuoteSnapshot_market_type_set)
    __swig_setmethods__["msg_type"] = _ama.MDSwapXSwapDepthQuoteSnapshot_msg_type_set
    __swig_getmethods__["msg_type"] = _ama.MDSwapXSwapDepthQuoteSnapshot_msg_type_get
    if _newclass:msg_type = _swig_property(_ama.MDSwapXSwapDepthQuoteSnapshot_msg_type_get, _ama.MDSwapXSwapDepthQuoteSnapshot_msg_type_set)
    __swig_setmethods__["msg_seq_num"] = _ama.MDSwapXSwapDepthQuoteSnapshot_msg_seq_num_set
    __swig_getmethods__["msg_seq_num"] = _ama.MDSwapXSwapDepthQuoteSnapshot_msg_seq_num_get
    if _newclass:msg_seq_num = _swig_property(_ama.MDSwapXSwapDepthQuoteSnapshot_msg_seq_num_get, _ama.MDSwapXSwapDepthQuoteSnapshot_msg_seq_num_set)
    __swig_setmethods__["sending_time"] = _ama.MDSwapXSwapDepthQuoteSnapshot_sending_time_set
    __swig_getmethods__["sending_time"] = _ama.MDSwapXSwapDepthQuoteSnapshot_sending_time_get
    if _newclass:sending_time = _swig_property(_ama.MDSwapXSwapDepthQuoteSnapshot_sending_time_get, _ama.MDSwapXSwapDepthQuoteSnapshot_sending_time_set)
    __swig_setmethods__["security_code"] = _ama.MDSwapXSwapDepthQuoteSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDSwapXSwapDepthQuoteSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDSwapXSwapDepthQuoteSnapshot_security_code_get, _ama.MDSwapXSwapDepthQuoteSnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDSwapXSwapDepthQuoteSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDSwapXSwapDepthQuoteSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDSwapXSwapDepthQuoteSnapshot_orig_time_get, _ama.MDSwapXSwapDepthQuoteSnapshot_orig_time_set)
    __swig_setmethods__["market_indicator"] = _ama.MDSwapXSwapDepthQuoteSnapshot_market_indicator_set
    __swig_getmethods__["market_indicator"] = _ama.MDSwapXSwapDepthQuoteSnapshot_market_indicator_get
    if _newclass:market_indicator = _swig_property(_ama.MDSwapXSwapDepthQuoteSnapshot_market_indicator_get, _ama.MDSwapXSwapDepthQuoteSnapshot_market_indicator_set)
    __swig_setmethods__["md_book_type"] = _ama.MDSwapXSwapDepthQuoteSnapshot_md_book_type_set
    __swig_getmethods__["md_book_type"] = _ama.MDSwapXSwapDepthQuoteSnapshot_md_book_type_get
    if _newclass:md_book_type = _swig_property(_ama.MDSwapXSwapDepthQuoteSnapshot_md_book_type_get, _ama.MDSwapXSwapDepthQuoteSnapshot_md_book_type_set)
    __swig_setmethods__["real_time_under_take_flag"] = _ama.MDSwapXSwapDepthQuoteSnapshot_real_time_under_take_flag_set
    __swig_getmethods__["real_time_under_take_flag"] = _ama.MDSwapXSwapDepthQuoteSnapshot_real_time_under_take_flag_get
    if _newclass:real_time_under_take_flag = _swig_property(_ama.MDSwapXSwapDepthQuoteSnapshot_real_time_under_take_flag_get, _ama.MDSwapXSwapDepthQuoteSnapshot_real_time_under_take_flag_set)
    __swig_setmethods__["account_subject_type"] = _ama.MDSwapXSwapDepthQuoteSnapshot_account_subject_type_set
    __swig_getmethods__["account_subject_type"] = _ama.MDSwapXSwapDepthQuoteSnapshot_account_subject_type_get
    if _newclass:account_subject_type = _swig_property(_ama.MDSwapXSwapDepthQuoteSnapshot_account_subject_type_get, _ama.MDSwapXSwapDepthQuoteSnapshot_account_subject_type_set)
    __swig_setmethods__["bid_price"] = _ama.MDSwapXSwapDepthQuoteSnapshot_bid_price_set
    __swig_getmethods__["bid_price"] = _ama.MDSwapXSwapDepthQuoteSnapshot_bid_price_get
    if _newclass:bid_price = _swig_property(_ama.MDSwapXSwapDepthQuoteSnapshot_bid_price_get, _ama.MDSwapXSwapDepthQuoteSnapshot_bid_price_set)
    __swig_setmethods__["bid_volume"] = _ama.MDSwapXSwapDepthQuoteSnapshot_bid_volume_set
    __swig_getmethods__["bid_volume"] = _ama.MDSwapXSwapDepthQuoteSnapshot_bid_volume_get
    if _newclass:bid_volume = _swig_property(_ama.MDSwapXSwapDepthQuoteSnapshot_bid_volume_get, _ama.MDSwapXSwapDepthQuoteSnapshot_bid_volume_set)
    __swig_setmethods__["bid_trade_volume"] = _ama.MDSwapXSwapDepthQuoteSnapshot_bid_trade_volume_set
    __swig_getmethods__["bid_trade_volume"] = _ama.MDSwapXSwapDepthQuoteSnapshot_bid_trade_volume_get
    if _newclass:bid_trade_volume = _swig_property(_ama.MDSwapXSwapDepthQuoteSnapshot_bid_trade_volume_get, _ama.MDSwapXSwapDepthQuoteSnapshot_bid_trade_volume_set)
    __swig_setmethods__["offer_price"] = _ama.MDSwapXSwapDepthQuoteSnapshot_offer_price_set
    __swig_getmethods__["offer_price"] = _ama.MDSwapXSwapDepthQuoteSnapshot_offer_price_get
    if _newclass:offer_price = _swig_property(_ama.MDSwapXSwapDepthQuoteSnapshot_offer_price_get, _ama.MDSwapXSwapDepthQuoteSnapshot_offer_price_set)
    __swig_setmethods__["offer_volume"] = _ama.MDSwapXSwapDepthQuoteSnapshot_offer_volume_set
    __swig_getmethods__["offer_volume"] = _ama.MDSwapXSwapDepthQuoteSnapshot_offer_volume_get
    if _newclass:offer_volume = _swig_property(_ama.MDSwapXSwapDepthQuoteSnapshot_offer_volume_get, _ama.MDSwapXSwapDepthQuoteSnapshot_offer_volume_set)
    __swig_setmethods__["offer_trade_volume"] = _ama.MDSwapXSwapDepthQuoteSnapshot_offer_trade_volume_set
    __swig_getmethods__["offer_trade_volume"] = _ama.MDSwapXSwapDepthQuoteSnapshot_offer_trade_volume_get
    if _newclass:offer_trade_volume = _swig_property(_ama.MDSwapXSwapDepthQuoteSnapshot_offer_trade_volume_get, _ama.MDSwapXSwapDepthQuoteSnapshot_offer_trade_volume_set)
    __swig_setmethods__["variety_category"] = _ama.MDSwapXSwapDepthQuoteSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDSwapXSwapDepthQuoteSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDSwapXSwapDepthQuoteSnapshot_variety_category_get, _ama.MDSwapXSwapDepthQuoteSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDSwapXSwapDepthQuoteSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDSwapXSwapDepthQuoteSnapshot
    __del__ = lambda self : None;
MDSwapXSwapDepthQuoteSnapshot_swigregister = _ama.MDSwapXSwapDepthQuoteSnapshot_swigregister
MDSwapXSwapDepthQuoteSnapshot_swigregister(MDSwapXSwapDepthQuoteSnapshot)

class MDSwapXSwapTickExecution(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDSwapXSwapTickExecution, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDSwapXSwapTickExecution, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDSwapXSwapTickExecution_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDSwapXSwapTickExecution_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDSwapXSwapTickExecution_market_type_get, _ama.MDSwapXSwapTickExecution_market_type_set)
    __swig_setmethods__["msg_type"] = _ama.MDSwapXSwapTickExecution_msg_type_set
    __swig_getmethods__["msg_type"] = _ama.MDSwapXSwapTickExecution_msg_type_get
    if _newclass:msg_type = _swig_property(_ama.MDSwapXSwapTickExecution_msg_type_get, _ama.MDSwapXSwapTickExecution_msg_type_set)
    __swig_setmethods__["msg_seq_num"] = _ama.MDSwapXSwapTickExecution_msg_seq_num_set
    __swig_getmethods__["msg_seq_num"] = _ama.MDSwapXSwapTickExecution_msg_seq_num_get
    if _newclass:msg_seq_num = _swig_property(_ama.MDSwapXSwapTickExecution_msg_seq_num_get, _ama.MDSwapXSwapTickExecution_msg_seq_num_set)
    __swig_setmethods__["sending_time"] = _ama.MDSwapXSwapTickExecution_sending_time_set
    __swig_getmethods__["sending_time"] = _ama.MDSwapXSwapTickExecution_sending_time_get
    if _newclass:sending_time = _swig_property(_ama.MDSwapXSwapTickExecution_sending_time_get, _ama.MDSwapXSwapTickExecution_sending_time_set)
    __swig_setmethods__["security_code"] = _ama.MDSwapXSwapTickExecution_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDSwapXSwapTickExecution_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDSwapXSwapTickExecution_security_code_get, _ama.MDSwapXSwapTickExecution_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDSwapXSwapTickExecution_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDSwapXSwapTickExecution_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDSwapXSwapTickExecution_orig_time_get, _ama.MDSwapXSwapTickExecution_orig_time_set)
    __swig_setmethods__["market_indicator"] = _ama.MDSwapXSwapTickExecution_market_indicator_set
    __swig_getmethods__["market_indicator"] = _ama.MDSwapXSwapTickExecution_market_indicator_get
    if _newclass:market_indicator = _swig_property(_ama.MDSwapXSwapTickExecution_market_indicator_get, _ama.MDSwapXSwapTickExecution_market_indicator_set)
    __swig_setmethods__["md_book_type"] = _ama.MDSwapXSwapTickExecution_md_book_type_set
    __swig_getmethods__["md_book_type"] = _ama.MDSwapXSwapTickExecution_md_book_type_get
    if _newclass:md_book_type = _swig_property(_ama.MDSwapXSwapTickExecution_md_book_type_get, _ama.MDSwapXSwapTickExecution_md_book_type_set)
    __swig_setmethods__["trade_method"] = _ama.MDSwapXSwapTickExecution_trade_method_set
    __swig_getmethods__["trade_method"] = _ama.MDSwapXSwapTickExecution_trade_method_get
    if _newclass:trade_method = _swig_property(_ama.MDSwapXSwapTickExecution_trade_method_get, _ama.MDSwapXSwapTickExecution_trade_method_set)
    __swig_setmethods__["real_time_under_take_flag"] = _ama.MDSwapXSwapTickExecution_real_time_under_take_flag_set
    __swig_getmethods__["real_time_under_take_flag"] = _ama.MDSwapXSwapTickExecution_real_time_under_take_flag_get
    if _newclass:real_time_under_take_flag = _swig_property(_ama.MDSwapXSwapTickExecution_real_time_under_take_flag_get, _ama.MDSwapXSwapTickExecution_real_time_under_take_flag_set)
    __swig_setmethods__["transaction_method"] = _ama.MDSwapXSwapTickExecution_transaction_method_set
    __swig_getmethods__["transaction_method"] = _ama.MDSwapXSwapTickExecution_transaction_method_get
    if _newclass:transaction_method = _swig_property(_ama.MDSwapXSwapTickExecution_transaction_method_get, _ama.MDSwapXSwapTickExecution_transaction_method_set)
    __swig_setmethods__["bridge_deal_indic"] = _ama.MDSwapXSwapTickExecution_bridge_deal_indic_set
    __swig_getmethods__["bridge_deal_indic"] = _ama.MDSwapXSwapTickExecution_bridge_deal_indic_get
    if _newclass:bridge_deal_indic = _swig_property(_ama.MDSwapXSwapTickExecution_bridge_deal_indic_get, _ama.MDSwapXSwapTickExecution_bridge_deal_indic_set)
    __swig_setmethods__["split_indicator"] = _ama.MDSwapXSwapTickExecution_split_indicator_set
    __swig_getmethods__["split_indicator"] = _ama.MDSwapXSwapTickExecution_split_indicator_get
    if _newclass:split_indicator = _swig_property(_ama.MDSwapXSwapTickExecution_split_indicator_get, _ama.MDSwapXSwapTickExecution_split_indicator_set)
    __swig_setmethods__["exec_price"] = _ama.MDSwapXSwapTickExecution_exec_price_set
    __swig_getmethods__["exec_price"] = _ama.MDSwapXSwapTickExecution_exec_price_get
    if _newclass:exec_price = _swig_property(_ama.MDSwapXSwapTickExecution_exec_price_get, _ama.MDSwapXSwapTickExecution_exec_price_set)
    __swig_setmethods__["exec_volume"] = _ama.MDSwapXSwapTickExecution_exec_volume_set
    __swig_getmethods__["exec_volume"] = _ama.MDSwapXSwapTickExecution_exec_volume_get
    if _newclass:exec_volume = _swig_property(_ama.MDSwapXSwapTickExecution_exec_volume_get, _ama.MDSwapXSwapTickExecution_exec_volume_set)
    __swig_setmethods__["variety_category"] = _ama.MDSwapXSwapTickExecution_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDSwapXSwapTickExecution_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDSwapXSwapTickExecution_variety_category_get, _ama.MDSwapXSwapTickExecution_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDSwapXSwapTickExecution()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDSwapXSwapTickExecution
    __del__ = lambda self : None;
MDSwapXSwapTickExecution_swigregister = _ama.MDSwapXSwapTickExecution_swigregister
MDSwapXSwapTickExecution_swigregister(MDSwapXSwapTickExecution)

class BondInfoCreditItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BondInfoCreditItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BondInfoCreditItem, name)
    __repr__ = _swig_repr
    __swig_setmethods__["credit_rating_agency"] = _ama.BondInfoCreditItem_credit_rating_agency_set
    __swig_getmethods__["credit_rating_agency"] = _ama.BondInfoCreditItem_credit_rating_agency_get
    if _newclass:credit_rating_agency = _swig_property(_ama.BondInfoCreditItem_credit_rating_agency_get, _ama.BondInfoCreditItem_credit_rating_agency_set)
    __swig_setmethods__["credit_rating"] = _ama.BondInfoCreditItem_credit_rating_set
    __swig_getmethods__["credit_rating"] = _ama.BondInfoCreditItem_credit_rating_get
    if _newclass:credit_rating = _swig_property(_ama.BondInfoCreditItem_credit_rating_get, _ama.BondInfoCreditItem_credit_rating_set)
    __swig_setmethods__["credit_validity_start_date"] = _ama.BondInfoCreditItem_credit_validity_start_date_set
    __swig_getmethods__["credit_validity_start_date"] = _ama.BondInfoCreditItem_credit_validity_start_date_get
    if _newclass:credit_validity_start_date = _swig_property(_ama.BondInfoCreditItem_credit_validity_start_date_get, _ama.BondInfoCreditItem_credit_validity_start_date_set)
    __swig_setmethods__["credit_validity_end_date"] = _ama.BondInfoCreditItem_credit_validity_end_date_set
    __swig_getmethods__["credit_validity_end_date"] = _ama.BondInfoCreditItem_credit_validity_end_date_get
    if _newclass:credit_validity_end_date = _swig_property(_ama.BondInfoCreditItem_credit_validity_end_date_get, _ama.BondInfoCreditItem_credit_validity_end_date_set)
    def __init__(self): 
        this = _ama.new_BondInfoCreditItem()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_BondInfoCreditItem
    __del__ = lambda self : None;
BondInfoCreditItem_swigregister = _ama.BondInfoCreditItem_swigregister
BondInfoCreditItem_swigregister(BondInfoCreditItem)

class BondInfoConvertItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BondInfoConvertItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BondInfoConvertItem, name)
    __repr__ = _swig_repr
    __swig_setmethods__["convert_date"] = _ama.BondInfoConvertItem_convert_date_set
    __swig_getmethods__["convert_date"] = _ama.BondInfoConvertItem_convert_date_get
    if _newclass:convert_date = _swig_property(_ama.BondInfoConvertItem_convert_date_get, _ama.BondInfoConvertItem_convert_date_set)
    __swig_setmethods__["convert_type"] = _ama.BondInfoConvertItem_convert_type_set
    __swig_getmethods__["convert_type"] = _ama.BondInfoConvertItem_convert_type_get
    if _newclass:convert_type = _swig_property(_ama.BondInfoConvertItem_convert_type_get, _ama.BondInfoConvertItem_convert_type_set)
    __swig_setmethods__["convert_ratio"] = _ama.BondInfoConvertItem_convert_ratio_set
    __swig_getmethods__["convert_ratio"] = _ama.BondInfoConvertItem_convert_ratio_get
    if _newclass:convert_ratio = _swig_property(_ama.BondInfoConvertItem_convert_ratio_get, _ama.BondInfoConvertItem_convert_ratio_set)
    __swig_setmethods__["convert_price"] = _ama.BondInfoConvertItem_convert_price_set
    __swig_getmethods__["convert_price"] = _ama.BondInfoConvertItem_convert_price_get
    if _newclass:convert_price = _swig_property(_ama.BondInfoConvertItem_convert_price_get, _ama.BondInfoConvertItem_convert_price_set)
    def __init__(self): 
        this = _ama.new_BondInfoConvertItem()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_BondInfoConvertItem
    __del__ = lambda self : None;
BondInfoConvertItem_swigregister = _ama.BondInfoConvertItem_swigregister
BondInfoConvertItem_swigregister(BondInfoConvertItem)

class BondInfoReissueItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BondInfoReissueItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BondInfoReissueItem, name)
    __repr__ = _swig_repr
    __swig_setmethods__["reissue_date"] = _ama.BondInfoReissueItem_reissue_date_set
    __swig_getmethods__["reissue_date"] = _ama.BondInfoReissueItem_reissue_date_get
    if _newclass:reissue_date = _swig_property(_ama.BondInfoReissueItem_reissue_date_get, _ama.BondInfoReissueItem_reissue_date_set)
    __swig_setmethods__["reissue_event_date"] = _ama.BondInfoReissueItem_reissue_event_date_set
    __swig_getmethods__["reissue_event_date"] = _ama.BondInfoReissueItem_reissue_event_date_get
    if _newclass:reissue_event_date = _swig_property(_ama.BondInfoReissueItem_reissue_event_date_get, _ama.BondInfoReissueItem_reissue_event_date_set)
    __swig_setmethods__["reissue_volume"] = _ama.BondInfoReissueItem_reissue_volume_set
    __swig_getmethods__["reissue_volume"] = _ama.BondInfoReissueItem_reissue_volume_get
    if _newclass:reissue_volume = _swig_property(_ama.BondInfoReissueItem_reissue_volume_get, _ama.BondInfoReissueItem_reissue_volume_set)
    def __init__(self): 
        this = _ama.new_BondInfoReissueItem()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_BondInfoReissueItem
    __del__ = lambda self : None;
BondInfoReissueItem_swigregister = _ama.BondInfoReissueItem_swigregister
BondInfoReissueItem_swigregister(BondInfoReissueItem)

class BondInfoExerciseItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BondInfoExerciseItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BondInfoExerciseItem, name)
    __repr__ = _swig_repr
    __swig_setmethods__["exercise_type"] = _ama.BondInfoExerciseItem_exercise_type_set
    __swig_getmethods__["exercise_type"] = _ama.BondInfoExerciseItem_exercise_type_get
    if _newclass:exercise_type = _swig_property(_ama.BondInfoExerciseItem_exercise_type_get, _ama.BondInfoExerciseItem_exercise_type_set)
    __swig_setmethods__["exercise_date"] = _ama.BondInfoExerciseItem_exercise_date_set
    __swig_getmethods__["exercise_date"] = _ama.BondInfoExerciseItem_exercise_date_get
    if _newclass:exercise_date = _swig_property(_ama.BondInfoExerciseItem_exercise_date_get, _ama.BondInfoExerciseItem_exercise_date_set)
    __swig_setmethods__["exercise_price"] = _ama.BondInfoExerciseItem_exercise_price_set
    __swig_getmethods__["exercise_price"] = _ama.BondInfoExerciseItem_exercise_price_get
    if _newclass:exercise_price = _swig_property(_ama.BondInfoExerciseItem_exercise_price_get, _ama.BondInfoExerciseItem_exercise_price_set)
    __swig_setmethods__["exercise_volume"] = _ama.BondInfoExerciseItem_exercise_volume_set
    __swig_getmethods__["exercise_volume"] = _ama.BondInfoExerciseItem_exercise_volume_get
    if _newclass:exercise_volume = _swig_property(_ama.BondInfoExerciseItem_exercise_volume_get, _ama.BondInfoExerciseItem_exercise_volume_set)
    __swig_setmethods__["exercise_spread"] = _ama.BondInfoExerciseItem_exercise_spread_set
    __swig_getmethods__["exercise_spread"] = _ama.BondInfoExerciseItem_exercise_spread_get
    if _newclass:exercise_spread = _swig_property(_ama.BondInfoExerciseItem_exercise_spread_get, _ama.BondInfoExerciseItem_exercise_spread_set)
    def __init__(self): 
        this = _ama.new_BondInfoExerciseItem()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_BondInfoExerciseItem
    __del__ = lambda self : None;
BondInfoExerciseItem_swigregister = _ama.BondInfoExerciseItem_swigregister
BondInfoExerciseItem_swigregister(BondInfoExerciseItem)

class MDBondInfoInterbank(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDBondInfoInterbank, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDBondInfoInterbank, name)
    __repr__ = _swig_repr
    __swig_setmethods__["security_type"] = _ama.MDBondInfoInterbank_security_type_set
    __swig_getmethods__["security_type"] = _ama.MDBondInfoInterbank_security_type_get
    if _newclass:security_type = _swig_property(_ama.MDBondInfoInterbank_security_type_get, _ama.MDBondInfoInterbank_security_type_set)
    __swig_setmethods__["symbol"] = _ama.MDBondInfoInterbank_symbol_set
    __swig_getmethods__["symbol"] = _ama.MDBondInfoInterbank_symbol_get
    if _newclass:symbol = _swig_property(_ama.MDBondInfoInterbank_symbol_get, _ama.MDBondInfoInterbank_symbol_set)
    __swig_setmethods__["security_code"] = _ama.MDBondInfoInterbank_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDBondInfoInterbank_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDBondInfoInterbank_security_code_get, _ama.MDBondInfoInterbank_security_code_set)
    __swig_setmethods__["security_type_code"] = _ama.MDBondInfoInterbank_security_type_code_set
    __swig_getmethods__["security_type_code"] = _ama.MDBondInfoInterbank_security_type_code_get
    if _newclass:security_type_code = _swig_property(_ama.MDBondInfoInterbank_security_type_code_get, _ama.MDBondInfoInterbank_security_type_code_set)
    __swig_setmethods__["standard_compen_period"] = _ama.MDBondInfoInterbank_standard_compen_period_set
    __swig_getmethods__["standard_compen_period"] = _ama.MDBondInfoInterbank_standard_compen_period_get
    if _newclass:standard_compen_period = _swig_property(_ama.MDBondInfoInterbank_standard_compen_period_get, _ama.MDBondInfoInterbank_standard_compen_period_set)
    __swig_setmethods__["issuer_code"] = _ama.MDBondInfoInterbank_issuer_code_set
    __swig_getmethods__["issuer_code"] = _ama.MDBondInfoInterbank_issuer_code_get
    if _newclass:issuer_code = _swig_property(_ama.MDBondInfoInterbank_issuer_code_get, _ama.MDBondInfoInterbank_issuer_code_set)
    __swig_setmethods__["issue_size"] = _ama.MDBondInfoInterbank_issue_size_set
    __swig_getmethods__["issue_size"] = _ama.MDBondInfoInterbank_issue_size_get
    if _newclass:issue_size = _swig_property(_ama.MDBondInfoInterbank_issue_size_get, _ama.MDBondInfoInterbank_issue_size_set)
    __swig_setmethods__["issue_price"] = _ama.MDBondInfoInterbank_issue_price_set
    __swig_getmethods__["issue_price"] = _ama.MDBondInfoInterbank_issue_price_get
    if _newclass:issue_price = _swig_property(_ama.MDBondInfoInterbank_issue_price_get, _ama.MDBondInfoInterbank_issue_price_set)
    __swig_setmethods__["face_value"] = _ama.MDBondInfoInterbank_face_value_set
    __swig_getmethods__["face_value"] = _ama.MDBondInfoInterbank_face_value_get
    if _newclass:face_value = _swig_property(_ama.MDBondInfoInterbank_face_value_get, _ama.MDBondInfoInterbank_face_value_set)
    __swig_setmethods__["issue_date"] = _ama.MDBondInfoInterbank_issue_date_set
    __swig_getmethods__["issue_date"] = _ama.MDBondInfoInterbank_issue_date_get
    if _newclass:issue_date = _swig_property(_ama.MDBondInfoInterbank_issue_date_get, _ama.MDBondInfoInterbank_issue_date_set)
    __swig_setmethods__["circulation_volume"] = _ama.MDBondInfoInterbank_circulation_volume_set
    __swig_getmethods__["circulation_volume"] = _ama.MDBondInfoInterbank_circulation_volume_get
    if _newclass:circulation_volume = _swig_property(_ama.MDBondInfoInterbank_circulation_volume_get, _ama.MDBondInfoInterbank_circulation_volume_set)
    __swig_setmethods__["expiry_date"] = _ama.MDBondInfoInterbank_expiry_date_set
    __swig_getmethods__["expiry_date"] = _ama.MDBondInfoInterbank_expiry_date_get
    if _newclass:expiry_date = _swig_property(_ama.MDBondInfoInterbank_expiry_date_get, _ama.MDBondInfoInterbank_expiry_date_set)
    __swig_setmethods__["bond_maturity"] = _ama.MDBondInfoInterbank_bond_maturity_set
    __swig_getmethods__["bond_maturity"] = _ama.MDBondInfoInterbank_bond_maturity_get
    if _newclass:bond_maturity = _swig_property(_ama.MDBondInfoInterbank_bond_maturity_get, _ama.MDBondInfoInterbank_bond_maturity_set)
    __swig_setmethods__["compen_period"] = _ama.MDBondInfoInterbank_compen_period_set
    __swig_getmethods__["compen_period"] = _ama.MDBondInfoInterbank_compen_period_get
    if _newclass:compen_period = _swig_property(_ama.MDBondInfoInterbank_compen_period_get, _ama.MDBondInfoInterbank_compen_period_set)
    __swig_setmethods__["acrd_int_amt"] = _ama.MDBondInfoInterbank_acrd_int_amt_set
    __swig_getmethods__["acrd_int_amt"] = _ama.MDBondInfoInterbank_acrd_int_amt_get
    if _newclass:acrd_int_amt = _swig_property(_ama.MDBondInfoInterbank_acrd_int_amt_get, _ama.MDBondInfoInterbank_acrd_int_amt_set)
    __swig_setmethods__["list_date"] = _ama.MDBondInfoInterbank_list_date_set
    __swig_getmethods__["list_date"] = _ama.MDBondInfoInterbank_list_date_get
    if _newclass:list_date = _swig_property(_ama.MDBondInfoInterbank_list_date_get, _ama.MDBondInfoInterbank_list_date_set)
    __swig_setmethods__["delist_date"] = _ama.MDBondInfoInterbank_delist_date_set
    __swig_getmethods__["delist_date"] = _ama.MDBondInfoInterbank_delist_date_get
    if _newclass:delist_date = _swig_property(_ama.MDBondInfoInterbank_delist_date_get, _ama.MDBondInfoInterbank_delist_date_set)
    __swig_setmethods__["status"] = _ama.MDBondInfoInterbank_status_set
    __swig_getmethods__["status"] = _ama.MDBondInfoInterbank_status_get
    if _newclass:status = _swig_property(_ama.MDBondInfoInterbank_status_get, _ama.MDBondInfoInterbank_status_set)
    __swig_setmethods__["special_debt"] = _ama.MDBondInfoInterbank_special_debt_set
    __swig_getmethods__["special_debt"] = _ama.MDBondInfoInterbank_special_debt_get
    if _newclass:special_debt = _swig_property(_ama.MDBondInfoInterbank_special_debt_get, _ama.MDBondInfoInterbank_special_debt_set)
    __swig_setmethods__["default_bond_indicator"] = _ama.MDBondInfoInterbank_default_bond_indicator_set
    __swig_getmethods__["default_bond_indicator"] = _ama.MDBondInfoInterbank_default_bond_indicator_get
    if _newclass:default_bond_indicator = _swig_property(_ama.MDBondInfoInterbank_default_bond_indicator_get, _ama.MDBondInfoInterbank_default_bond_indicator_set)
    __swig_setmethods__["eventdate_start_date"] = _ama.MDBondInfoInterbank_eventdate_start_date_set
    __swig_getmethods__["eventdate_start_date"] = _ama.MDBondInfoInterbank_eventdate_start_date_get
    if _newclass:eventdate_start_date = _swig_property(_ama.MDBondInfoInterbank_eventdate_start_date_get, _ama.MDBondInfoInterbank_eventdate_start_date_set)
    __swig_setmethods__["eventdate_end_date"] = _ama.MDBondInfoInterbank_eventdate_end_date_set
    __swig_getmethods__["eventdate_end_date"] = _ama.MDBondInfoInterbank_eventdate_end_date_get
    if _newclass:eventdate_end_date = _swig_property(_ama.MDBondInfoInterbank_eventdate_end_date_get, _ama.MDBondInfoInterbank_eventdate_end_date_set)
    __swig_setmethods__["credit_item_cnt"] = _ama.MDBondInfoInterbank_credit_item_cnt_set
    __swig_getmethods__["credit_item_cnt"] = _ama.MDBondInfoInterbank_credit_item_cnt_get
    if _newclass:credit_item_cnt = _swig_property(_ama.MDBondInfoInterbank_credit_item_cnt_get, _ama.MDBondInfoInterbank_credit_item_cnt_set)
    __swig_setmethods__["credit_items"] = _ama.MDBondInfoInterbank_credit_items_set
    __swig_getmethods__["credit_items"] = _ama.MDBondInfoInterbank_credit_items_get
    if _newclass:credit_items = _swig_property(_ama.MDBondInfoInterbank_credit_items_get, _ama.MDBondInfoInterbank_credit_items_set)
    __swig_setmethods__["coupon_rate_type"] = _ama.MDBondInfoInterbank_coupon_rate_type_set
    __swig_getmethods__["coupon_rate_type"] = _ama.MDBondInfoInterbank_coupon_rate_type_get
    if _newclass:coupon_rate_type = _swig_property(_ama.MDBondInfoInterbank_coupon_rate_type_get, _ama.MDBondInfoInterbank_coupon_rate_type_set)
    __swig_setmethods__["coupon_payment_frequency"] = _ama.MDBondInfoInterbank_coupon_payment_frequency_set
    __swig_getmethods__["coupon_payment_frequency"] = _ama.MDBondInfoInterbank_coupon_payment_frequency_get
    if _newclass:coupon_payment_frequency = _swig_property(_ama.MDBondInfoInterbank_coupon_payment_frequency_get, _ama.MDBondInfoInterbank_coupon_payment_frequency_set)
    __swig_setmethods__["interest_accrual_method"] = _ama.MDBondInfoInterbank_interest_accrual_method_set
    __swig_getmethods__["interest_accrual_method"] = _ama.MDBondInfoInterbank_interest_accrual_method_get
    if _newclass:interest_accrual_method = _swig_property(_ama.MDBondInfoInterbank_interest_accrual_method_get, _ama.MDBondInfoInterbank_interest_accrual_method_set)
    __swig_setmethods__["interest_basis"] = _ama.MDBondInfoInterbank_interest_basis_set
    __swig_getmethods__["interest_basis"] = _ama.MDBondInfoInterbank_interest_basis_get
    if _newclass:interest_basis = _swig_property(_ama.MDBondInfoInterbank_interest_basis_get, _ama.MDBondInfoInterbank_interest_basis_set)
    __swig_setmethods__["settle_date"] = _ama.MDBondInfoInterbank_settle_date_set
    __swig_getmethods__["settle_date"] = _ama.MDBondInfoInterbank_settle_date_get
    if _newclass:settle_date = _swig_property(_ama.MDBondInfoInterbank_settle_date_get, _ama.MDBondInfoInterbank_settle_date_set)
    __swig_setmethods__["first_interest_payment_date"] = _ama.MDBondInfoInterbank_first_interest_payment_date_set
    __swig_getmethods__["first_interest_payment_date"] = _ama.MDBondInfoInterbank_first_interest_payment_date_get
    if _newclass:first_interest_payment_date = _swig_property(_ama.MDBondInfoInterbank_first_interest_payment_date_get, _ama.MDBondInfoInterbank_first_interest_payment_date_set)
    __swig_setmethods__["fixed_rate"] = _ama.MDBondInfoInterbank_fixed_rate_set
    __swig_getmethods__["fixed_rate"] = _ama.MDBondInfoInterbank_fixed_rate_get
    if _newclass:fixed_rate = _swig_property(_ama.MDBondInfoInterbank_fixed_rate_get, _ama.MDBondInfoInterbank_fixed_rate_set)
    __swig_setmethods__["base_rate_name"] = _ama.MDBondInfoInterbank_base_rate_name_set
    __swig_getmethods__["base_rate_name"] = _ama.MDBondInfoInterbank_base_rate_name_get
    if _newclass:base_rate_name = _swig_property(_ama.MDBondInfoInterbank_base_rate_name_get, _ama.MDBondInfoInterbank_base_rate_name_set)
    __swig_setmethods__["base_rate_value"] = _ama.MDBondInfoInterbank_base_rate_value_set
    __swig_getmethods__["base_rate_value"] = _ama.MDBondInfoInterbank_base_rate_value_get
    if _newclass:base_rate_value = _swig_property(_ama.MDBondInfoInterbank_base_rate_value_get, _ama.MDBondInfoInterbank_base_rate_value_set)
    __swig_setmethods__["base_rate_spread"] = _ama.MDBondInfoInterbank_base_rate_spread_set
    __swig_getmethods__["base_rate_spread"] = _ama.MDBondInfoInterbank_base_rate_spread_get
    if _newclass:base_rate_spread = _swig_property(_ama.MDBondInfoInterbank_base_rate_spread_get, _ama.MDBondInfoInterbank_base_rate_spread_set)
    __swig_setmethods__["interest_cap_rate"] = _ama.MDBondInfoInterbank_interest_cap_rate_set
    __swig_getmethods__["interest_cap_rate"] = _ama.MDBondInfoInterbank_interest_cap_rate_get
    if _newclass:interest_cap_rate = _swig_property(_ama.MDBondInfoInterbank_interest_cap_rate_get, _ama.MDBondInfoInterbank_interest_cap_rate_set)
    __swig_setmethods__["interest_floor_rate"] = _ama.MDBondInfoInterbank_interest_floor_rate_set
    __swig_getmethods__["interest_floor_rate"] = _ama.MDBondInfoInterbank_interest_floor_rate_get
    if _newclass:interest_floor_rate = _swig_property(_ama.MDBondInfoInterbank_interest_floor_rate_get, _ama.MDBondInfoInterbank_interest_floor_rate_set)
    __swig_setmethods__["current_coupon_rate"] = _ama.MDBondInfoInterbank_current_coupon_rate_set
    __swig_getmethods__["current_coupon_rate"] = _ama.MDBondInfoInterbank_current_coupon_rate_get
    if _newclass:current_coupon_rate = _swig_property(_ama.MDBondInfoInterbank_current_coupon_rate_get, _ama.MDBondInfoInterbank_current_coupon_rate_set)
    __swig_setmethods__["issuer_agency_symbol"] = _ama.MDBondInfoInterbank_issuer_agency_symbol_set
    __swig_getmethods__["issuer_agency_symbol"] = _ama.MDBondInfoInterbank_issuer_agency_symbol_get
    if _newclass:issuer_agency_symbol = _swig_property(_ama.MDBondInfoInterbank_issuer_agency_symbol_get, _ama.MDBondInfoInterbank_issuer_agency_symbol_set)
    __swig_setmethods__["convert_item_cnt"] = _ama.MDBondInfoInterbank_convert_item_cnt_set
    __swig_getmethods__["convert_item_cnt"] = _ama.MDBondInfoInterbank_convert_item_cnt_get
    if _newclass:convert_item_cnt = _swig_property(_ama.MDBondInfoInterbank_convert_item_cnt_get, _ama.MDBondInfoInterbank_convert_item_cnt_set)
    __swig_setmethods__["convert_items"] = _ama.MDBondInfoInterbank_convert_items_set
    __swig_getmethods__["convert_items"] = _ama.MDBondInfoInterbank_convert_items_get
    if _newclass:convert_items = _swig_property(_ama.MDBondInfoInterbank_convert_items_get, _ama.MDBondInfoInterbank_convert_items_set)
    __swig_setmethods__["reissue_indicator"] = _ama.MDBondInfoInterbank_reissue_indicator_set
    __swig_getmethods__["reissue_indicator"] = _ama.MDBondInfoInterbank_reissue_indicator_get
    if _newclass:reissue_indicator = _swig_property(_ama.MDBondInfoInterbank_reissue_indicator_get, _ama.MDBondInfoInterbank_reissue_indicator_set)
    __swig_setmethods__["reissue_item_cnt"] = _ama.MDBondInfoInterbank_reissue_item_cnt_set
    __swig_getmethods__["reissue_item_cnt"] = _ama.MDBondInfoInterbank_reissue_item_cnt_get
    if _newclass:reissue_item_cnt = _swig_property(_ama.MDBondInfoInterbank_reissue_item_cnt_get, _ama.MDBondInfoInterbank_reissue_item_cnt_set)
    __swig_setmethods__["reissue_items"] = _ama.MDBondInfoInterbank_reissue_items_set
    __swig_getmethods__["reissue_items"] = _ama.MDBondInfoInterbank_reissue_items_get
    if _newclass:reissue_items = _swig_property(_ama.MDBondInfoInterbank_reissue_items_get, _ama.MDBondInfoInterbank_reissue_items_set)
    __swig_setmethods__["exercise_item_cnt"] = _ama.MDBondInfoInterbank_exercise_item_cnt_set
    __swig_getmethods__["exercise_item_cnt"] = _ama.MDBondInfoInterbank_exercise_item_cnt_get
    if _newclass:exercise_item_cnt = _swig_property(_ama.MDBondInfoInterbank_exercise_item_cnt_get, _ama.MDBondInfoInterbank_exercise_item_cnt_set)
    __swig_setmethods__["exercise_items"] = _ama.MDBondInfoInterbank_exercise_items_set
    __swig_getmethods__["exercise_items"] = _ama.MDBondInfoInterbank_exercise_items_get
    if _newclass:exercise_items = _swig_property(_ama.MDBondInfoInterbank_exercise_items_get, _ama.MDBondInfoInterbank_exercise_items_set)
    __swig_setmethods__["custodian_agency"] = _ama.MDBondInfoInterbank_custodian_agency_set
    __swig_getmethods__["custodian_agency"] = _ama.MDBondInfoInterbank_custodian_agency_get
    if _newclass:custodian_agency = _swig_property(_ama.MDBondInfoInterbank_custodian_agency_get, _ama.MDBondInfoInterbank_custodian_agency_set)
    __swig_setmethods__["net_settl_indicator"] = _ama.MDBondInfoInterbank_net_settl_indicator_set
    __swig_getmethods__["net_settl_indicator"] = _ama.MDBondInfoInterbank_net_settl_indicator_get
    if _newclass:net_settl_indicator = _swig_property(_ama.MDBondInfoInterbank_net_settl_indicator_get, _ama.MDBondInfoInterbank_net_settl_indicator_set)
    __swig_setmethods__["currency"] = _ama.MDBondInfoInterbank_currency_set
    __swig_getmethods__["currency"] = _ama.MDBondInfoInterbank_currency_get
    if _newclass:currency = _swig_property(_ama.MDBondInfoInterbank_currency_get, _ama.MDBondInfoInterbank_currency_set)
    __swig_setmethods__["circulation_range"] = _ama.MDBondInfoInterbank_circulation_range_set
    __swig_getmethods__["circulation_range"] = _ama.MDBondInfoInterbank_circulation_range_get
    if _newclass:circulation_range = _swig_property(_ama.MDBondInfoInterbank_circulation_range_get, _ama.MDBondInfoInterbank_circulation_range_set)
    def __init__(self): 
        this = _ama.new_MDBondInfoInterbank()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDBondInfoInterbank
    __del__ = lambda self : None;
MDBondInfoInterbank_swigregister = _ama.MDBondInfoInterbank_swigregister
MDBondInfoInterbank_swigregister(MDBondInfoInterbank)

class MDABSInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDABSInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDABSInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["symbol"] = _ama.MDABSInfo_symbol_set
    __swig_getmethods__["symbol"] = _ama.MDABSInfo_symbol_get
    if _newclass:symbol = _swig_property(_ama.MDABSInfo_symbol_get, _ama.MDABSInfo_symbol_set)
    __swig_setmethods__["security_code"] = _ama.MDABSInfo_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDABSInfo_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDABSInfo_security_code_get, _ama.MDABSInfo_security_code_set)
    __swig_setmethods__["issuer_code"] = _ama.MDABSInfo_issuer_code_set
    __swig_getmethods__["issuer_code"] = _ama.MDABSInfo_issuer_code_get
    if _newclass:issuer_code = _swig_property(_ama.MDABSInfo_issuer_code_get, _ama.MDABSInfo_issuer_code_set)
    __swig_setmethods__["security_type"] = _ama.MDABSInfo_security_type_set
    __swig_getmethods__["security_type"] = _ama.MDABSInfo_security_type_get
    if _newclass:security_type = _swig_property(_ama.MDABSInfo_security_type_get, _ama.MDABSInfo_security_type_set)
    __swig_setmethods__["security_type_code"] = _ama.MDABSInfo_security_type_code_set
    __swig_getmethods__["security_type_code"] = _ama.MDABSInfo_security_type_code_get
    if _newclass:security_type_code = _swig_property(_ama.MDABSInfo_security_type_code_get, _ama.MDABSInfo_security_type_code_set)
    __swig_setmethods__["standard_compen_period"] = _ama.MDABSInfo_standard_compen_period_set
    __swig_getmethods__["standard_compen_period"] = _ama.MDABSInfo_standard_compen_period_get
    if _newclass:standard_compen_period = _swig_property(_ama.MDABSInfo_standard_compen_period_get, _ama.MDABSInfo_standard_compen_period_set)
    __swig_setmethods__["currency"] = _ama.MDABSInfo_currency_set
    __swig_getmethods__["currency"] = _ama.MDABSInfo_currency_get
    if _newclass:currency = _swig_property(_ama.MDABSInfo_currency_get, _ama.MDABSInfo_currency_set)
    __swig_setmethods__["issue_volume"] = _ama.MDABSInfo_issue_volume_set
    __swig_getmethods__["issue_volume"] = _ama.MDABSInfo_issue_volume_get
    if _newclass:issue_volume = _swig_property(_ama.MDABSInfo_issue_volume_get, _ama.MDABSInfo_issue_volume_set)
    __swig_setmethods__["circulation_volume"] = _ama.MDABSInfo_circulation_volume_set
    __swig_getmethods__["circulation_volume"] = _ama.MDABSInfo_circulation_volume_get
    if _newclass:circulation_volume = _swig_property(_ama.MDABSInfo_circulation_volume_get, _ama.MDABSInfo_circulation_volume_set)
    __swig_setmethods__["principal_price"] = _ama.MDABSInfo_principal_price_set
    __swig_getmethods__["principal_price"] = _ama.MDABSInfo_principal_price_get
    if _newclass:principal_price = _swig_property(_ama.MDABSInfo_principal_price_get, _ama.MDABSInfo_principal_price_set)
    __swig_setmethods__["interest_basis"] = _ama.MDABSInfo_interest_basis_set
    __swig_getmethods__["interest_basis"] = _ama.MDABSInfo_interest_basis_get
    if _newclass:interest_basis = _swig_property(_ama.MDABSInfo_interest_basis_get, _ama.MDABSInfo_interest_basis_set)
    __swig_setmethods__["issue_date"] = _ama.MDABSInfo_issue_date_set
    __swig_getmethods__["issue_date"] = _ama.MDABSInfo_issue_date_get
    if _newclass:issue_date = _swig_property(_ama.MDABSInfo_issue_date_get, _ama.MDABSInfo_issue_date_set)
    __swig_setmethods__["list_date"] = _ama.MDABSInfo_list_date_set
    __swig_getmethods__["list_date"] = _ama.MDABSInfo_list_date_get
    if _newclass:list_date = _swig_property(_ama.MDABSInfo_list_date_get, _ama.MDABSInfo_list_date_set)
    __swig_setmethods__["delist_date"] = _ama.MDABSInfo_delist_date_set
    __swig_getmethods__["delist_date"] = _ama.MDABSInfo_delist_date_get
    if _newclass:delist_date = _swig_property(_ama.MDABSInfo_delist_date_get, _ama.MDABSInfo_delist_date_set)
    __swig_setmethods__["expected_expiry_date"] = _ama.MDABSInfo_expected_expiry_date_set
    __swig_getmethods__["expected_expiry_date"] = _ama.MDABSInfo_expected_expiry_date_get
    if _newclass:expected_expiry_date = _swig_property(_ama.MDABSInfo_expected_expiry_date_get, _ama.MDABSInfo_expected_expiry_date_set)
    __swig_setmethods__["actual_expiry_date"] = _ama.MDABSInfo_actual_expiry_date_set
    __swig_getmethods__["actual_expiry_date"] = _ama.MDABSInfo_actual_expiry_date_get
    if _newclass:actual_expiry_date = _swig_property(_ama.MDABSInfo_actual_expiry_date_get, _ama.MDABSInfo_actual_expiry_date_set)
    __swig_setmethods__["coupon_rate_type"] = _ama.MDABSInfo_coupon_rate_type_set
    __swig_getmethods__["coupon_rate_type"] = _ama.MDABSInfo_coupon_rate_type_get
    if _newclass:coupon_rate_type = _swig_property(_ama.MDABSInfo_coupon_rate_type_get, _ama.MDABSInfo_coupon_rate_type_set)
    __swig_setmethods__["base_rate_name"] = _ama.MDABSInfo_base_rate_name_set
    __swig_getmethods__["base_rate_name"] = _ama.MDABSInfo_base_rate_name_get
    if _newclass:base_rate_name = _swig_property(_ama.MDABSInfo_base_rate_name_get, _ama.MDABSInfo_base_rate_name_set)
    __swig_setmethods__["base_rate_spread"] = _ama.MDABSInfo_base_rate_spread_set
    __swig_getmethods__["base_rate_spread"] = _ama.MDABSInfo_base_rate_spread_get
    if _newclass:base_rate_spread = _swig_property(_ama.MDABSInfo_base_rate_spread_get, _ama.MDABSInfo_base_rate_spread_set)
    __swig_setmethods__["principal_pay_frequency"] = _ama.MDABSInfo_principal_pay_frequency_set
    __swig_getmethods__["principal_pay_frequency"] = _ama.MDABSInfo_principal_pay_frequency_get
    if _newclass:principal_pay_frequency = _swig_property(_ama.MDABSInfo_principal_pay_frequency_get, _ama.MDABSInfo_principal_pay_frequency_set)
    __swig_setmethods__["next_deposit_ezright_date"] = _ama.MDABSInfo_next_deposit_ezright_date_set
    __swig_getmethods__["next_deposit_ezright_date"] = _ama.MDABSInfo_next_deposit_ezright_date_get
    if _newclass:next_deposit_ezright_date = _swig_property(_ama.MDABSInfo_next_deposit_ezright_date_get, _ama.MDABSInfo_next_deposit_ezright_date_set)
    __swig_setmethods__["coupon_payment_frequency"] = _ama.MDABSInfo_coupon_payment_frequency_set
    __swig_getmethods__["coupon_payment_frequency"] = _ama.MDABSInfo_coupon_payment_frequency_get
    if _newclass:coupon_payment_frequency = _swig_property(_ama.MDABSInfo_coupon_payment_frequency_get, _ama.MDABSInfo_coupon_payment_frequency_set)
    __swig_setmethods__["next_payment_date"] = _ama.MDABSInfo_next_payment_date_set
    __swig_getmethods__["next_payment_date"] = _ama.MDABSInfo_next_payment_date_get
    if _newclass:next_payment_date = _swig_property(_ama.MDABSInfo_next_payment_date_get, _ama.MDABSInfo_next_payment_date_set)
    __swig_setmethods__["current_interest_rate"] = _ama.MDABSInfo_current_interest_rate_set
    __swig_getmethods__["current_interest_rate"] = _ama.MDABSInfo_current_interest_rate_get
    if _newclass:current_interest_rate = _swig_property(_ama.MDABSInfo_current_interest_rate_get, _ama.MDABSInfo_current_interest_rate_set)
    __swig_setmethods__["issue_price"] = _ama.MDABSInfo_issue_price_set
    __swig_getmethods__["issue_price"] = _ama.MDABSInfo_issue_price_get
    if _newclass:issue_price = _swig_property(_ama.MDABSInfo_issue_price_get, _ama.MDABSInfo_issue_price_set)
    __swig_setmethods__["status"] = _ama.MDABSInfo_status_set
    __swig_getmethods__["status"] = _ama.MDABSInfo_status_get
    if _newclass:status = _swig_property(_ama.MDABSInfo_status_get, _ama.MDABSInfo_status_set)
    __swig_setmethods__["special_debt"] = _ama.MDABSInfo_special_debt_set
    __swig_getmethods__["special_debt"] = _ama.MDABSInfo_special_debt_get
    if _newclass:special_debt = _swig_property(_ama.MDABSInfo_special_debt_get, _ama.MDABSInfo_special_debt_set)
    __swig_setmethods__["issuer_name"] = _ama.MDABSInfo_issuer_name_set
    __swig_getmethods__["issuer_name"] = _ama.MDABSInfo_issuer_name_get
    if _newclass:issuer_name = _swig_property(_ama.MDABSInfo_issuer_name_get, _ama.MDABSInfo_issuer_name_set)
    __swig_setmethods__["issuer_agency"] = _ama.MDABSInfo_issuer_agency_set
    __swig_getmethods__["issuer_agency"] = _ama.MDABSInfo_issuer_agency_get
    if _newclass:issuer_agency = _swig_property(_ama.MDABSInfo_issuer_agency_get, _ama.MDABSInfo_issuer_agency_set)
    __swig_setmethods__["custodian_agency"] = _ama.MDABSInfo_custodian_agency_set
    __swig_getmethods__["custodian_agency"] = _ama.MDABSInfo_custodian_agency_get
    if _newclass:custodian_agency = _swig_property(_ama.MDABSInfo_custodian_agency_get, _ama.MDABSInfo_custodian_agency_set)
    def __init__(self): 
        this = _ama.new_MDABSInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDABSInfo
    __del__ = lambda self : None;
MDABSInfo_swigregister = _ama.MDABSInfo_swigregister
MDABSInfo_swigregister(MDABSInfo)

class MDABSHistoryInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDABSHistoryInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDABSHistoryInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["symbol"] = _ama.MDABSHistoryInfo_symbol_set
    __swig_getmethods__["symbol"] = _ama.MDABSHistoryInfo_symbol_get
    if _newclass:symbol = _swig_property(_ama.MDABSHistoryInfo_symbol_get, _ama.MDABSHistoryInfo_symbol_set)
    __swig_setmethods__["security_code"] = _ama.MDABSHistoryInfo_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDABSHistoryInfo_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDABSHistoryInfo_security_code_get, _ama.MDABSHistoryInfo_security_code_set)
    __swig_setmethods__["update_date"] = _ama.MDABSHistoryInfo_update_date_set
    __swig_getmethods__["update_date"] = _ama.MDABSHistoryInfo_update_date_get
    if _newclass:update_date = _swig_property(_ama.MDABSHistoryInfo_update_date_get, _ama.MDABSHistoryInfo_update_date_set)
    __swig_setmethods__["issuer_name"] = _ama.MDABSHistoryInfo_issuer_name_set
    __swig_getmethods__["issuer_name"] = _ama.MDABSHistoryInfo_issuer_name_get
    if _newclass:issuer_name = _swig_property(_ama.MDABSHistoryInfo_issuer_name_get, _ama.MDABSHistoryInfo_issuer_name_set)
    __swig_setmethods__["principal_price"] = _ama.MDABSHistoryInfo_principal_price_set
    __swig_getmethods__["principal_price"] = _ama.MDABSHistoryInfo_principal_price_get
    if _newclass:principal_price = _swig_property(_ama.MDABSHistoryInfo_principal_price_get, _ama.MDABSHistoryInfo_principal_price_set)
    __swig_setmethods__["circulation_volume"] = _ama.MDABSHistoryInfo_circulation_volume_set
    __swig_getmethods__["circulation_volume"] = _ama.MDABSHistoryInfo_circulation_volume_get
    if _newclass:circulation_volume = _swig_property(_ama.MDABSHistoryInfo_circulation_volume_get, _ama.MDABSHistoryInfo_circulation_volume_set)
    def __init__(self): 
        this = _ama.new_MDABSHistoryInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDABSHistoryInfo
    __del__ = lambda self : None;
MDABSHistoryInfo_swigregister = _ama.MDABSHistoryInfo_swigregister
MDABSHistoryInfo_swigregister(MDABSHistoryInfo)

class MDABSCreditRatings(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDABSCreditRatings, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDABSCreditRatings, name)
    __repr__ = _swig_repr
    __swig_setmethods__["symbol"] = _ama.MDABSCreditRatings_symbol_set
    __swig_getmethods__["symbol"] = _ama.MDABSCreditRatings_symbol_get
    if _newclass:symbol = _swig_property(_ama.MDABSCreditRatings_symbol_get, _ama.MDABSCreditRatings_symbol_set)
    __swig_setmethods__["security_code"] = _ama.MDABSCreditRatings_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDABSCreditRatings_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDABSCreditRatings_security_code_get, _ama.MDABSCreditRatings_security_code_set)
    __swig_setmethods__["credit_rating_agency"] = _ama.MDABSCreditRatings_credit_rating_agency_set
    __swig_getmethods__["credit_rating_agency"] = _ama.MDABSCreditRatings_credit_rating_agency_get
    if _newclass:credit_rating_agency = _swig_property(_ama.MDABSCreditRatings_credit_rating_agency_get, _ama.MDABSCreditRatings_credit_rating_agency_set)
    __swig_setmethods__["credit_rating"] = _ama.MDABSCreditRatings_credit_rating_set
    __swig_getmethods__["credit_rating"] = _ama.MDABSCreditRatings_credit_rating_get
    if _newclass:credit_rating = _swig_property(_ama.MDABSCreditRatings_credit_rating_get, _ama.MDABSCreditRatings_credit_rating_set)
    __swig_setmethods__["credit_validity_start_date"] = _ama.MDABSCreditRatings_credit_validity_start_date_set
    __swig_getmethods__["credit_validity_start_date"] = _ama.MDABSCreditRatings_credit_validity_start_date_get
    if _newclass:credit_validity_start_date = _swig_property(_ama.MDABSCreditRatings_credit_validity_start_date_get, _ama.MDABSCreditRatings_credit_validity_start_date_set)
    __swig_setmethods__["credit_validity_end_date"] = _ama.MDABSCreditRatings_credit_validity_end_date_set
    __swig_getmethods__["credit_validity_end_date"] = _ama.MDABSCreditRatings_credit_validity_end_date_get
    if _newclass:credit_validity_end_date = _swig_property(_ama.MDABSCreditRatings_credit_validity_end_date_get, _ama.MDABSCreditRatings_credit_validity_end_date_set)
    def __init__(self): 
        this = _ama.new_MDABSCreditRatings()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDABSCreditRatings
    __del__ = lambda self : None;
MDABSCreditRatings_swigregister = _ama.MDABSCreditRatings_swigregister
MDABSCreditRatings_swigregister(MDABSCreditRatings)

class MDPreIssuedBondInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDPreIssuedBondInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDPreIssuedBondInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["security_type"] = _ama.MDPreIssuedBondInfo_security_type_set
    __swig_getmethods__["security_type"] = _ama.MDPreIssuedBondInfo_security_type_get
    if _newclass:security_type = _swig_property(_ama.MDPreIssuedBondInfo_security_type_get, _ama.MDPreIssuedBondInfo_security_type_set)
    __swig_setmethods__["issue_type"] = _ama.MDPreIssuedBondInfo_issue_type_set
    __swig_getmethods__["issue_type"] = _ama.MDPreIssuedBondInfo_issue_type_get
    if _newclass:issue_type = _swig_property(_ama.MDPreIssuedBondInfo_issue_type_get, _ama.MDPreIssuedBondInfo_issue_type_set)
    __swig_setmethods__["security_code"] = _ama.MDPreIssuedBondInfo_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDPreIssuedBondInfo_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDPreIssuedBondInfo_security_code_get, _ama.MDPreIssuedBondInfo_security_code_set)
    __swig_setmethods__["symbol"] = _ama.MDPreIssuedBondInfo_symbol_set
    __swig_getmethods__["symbol"] = _ama.MDPreIssuedBondInfo_symbol_get
    if _newclass:symbol = _swig_property(_ama.MDPreIssuedBondInfo_symbol_get, _ama.MDPreIssuedBondInfo_symbol_set)
    __swig_setmethods__["planned_circulation_volume"] = _ama.MDPreIssuedBondInfo_planned_circulation_volume_set
    __swig_getmethods__["planned_circulation_volume"] = _ama.MDPreIssuedBondInfo_planned_circulation_volume_get
    if _newclass:planned_circulation_volume = _swig_property(_ama.MDPreIssuedBondInfo_planned_circulation_volume_get, _ama.MDPreIssuedBondInfo_planned_circulation_volume_set)
    __swig_setmethods__["actual_circulation_volume"] = _ama.MDPreIssuedBondInfo_actual_circulation_volume_set
    __swig_getmethods__["actual_circulation_volume"] = _ama.MDPreIssuedBondInfo_actual_circulation_volume_get
    if _newclass:actual_circulation_volume = _swig_property(_ama.MDPreIssuedBondInfo_actual_circulation_volume_get, _ama.MDPreIssuedBondInfo_actual_circulation_volume_set)
    __swig_setmethods__["face_value"] = _ama.MDPreIssuedBondInfo_face_value_set
    __swig_getmethods__["face_value"] = _ama.MDPreIssuedBondInfo_face_value_get
    if _newclass:face_value = _swig_property(_ama.MDPreIssuedBondInfo_face_value_get, _ama.MDPreIssuedBondInfo_face_value_set)
    __swig_setmethods__["starting_price"] = _ama.MDPreIssuedBondInfo_starting_price_set
    __swig_getmethods__["starting_price"] = _ama.MDPreIssuedBondInfo_starting_price_get
    if _newclass:starting_price = _swig_property(_ama.MDPreIssuedBondInfo_starting_price_get, _ama.MDPreIssuedBondInfo_starting_price_set)
    __swig_setmethods__["tender_date"] = _ama.MDPreIssuedBondInfo_tender_date_set
    __swig_getmethods__["tender_date"] = _ama.MDPreIssuedBondInfo_tender_date_get
    if _newclass:tender_date = _swig_property(_ama.MDPreIssuedBondInfo_tender_date_get, _ama.MDPreIssuedBondInfo_tender_date_set)
    __swig_setmethods__["issue_price"] = _ama.MDPreIssuedBondInfo_issue_price_set
    __swig_getmethods__["issue_price"] = _ama.MDPreIssuedBondInfo_issue_price_get
    if _newclass:issue_price = _swig_property(_ama.MDPreIssuedBondInfo_issue_price_get, _ama.MDPreIssuedBondInfo_issue_price_set)
    __swig_setmethods__["settle_date"] = _ama.MDPreIssuedBondInfo_settle_date_set
    __swig_getmethods__["settle_date"] = _ama.MDPreIssuedBondInfo_settle_date_get
    if _newclass:settle_date = _swig_property(_ama.MDPreIssuedBondInfo_settle_date_get, _ama.MDPreIssuedBondInfo_settle_date_set)
    __swig_setmethods__["payment_date"] = _ama.MDPreIssuedBondInfo_payment_date_set
    __swig_getmethods__["payment_date"] = _ama.MDPreIssuedBondInfo_payment_date_get
    if _newclass:payment_date = _swig_property(_ama.MDPreIssuedBondInfo_payment_date_get, _ama.MDPreIssuedBondInfo_payment_date_set)
    __swig_setmethods__["list_date"] = _ama.MDPreIssuedBondInfo_list_date_set
    __swig_getmethods__["list_date"] = _ama.MDPreIssuedBondInfo_list_date_get
    if _newclass:list_date = _swig_property(_ama.MDPreIssuedBondInfo_list_date_get, _ama.MDPreIssuedBondInfo_list_date_set)
    __swig_setmethods__["expiry_date"] = _ama.MDPreIssuedBondInfo_expiry_date_set
    __swig_getmethods__["expiry_date"] = _ama.MDPreIssuedBondInfo_expiry_date_get
    if _newclass:expiry_date = _swig_property(_ama.MDPreIssuedBondInfo_expiry_date_get, _ama.MDPreIssuedBondInfo_expiry_date_set)
    __swig_setmethods__["prerelease_start_date"] = _ama.MDPreIssuedBondInfo_prerelease_start_date_set
    __swig_getmethods__["prerelease_start_date"] = _ama.MDPreIssuedBondInfo_prerelease_start_date_get
    if _newclass:prerelease_start_date = _swig_property(_ama.MDPreIssuedBondInfo_prerelease_start_date_get, _ama.MDPreIssuedBondInfo_prerelease_start_date_set)
    __swig_setmethods__["prerelease_end_date"] = _ama.MDPreIssuedBondInfo_prerelease_end_date_set
    __swig_getmethods__["prerelease_end_date"] = _ama.MDPreIssuedBondInfo_prerelease_end_date_get
    if _newclass:prerelease_end_date = _swig_property(_ama.MDPreIssuedBondInfo_prerelease_end_date_get, _ama.MDPreIssuedBondInfo_prerelease_end_date_set)
    __swig_setmethods__["total_net_sell_limit"] = _ama.MDPreIssuedBondInfo_total_net_sell_limit_set
    __swig_getmethods__["total_net_sell_limit"] = _ama.MDPreIssuedBondInfo_total_net_sell_limit_get
    if _newclass:total_net_sell_limit = _swig_property(_ama.MDPreIssuedBondInfo_total_net_sell_limit_get, _ama.MDPreIssuedBondInfo_total_net_sell_limit_set)
    __swig_setmethods__["bond_maturity"] = _ama.MDPreIssuedBondInfo_bond_maturity_set
    __swig_getmethods__["bond_maturity"] = _ama.MDPreIssuedBondInfo_bond_maturity_get
    if _newclass:bond_maturity = _swig_property(_ama.MDPreIssuedBondInfo_bond_maturity_get, _ama.MDPreIssuedBondInfo_bond_maturity_set)
    __swig_setmethods__["issuer_agency"] = _ama.MDPreIssuedBondInfo_issuer_agency_set
    __swig_getmethods__["issuer_agency"] = _ama.MDPreIssuedBondInfo_issuer_agency_get
    if _newclass:issuer_agency = _swig_property(_ama.MDPreIssuedBondInfo_issuer_agency_get, _ama.MDPreIssuedBondInfo_issuer_agency_set)
    __swig_setmethods__["custodian_agency"] = _ama.MDPreIssuedBondInfo_custodian_agency_set
    __swig_getmethods__["custodian_agency"] = _ama.MDPreIssuedBondInfo_custodian_agency_get
    if _newclass:custodian_agency = _swig_property(_ama.MDPreIssuedBondInfo_custodian_agency_get, _ama.MDPreIssuedBondInfo_custodian_agency_set)
    __swig_setmethods__["status"] = _ama.MDPreIssuedBondInfo_status_set
    __swig_getmethods__["status"] = _ama.MDPreIssuedBondInfo_status_get
    if _newclass:status = _swig_property(_ama.MDPreIssuedBondInfo_status_get, _ama.MDPreIssuedBondInfo_status_set)
    __swig_setmethods__["remark_txt"] = _ama.MDPreIssuedBondInfo_remark_txt_set
    __swig_getmethods__["remark_txt"] = _ama.MDPreIssuedBondInfo_remark_txt_get
    if _newclass:remark_txt = _swig_property(_ama.MDPreIssuedBondInfo_remark_txt_get, _ama.MDPreIssuedBondInfo_remark_txt_set)
    __swig_setmethods__["coupon_rate_type"] = _ama.MDPreIssuedBondInfo_coupon_rate_type_set
    __swig_getmethods__["coupon_rate_type"] = _ama.MDPreIssuedBondInfo_coupon_rate_type_get
    if _newclass:coupon_rate_type = _swig_property(_ama.MDPreIssuedBondInfo_coupon_rate_type_get, _ama.MDPreIssuedBondInfo_coupon_rate_type_set)
    __swig_setmethods__["coupon_payment_frequency"] = _ama.MDPreIssuedBondInfo_coupon_payment_frequency_set
    __swig_getmethods__["coupon_payment_frequency"] = _ama.MDPreIssuedBondInfo_coupon_payment_frequency_get
    if _newclass:coupon_payment_frequency = _swig_property(_ama.MDPreIssuedBondInfo_coupon_payment_frequency_get, _ama.MDPreIssuedBondInfo_coupon_payment_frequency_set)
    __swig_setmethods__["coupon_accrual_method"] = _ama.MDPreIssuedBondInfo_coupon_accrual_method_set
    __swig_getmethods__["coupon_accrual_method"] = _ama.MDPreIssuedBondInfo_coupon_accrual_method_get
    if _newclass:coupon_accrual_method = _swig_property(_ama.MDPreIssuedBondInfo_coupon_accrual_method_get, _ama.MDPreIssuedBondInfo_coupon_accrual_method_set)
    __swig_setmethods__["coupon_interest_basis"] = _ama.MDPreIssuedBondInfo_coupon_interest_basis_set
    __swig_getmethods__["coupon_interest_basis"] = _ama.MDPreIssuedBondInfo_coupon_interest_basis_get
    if _newclass:coupon_interest_basis = _swig_property(_ama.MDPreIssuedBondInfo_coupon_interest_basis_get, _ama.MDPreIssuedBondInfo_coupon_interest_basis_set)
    __swig_setmethods__["coupon_settle_date"] = _ama.MDPreIssuedBondInfo_coupon_settle_date_set
    __swig_getmethods__["coupon_settle_date"] = _ama.MDPreIssuedBondInfo_coupon_settle_date_get
    if _newclass:coupon_settle_date = _swig_property(_ama.MDPreIssuedBondInfo_coupon_settle_date_get, _ama.MDPreIssuedBondInfo_coupon_settle_date_set)
    __swig_setmethods__["coupon_first_payment_date"] = _ama.MDPreIssuedBondInfo_coupon_first_payment_date_set
    __swig_getmethods__["coupon_first_payment_date"] = _ama.MDPreIssuedBondInfo_coupon_first_payment_date_get
    if _newclass:coupon_first_payment_date = _swig_property(_ama.MDPreIssuedBondInfo_coupon_first_payment_date_get, _ama.MDPreIssuedBondInfo_coupon_first_payment_date_set)
    __swig_setmethods__["coupon_base_rate_name"] = _ama.MDPreIssuedBondInfo_coupon_base_rate_name_set
    __swig_getmethods__["coupon_base_rate_name"] = _ama.MDPreIssuedBondInfo_coupon_base_rate_name_get
    if _newclass:coupon_base_rate_name = _swig_property(_ama.MDPreIssuedBondInfo_coupon_base_rate_name_get, _ama.MDPreIssuedBondInfo_coupon_base_rate_name_set)
    def __init__(self): 
        this = _ama.new_MDPreIssuedBondInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDPreIssuedBondInfo
    __del__ = lambda self : None;
MDPreIssuedBondInfo_swigregister = _ama.MDPreIssuedBondInfo_swigregister
MDPreIssuedBondInfo_swigregister(MDPreIssuedBondInfo)

class PreIPOReissueItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PreIPOReissueItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PreIPOReissueItem, name)
    __repr__ = _swig_repr
    __swig_setmethods__["reissue_date"] = _ama.PreIPOReissueItem_reissue_date_set
    __swig_getmethods__["reissue_date"] = _ama.PreIPOReissueItem_reissue_date_get
    if _newclass:reissue_date = _swig_property(_ama.PreIPOReissueItem_reissue_date_get, _ama.PreIPOReissueItem_reissue_date_set)
    __swig_setmethods__["reissue_event_date"] = _ama.PreIPOReissueItem_reissue_event_date_set
    __swig_getmethods__["reissue_event_date"] = _ama.PreIPOReissueItem_reissue_event_date_get
    if _newclass:reissue_event_date = _swig_property(_ama.PreIPOReissueItem_reissue_event_date_get, _ama.PreIPOReissueItem_reissue_event_date_set)
    __swig_setmethods__["reissue_volume"] = _ama.PreIPOReissueItem_reissue_volume_set
    __swig_getmethods__["reissue_volume"] = _ama.PreIPOReissueItem_reissue_volume_get
    if _newclass:reissue_volume = _swig_property(_ama.PreIPOReissueItem_reissue_volume_get, _ama.PreIPOReissueItem_reissue_volume_set)
    def __init__(self): 
        this = _ama.new_PreIPOReissueItem()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_PreIPOReissueItem
    __del__ = lambda self : None;
PreIPOReissueItem_swigregister = _ama.PreIPOReissueItem_swigregister
PreIPOReissueItem_swigregister(PreIPOReissueItem)

class PreIPOExerciseItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PreIPOExerciseItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PreIPOExerciseItem, name)
    __repr__ = _swig_repr
    __swig_setmethods__["exercise_type"] = _ama.PreIPOExerciseItem_exercise_type_set
    __swig_getmethods__["exercise_type"] = _ama.PreIPOExerciseItem_exercise_type_get
    if _newclass:exercise_type = _swig_property(_ama.PreIPOExerciseItem_exercise_type_get, _ama.PreIPOExerciseItem_exercise_type_set)
    __swig_setmethods__["exercise_date"] = _ama.PreIPOExerciseItem_exercise_date_set
    __swig_getmethods__["exercise_date"] = _ama.PreIPOExerciseItem_exercise_date_get
    if _newclass:exercise_date = _swig_property(_ama.PreIPOExerciseItem_exercise_date_get, _ama.PreIPOExerciseItem_exercise_date_set)
    __swig_setmethods__["exercise_price"] = _ama.PreIPOExerciseItem_exercise_price_set
    __swig_getmethods__["exercise_price"] = _ama.PreIPOExerciseItem_exercise_price_get
    if _newclass:exercise_price = _swig_property(_ama.PreIPOExerciseItem_exercise_price_get, _ama.PreIPOExerciseItem_exercise_price_set)
    __swig_setmethods__["exercise_volume"] = _ama.PreIPOExerciseItem_exercise_volume_set
    __swig_getmethods__["exercise_volume"] = _ama.PreIPOExerciseItem_exercise_volume_get
    if _newclass:exercise_volume = _swig_property(_ama.PreIPOExerciseItem_exercise_volume_get, _ama.PreIPOExerciseItem_exercise_volume_set)
    def __init__(self): 
        this = _ama.new_PreIPOExerciseItem()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_PreIPOExerciseItem
    __del__ = lambda self : None;
PreIPOExerciseItem_swigregister = _ama.PreIPOExerciseItem_swigregister
PreIPOExerciseItem_swigregister(PreIPOExerciseItem)

class PreIPOCreditItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PreIPOCreditItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PreIPOCreditItem, name)
    __repr__ = _swig_repr
    __swig_setmethods__["credit_rating_agency"] = _ama.PreIPOCreditItem_credit_rating_agency_set
    __swig_getmethods__["credit_rating_agency"] = _ama.PreIPOCreditItem_credit_rating_agency_get
    if _newclass:credit_rating_agency = _swig_property(_ama.PreIPOCreditItem_credit_rating_agency_get, _ama.PreIPOCreditItem_credit_rating_agency_set)
    __swig_setmethods__["credit_subject_rating"] = _ama.PreIPOCreditItem_credit_subject_rating_set
    __swig_getmethods__["credit_subject_rating"] = _ama.PreIPOCreditItem_credit_subject_rating_get
    if _newclass:credit_subject_rating = _swig_property(_ama.PreIPOCreditItem_credit_subject_rating_get, _ama.PreIPOCreditItem_credit_subject_rating_set)
    __swig_setmethods__["credit_effective_date"] = _ama.PreIPOCreditItem_credit_effective_date_set
    __swig_getmethods__["credit_effective_date"] = _ama.PreIPOCreditItem_credit_effective_date_get
    if _newclass:credit_effective_date = _swig_property(_ama.PreIPOCreditItem_credit_effective_date_get, _ama.PreIPOCreditItem_credit_effective_date_set)
    __swig_setmethods__["credit_end_date"] = _ama.PreIPOCreditItem_credit_end_date_set
    __swig_getmethods__["credit_end_date"] = _ama.PreIPOCreditItem_credit_end_date_get
    if _newclass:credit_end_date = _swig_property(_ama.PreIPOCreditItem_credit_end_date_get, _ama.PreIPOCreditItem_credit_end_date_set)
    def __init__(self): 
        this = _ama.new_PreIPOCreditItem()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_PreIPOCreditItem
    __del__ = lambda self : None;
PreIPOCreditItem_swigregister = _ama.PreIPOCreditItem_swigregister
PreIPOCreditItem_swigregister(PreIPOCreditItem)

class MDPreIPOBondInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDPreIPOBondInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDPreIPOBondInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["bond_categories"] = _ama.MDPreIPOBondInfo_bond_categories_set
    __swig_getmethods__["bond_categories"] = _ama.MDPreIPOBondInfo_bond_categories_get
    if _newclass:bond_categories = _swig_property(_ama.MDPreIPOBondInfo_bond_categories_get, _ama.MDPreIPOBondInfo_bond_categories_set)
    __swig_setmethods__["security_type"] = _ama.MDPreIPOBondInfo_security_type_set
    __swig_getmethods__["security_type"] = _ama.MDPreIPOBondInfo_security_type_get
    if _newclass:security_type = _swig_property(_ama.MDPreIPOBondInfo_security_type_get, _ama.MDPreIPOBondInfo_security_type_set)
    __swig_setmethods__["security_code"] = _ama.MDPreIPOBondInfo_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDPreIPOBondInfo_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDPreIPOBondInfo_security_code_get, _ama.MDPreIPOBondInfo_security_code_set)
    __swig_setmethods__["symbol"] = _ama.MDPreIPOBondInfo_symbol_set
    __swig_getmethods__["symbol"] = _ama.MDPreIPOBondInfo_symbol_get
    if _newclass:symbol = _swig_property(_ama.MDPreIPOBondInfo_symbol_get, _ama.MDPreIPOBondInfo_symbol_set)
    __swig_setmethods__["list_date"] = _ama.MDPreIPOBondInfo_list_date_set
    __swig_getmethods__["list_date"] = _ama.MDPreIPOBondInfo_list_date_get
    if _newclass:list_date = _swig_property(_ama.MDPreIPOBondInfo_list_date_get, _ama.MDPreIPOBondInfo_list_date_set)
    __swig_setmethods__["status"] = _ama.MDPreIPOBondInfo_status_set
    __swig_getmethods__["status"] = _ama.MDPreIPOBondInfo_status_get
    if _newclass:status = _swig_property(_ama.MDPreIPOBondInfo_status_get, _ama.MDPreIPOBondInfo_status_set)
    __swig_setmethods__["delist_date"] = _ama.MDPreIPOBondInfo_delist_date_set
    __swig_getmethods__["delist_date"] = _ama.MDPreIPOBondInfo_delist_date_get
    if _newclass:delist_date = _swig_property(_ama.MDPreIPOBondInfo_delist_date_get, _ama.MDPreIPOBondInfo_delist_date_set)
    __swig_setmethods__["issue_date"] = _ama.MDPreIPOBondInfo_issue_date_set
    __swig_getmethods__["issue_date"] = _ama.MDPreIPOBondInfo_issue_date_get
    if _newclass:issue_date = _swig_property(_ama.MDPreIPOBondInfo_issue_date_get, _ama.MDPreIPOBondInfo_issue_date_set)
    __swig_setmethods__["settle_date"] = _ama.MDPreIPOBondInfo_settle_date_set
    __swig_getmethods__["settle_date"] = _ama.MDPreIPOBondInfo_settle_date_get
    if _newclass:settle_date = _swig_property(_ama.MDPreIPOBondInfo_settle_date_get, _ama.MDPreIPOBondInfo_settle_date_set)
    __swig_setmethods__["expiry_date"] = _ama.MDPreIPOBondInfo_expiry_date_set
    __swig_getmethods__["expiry_date"] = _ama.MDPreIPOBondInfo_expiry_date_get
    if _newclass:expiry_date = _swig_property(_ama.MDPreIPOBondInfo_expiry_date_get, _ama.MDPreIPOBondInfo_expiry_date_set)
    __swig_setmethods__["compen_period"] = _ama.MDPreIPOBondInfo_compen_period_set
    __swig_getmethods__["compen_period"] = _ama.MDPreIPOBondInfo_compen_period_get
    if _newclass:compen_period = _swig_property(_ama.MDPreIPOBondInfo_compen_period_get, _ama.MDPreIPOBondInfo_compen_period_set)
    __swig_setmethods__["issue_price"] = _ama.MDPreIPOBondInfo_issue_price_set
    __swig_getmethods__["issue_price"] = _ama.MDPreIPOBondInfo_issue_price_get
    if _newclass:issue_price = _swig_property(_ama.MDPreIPOBondInfo_issue_price_get, _ama.MDPreIPOBondInfo_issue_price_set)
    __swig_setmethods__["face_value"] = _ama.MDPreIPOBondInfo_face_value_set
    __swig_getmethods__["face_value"] = _ama.MDPreIPOBondInfo_face_value_get
    if _newclass:face_value = _swig_property(_ama.MDPreIPOBondInfo_face_value_get, _ama.MDPreIPOBondInfo_face_value_set)
    __swig_setmethods__["issuer_agency"] = _ama.MDPreIPOBondInfo_issuer_agency_set
    __swig_getmethods__["issuer_agency"] = _ama.MDPreIPOBondInfo_issuer_agency_get
    if _newclass:issuer_agency = _swig_property(_ama.MDPreIPOBondInfo_issuer_agency_get, _ama.MDPreIPOBondInfo_issuer_agency_set)
    __swig_setmethods__["coupon_rate_type"] = _ama.MDPreIPOBondInfo_coupon_rate_type_set
    __swig_getmethods__["coupon_rate_type"] = _ama.MDPreIPOBondInfo_coupon_rate_type_get
    if _newclass:coupon_rate_type = _swig_property(_ama.MDPreIPOBondInfo_coupon_rate_type_get, _ama.MDPreIPOBondInfo_coupon_rate_type_set)
    __swig_setmethods__["base_rate_name"] = _ama.MDPreIPOBondInfo_base_rate_name_set
    __swig_getmethods__["base_rate_name"] = _ama.MDPreIPOBondInfo_base_rate_name_get
    if _newclass:base_rate_name = _swig_property(_ama.MDPreIPOBondInfo_base_rate_name_get, _ama.MDPreIPOBondInfo_base_rate_name_set)
    __swig_setmethods__["coupon_rate"] = _ama.MDPreIPOBondInfo_coupon_rate_set
    __swig_getmethods__["coupon_rate"] = _ama.MDPreIPOBondInfo_coupon_rate_get
    if _newclass:coupon_rate = _swig_property(_ama.MDPreIPOBondInfo_coupon_rate_get, _ama.MDPreIPOBondInfo_coupon_rate_set)
    __swig_setmethods__["custodian_agency"] = _ama.MDPreIPOBondInfo_custodian_agency_set
    __swig_getmethods__["custodian_agency"] = _ama.MDPreIPOBondInfo_custodian_agency_get
    if _newclass:custodian_agency = _swig_property(_ama.MDPreIPOBondInfo_custodian_agency_get, _ama.MDPreIPOBondInfo_custodian_agency_set)
    __swig_setmethods__["reissue_item_cnt"] = _ama.MDPreIPOBondInfo_reissue_item_cnt_set
    __swig_getmethods__["reissue_item_cnt"] = _ama.MDPreIPOBondInfo_reissue_item_cnt_get
    if _newclass:reissue_item_cnt = _swig_property(_ama.MDPreIPOBondInfo_reissue_item_cnt_get, _ama.MDPreIPOBondInfo_reissue_item_cnt_set)
    __swig_setmethods__["reissue_items"] = _ama.MDPreIPOBondInfo_reissue_items_set
    __swig_getmethods__["reissue_items"] = _ama.MDPreIPOBondInfo_reissue_items_get
    if _newclass:reissue_items = _swig_property(_ama.MDPreIPOBondInfo_reissue_items_get, _ama.MDPreIPOBondInfo_reissue_items_set)
    __swig_setmethods__["currency"] = _ama.MDPreIPOBondInfo_currency_set
    __swig_getmethods__["currency"] = _ama.MDPreIPOBondInfo_currency_get
    if _newclass:currency = _swig_property(_ama.MDPreIPOBondInfo_currency_get, _ama.MDPreIPOBondInfo_currency_set)
    __swig_setmethods__["lastissue_key_period_bond_flag"] = _ama.MDPreIPOBondInfo_lastissue_key_period_bond_flag_set
    __swig_getmethods__["lastissue_key_period_bond_flag"] = _ama.MDPreIPOBondInfo_lastissue_key_period_bond_flag_get
    if _newclass:lastissue_key_period_bond_flag = _swig_property(_ama.MDPreIPOBondInfo_lastissue_key_period_bond_flag_get, _ama.MDPreIPOBondInfo_lastissue_key_period_bond_flag_set)
    __swig_setmethods__["green_bond_flag"] = _ama.MDPreIPOBondInfo_green_bond_flag_set
    __swig_getmethods__["green_bond_flag"] = _ama.MDPreIPOBondInfo_green_bond_flag_get
    if _newclass:green_bond_flag = _swig_property(_ama.MDPreIPOBondInfo_green_bond_flag_get, _ama.MDPreIPOBondInfo_green_bond_flag_set)
    __swig_setmethods__["trad_member_group"] = _ama.MDPreIPOBondInfo_trad_member_group_set
    __swig_getmethods__["trad_member_group"] = _ama.MDPreIPOBondInfo_trad_member_group_get
    if _newclass:trad_member_group = _swig_property(_ama.MDPreIPOBondInfo_trad_member_group_get, _ama.MDPreIPOBondInfo_trad_member_group_set)
    __swig_setmethods__["circulation_range"] = _ama.MDPreIPOBondInfo_circulation_range_set
    __swig_getmethods__["circulation_range"] = _ama.MDPreIPOBondInfo_circulation_range_get
    if _newclass:circulation_range = _swig_property(_ama.MDPreIPOBondInfo_circulation_range_get, _ama.MDPreIPOBondInfo_circulation_range_set)
    __swig_setmethods__["exercise_item_cnt"] = _ama.MDPreIPOBondInfo_exercise_item_cnt_set
    __swig_getmethods__["exercise_item_cnt"] = _ama.MDPreIPOBondInfo_exercise_item_cnt_get
    if _newclass:exercise_item_cnt = _swig_property(_ama.MDPreIPOBondInfo_exercise_item_cnt_get, _ama.MDPreIPOBondInfo_exercise_item_cnt_set)
    __swig_setmethods__["exercise_items"] = _ama.MDPreIPOBondInfo_exercise_items_set
    __swig_getmethods__["exercise_items"] = _ama.MDPreIPOBondInfo_exercise_items_get
    if _newclass:exercise_items = _swig_property(_ama.MDPreIPOBondInfo_exercise_items_get, _ama.MDPreIPOBondInfo_exercise_items_set)
    __swig_setmethods__["credit_item_cnt"] = _ama.MDPreIPOBondInfo_credit_item_cnt_set
    __swig_getmethods__["credit_item_cnt"] = _ama.MDPreIPOBondInfo_credit_item_cnt_get
    if _newclass:credit_item_cnt = _swig_property(_ama.MDPreIPOBondInfo_credit_item_cnt_get, _ama.MDPreIPOBondInfo_credit_item_cnt_set)
    __swig_setmethods__["credit_items"] = _ama.MDPreIPOBondInfo_credit_items_set
    __swig_getmethods__["credit_items"] = _ama.MDPreIPOBondInfo_credit_items_get
    if _newclass:credit_items = _swig_property(_ama.MDPreIPOBondInfo_credit_items_get, _ama.MDPreIPOBondInfo_credit_items_set)
    def __init__(self): 
        this = _ama.new_MDPreIPOBondInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDPreIPOBondInfo
    __del__ = lambda self : None;
MDPreIPOBondInfo_swigregister = _ama.MDPreIPOBondInfo_swigregister
MDPreIPOBondInfo_swigregister(MDPreIPOBondInfo)

class MDXBondTradeBondInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDXBondTradeBondInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDXBondTradeBondInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["centra_quote_bond_indic"] = _ama.MDXBondTradeBondInfo_centra_quote_bond_indic_set
    __swig_getmethods__["centra_quote_bond_indic"] = _ama.MDXBondTradeBondInfo_centra_quote_bond_indic_get
    if _newclass:centra_quote_bond_indic = _swig_property(_ama.MDXBondTradeBondInfo_centra_quote_bond_indic_get, _ama.MDXBondTradeBondInfo_centra_quote_bond_indic_set)
    __swig_setmethods__["security_code"] = _ama.MDXBondTradeBondInfo_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDXBondTradeBondInfo_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDXBondTradeBondInfo_security_code_get, _ama.MDXBondTradeBondInfo_security_code_set)
    __swig_setmethods__["symbol"] = _ama.MDXBondTradeBondInfo_symbol_set
    __swig_getmethods__["symbol"] = _ama.MDXBondTradeBondInfo_symbol_get
    if _newclass:symbol = _swig_property(_ama.MDXBondTradeBondInfo_symbol_get, _ama.MDXBondTradeBondInfo_symbol_set)
    __swig_setmethods__["security_type"] = _ama.MDXBondTradeBondInfo_security_type_set
    __swig_getmethods__["security_type"] = _ama.MDXBondTradeBondInfo_security_type_get
    if _newclass:security_type = _swig_property(_ama.MDXBondTradeBondInfo_security_type_get, _ama.MDXBondTradeBondInfo_security_type_set)
    __swig_setmethods__["security_type_code"] = _ama.MDXBondTradeBondInfo_security_type_code_set
    __swig_getmethods__["security_type_code"] = _ama.MDXBondTradeBondInfo_security_type_code_get
    if _newclass:security_type_code = _swig_property(_ama.MDXBondTradeBondInfo_security_type_code_get, _ama.MDXBondTradeBondInfo_security_type_code_set)
    __swig_setmethods__["standard_compen_period"] = _ama.MDXBondTradeBondInfo_standard_compen_period_set
    __swig_getmethods__["standard_compen_period"] = _ama.MDXBondTradeBondInfo_standard_compen_period_get
    if _newclass:standard_compen_period = _swig_property(_ama.MDXBondTradeBondInfo_standard_compen_period_get, _ama.MDXBondTradeBondInfo_standard_compen_period_set)
    __swig_setmethods__["issuer_code"] = _ama.MDXBondTradeBondInfo_issuer_code_set
    __swig_getmethods__["issuer_code"] = _ama.MDXBondTradeBondInfo_issuer_code_get
    if _newclass:issuer_code = _swig_property(_ama.MDXBondTradeBondInfo_issuer_code_get, _ama.MDXBondTradeBondInfo_issuer_code_set)
    def __init__(self): 
        this = _ama.new_MDXBondTradeBondInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDXBondTradeBondInfo
    __del__ = lambda self : None;
MDXBondTradeBondInfo_swigregister = _ama.MDXBondTradeBondInfo_swigregister
MDXBondTradeBondInfo_swigregister(MDXBondTradeBondInfo)

class PledgedConvertItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PledgedConvertItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PledgedConvertItem, name)
    __repr__ = _swig_repr
    __swig_setmethods__["term_variety"] = _ama.PledgedConvertItem_term_variety_set
    __swig_getmethods__["term_variety"] = _ama.PledgedConvertItem_term_variety_get
    if _newclass:term_variety = _swig_property(_ama.PledgedConvertItem_term_variety_get, _ama.PledgedConvertItem_term_variety_set)
    __swig_setmethods__["convert_rate"] = _ama.PledgedConvertItem_convert_rate_set
    __swig_getmethods__["convert_rate"] = _ama.PledgedConvertItem_convert_rate_get
    if _newclass:convert_rate = _swig_property(_ama.PledgedConvertItem_convert_rate_get, _ama.PledgedConvertItem_convert_rate_set)
    def __init__(self): 
        this = _ama.new_PledgedConvertItem()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_PledgedConvertItem
    __del__ = lambda self : None;
PledgedConvertItem_swigregister = _ama.PledgedConvertItem_swigregister
PledgedConvertItem_swigregister(PledgedConvertItem)

class MDPledgedConvertRateACInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDPledgedConvertRateACInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDPledgedConvertRateACInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["symbol"] = _ama.MDPledgedConvertRateACInfo_symbol_set
    __swig_getmethods__["symbol"] = _ama.MDPledgedConvertRateACInfo_symbol_get
    if _newclass:symbol = _swig_property(_ama.MDPledgedConvertRateACInfo_symbol_get, _ama.MDPledgedConvertRateACInfo_symbol_set)
    __swig_setmethods__["security_code"] = _ama.MDPledgedConvertRateACInfo_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDPledgedConvertRateACInfo_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDPledgedConvertRateACInfo_security_code_get, _ama.MDPledgedConvertRateACInfo_security_code_set)
    __swig_setmethods__["convert_item_cnt"] = _ama.MDPledgedConvertRateACInfo_convert_item_cnt_set
    __swig_getmethods__["convert_item_cnt"] = _ama.MDPledgedConvertRateACInfo_convert_item_cnt_get
    if _newclass:convert_item_cnt = _swig_property(_ama.MDPledgedConvertRateACInfo_convert_item_cnt_get, _ama.MDPledgedConvertRateACInfo_convert_item_cnt_set)
    __swig_setmethods__["convert_items"] = _ama.MDPledgedConvertRateACInfo_convert_items_set
    __swig_getmethods__["convert_items"] = _ama.MDPledgedConvertRateACInfo_convert_items_get
    if _newclass:convert_items = _swig_property(_ama.MDPledgedConvertRateACInfo_convert_items_get, _ama.MDPledgedConvertRateACInfo_convert_items_set)
    def __init__(self): 
        this = _ama.new_MDPledgedConvertRateACInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDPledgedConvertRateACInfo
    __del__ = lambda self : None;
MDPledgedConvertRateACInfo_swigregister = _ama.MDPledgedConvertRateACInfo_swigregister
MDPledgedConvertRateACInfo_swigregister(MDPledgedConvertRateACInfo)

class XRepoHierGroupItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, XRepoHierGroupItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, XRepoHierGroupItem, name)
    __repr__ = _swig_repr
    __swig_setmethods__["group_id"] = _ama.XRepoHierGroupItem_group_id_set
    __swig_getmethods__["group_id"] = _ama.XRepoHierGroupItem_group_id_get
    if _newclass:group_id = _swig_property(_ama.XRepoHierGroupItem_group_id_get, _ama.XRepoHierGroupItem_group_id_set)
    __swig_setmethods__["group_name"] = _ama.XRepoHierGroupItem_group_name_set
    __swig_getmethods__["group_name"] = _ama.XRepoHierGroupItem_group_name_get
    if _newclass:group_name = _swig_property(_ama.XRepoHierGroupItem_group_name_get, _ama.XRepoHierGroupItem_group_name_set)
    def __init__(self): 
        this = _ama.new_XRepoHierGroupItem()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_XRepoHierGroupItem
    __del__ = lambda self : None;
XRepoHierGroupItem_swigregister = _ama.XRepoHierGroupItem_swigregister
XRepoHierGroupItem_swigregister(XRepoHierGroupItem)

class MDXRepoHierQuoteGroupInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDXRepoHierQuoteGroupInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDXRepoHierQuoteGroupInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["agency_chinese_symbol"] = _ama.MDXRepoHierQuoteGroupInfo_agency_chinese_symbol_set
    __swig_getmethods__["agency_chinese_symbol"] = _ama.MDXRepoHierQuoteGroupInfo_agency_chinese_symbol_get
    if _newclass:agency_chinese_symbol = _swig_property(_ama.MDXRepoHierQuoteGroupInfo_agency_chinese_symbol_get, _ama.MDXRepoHierQuoteGroupInfo_agency_chinese_symbol_set)
    __swig_setmethods__["trade_account_chinese_symbol"] = _ama.MDXRepoHierQuoteGroupInfo_trade_account_chinese_symbol_set
    __swig_getmethods__["trade_account_chinese_symbol"] = _ama.MDXRepoHierQuoteGroupInfo_trade_account_chinese_symbol_get
    if _newclass:trade_account_chinese_symbol = _swig_property(_ama.MDXRepoHierQuoteGroupInfo_trade_account_chinese_symbol_get, _ama.MDXRepoHierQuoteGroupInfo_trade_account_chinese_symbol_set)
    __swig_setmethods__["trade_account_code"] = _ama.MDXRepoHierQuoteGroupInfo_trade_account_code_set
    __swig_getmethods__["trade_account_code"] = _ama.MDXRepoHierQuoteGroupInfo_trade_account_code_get
    if _newclass:trade_account_code = _swig_property(_ama.MDXRepoHierQuoteGroupInfo_trade_account_code_get, _ama.MDXRepoHierQuoteGroupInfo_trade_account_code_set)
    __swig_setmethods__["group_item_cnt"] = _ama.MDXRepoHierQuoteGroupInfo_group_item_cnt_set
    __swig_getmethods__["group_item_cnt"] = _ama.MDXRepoHierQuoteGroupInfo_group_item_cnt_get
    if _newclass:group_item_cnt = _swig_property(_ama.MDXRepoHierQuoteGroupInfo_group_item_cnt_get, _ama.MDXRepoHierQuoteGroupInfo_group_item_cnt_set)
    __swig_setmethods__["group_items"] = _ama.MDXRepoHierQuoteGroupInfo_group_items_set
    __swig_getmethods__["group_items"] = _ama.MDXRepoHierQuoteGroupInfo_group_items_get
    if _newclass:group_items = _swig_property(_ama.MDXRepoHierQuoteGroupInfo_group_items_get, _ama.MDXRepoHierQuoteGroupInfo_group_items_set)
    def __init__(self): 
        this = _ama.new_MDXRepoHierQuoteGroupInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDXRepoHierQuoteGroupInfo
    __del__ = lambda self : None;
MDXRepoHierQuoteGroupInfo_swigregister = _ama.MDXRepoHierQuoteGroupInfo_swigregister
MDXRepoHierQuoteGroupInfo_swigregister(MDXRepoHierQuoteGroupInfo)

class MDXRepoContractInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDXRepoContractInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDXRepoContractInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["security_code"] = _ama.MDXRepoContractInfo_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDXRepoContractInfo_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDXRepoContractInfo_security_code_get, _ama.MDXRepoContractInfo_security_code_set)
    __swig_setmethods__["symbol"] = _ama.MDXRepoContractInfo_symbol_set
    __swig_getmethods__["symbol"] = _ama.MDXRepoContractInfo_symbol_get
    if _newclass:symbol = _swig_property(_ama.MDXRepoContractInfo_symbol_get, _ama.MDXRepoContractInfo_symbol_set)
    __swig_setmethods__["repo_method"] = _ama.MDXRepoContractInfo_repo_method_set
    __swig_getmethods__["repo_method"] = _ama.MDXRepoContractInfo_repo_method_get
    if _newclass:repo_method = _swig_property(_ama.MDXRepoContractInfo_repo_method_get, _ama.MDXRepoContractInfo_repo_method_set)
    __swig_setmethods__["quote_per_volume"] = _ama.MDXRepoContractInfo_quote_per_volume_set
    __swig_getmethods__["quote_per_volume"] = _ama.MDXRepoContractInfo_quote_per_volume_get
    if _newclass:quote_per_volume = _swig_property(_ama.MDXRepoContractInfo_quote_per_volume_get, _ama.MDXRepoContractInfo_quote_per_volume_set)
    __swig_setmethods__["single_min_quote_volume"] = _ama.MDXRepoContractInfo_single_min_quote_volume_set
    __swig_getmethods__["single_min_quote_volume"] = _ama.MDXRepoContractInfo_single_min_quote_volume_get
    if _newclass:single_min_quote_volume = _swig_property(_ama.MDXRepoContractInfo_single_min_quote_volume_get, _ama.MDXRepoContractInfo_single_min_quote_volume_set)
    __swig_setmethods__["single_max_quote_volume"] = _ama.MDXRepoContractInfo_single_max_quote_volume_set
    __swig_getmethods__["single_max_quote_volume"] = _ama.MDXRepoContractInfo_single_max_quote_volume_get
    if _newclass:single_max_quote_volume = _swig_property(_ama.MDXRepoContractInfo_single_max_quote_volume_get, _ama.MDXRepoContractInfo_single_max_quote_volume_set)
    __swig_setmethods__["pre_market_trade_indic"] = _ama.MDXRepoContractInfo_pre_market_trade_indic_set
    __swig_getmethods__["pre_market_trade_indic"] = _ama.MDXRepoContractInfo_pre_market_trade_indic_get
    if _newclass:pre_market_trade_indic = _swig_property(_ama.MDXRepoContractInfo_pre_market_trade_indic_get, _ama.MDXRepoContractInfo_pre_market_trade_indic_set)
    __swig_setmethods__["trade_limit_days"] = _ama.MDXRepoContractInfo_trade_limit_days_set
    __swig_getmethods__["trade_limit_days"] = _ama.MDXRepoContractInfo_trade_limit_days_get
    if _newclass:trade_limit_days = _swig_property(_ama.MDXRepoContractInfo_trade_limit_days_get, _ama.MDXRepoContractInfo_trade_limit_days_set)
    def __init__(self): 
        this = _ama.new_MDXRepoContractInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDXRepoContractInfo
    __del__ = lambda self : None;
MDXRepoContractInfo_swigregister = _ama.MDXRepoContractInfo_swigregister
MDXRepoContractInfo_swigregister(MDXRepoContractInfo)

class SwapAppTragItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SwapAppTragItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SwapAppTragItem, name)
    __repr__ = _swig_repr
    __swig_setmethods__["applicable_trdg_model"] = _ama.SwapAppTragItem_applicable_trdg_model_set
    __swig_getmethods__["applicable_trdg_model"] = _ama.SwapAppTragItem_applicable_trdg_model_get
    if _newclass:applicable_trdg_model = _swig_property(_ama.SwapAppTragItem_applicable_trdg_model_get, _ama.SwapAppTragItem_applicable_trdg_model_set)
    def __init__(self): 
        this = _ama.new_SwapAppTragItem()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_SwapAppTragItem
    __del__ = lambda self : None;
SwapAppTragItem_swigregister = _ama.SwapAppTragItem_swigregister
SwapAppTragItem_swigregister(SwapAppTragItem)

class MDSwapFixedFloatInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDSwapFixedFloatInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDSwapFixedFloatInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["security_code"] = _ama.MDSwapFixedFloatInfo_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDSwapFixedFloatInfo_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDSwapFixedFloatInfo_security_code_get, _ama.MDSwapFixedFloatInfo_security_code_set)
    __swig_setmethods__["trade_limit_days"] = _ama.MDSwapFixedFloatInfo_trade_limit_days_set
    __swig_getmethods__["trade_limit_days"] = _ama.MDSwapFixedFloatInfo_trade_limit_days_get
    if _newclass:trade_limit_days = _swig_property(_ama.MDSwapFixedFloatInfo_trade_limit_days_get, _ama.MDSwapFixedFloatInfo_trade_limit_days_set)
    __swig_setmethods__["effective_date"] = _ama.MDSwapFixedFloatInfo_effective_date_set
    __swig_getmethods__["effective_date"] = _ama.MDSwapFixedFloatInfo_effective_date_get
    if _newclass:effective_date = _swig_property(_ama.MDSwapFixedFloatInfo_effective_date_get, _ama.MDSwapFixedFloatInfo_effective_date_set)
    __swig_setmethods__["interest_accural_days_reset"] = _ama.MDSwapFixedFloatInfo_interest_accural_days_reset_set
    __swig_getmethods__["interest_accural_days_reset"] = _ama.MDSwapFixedFloatInfo_interest_accural_days_reset_get
    if _newclass:interest_accural_days_reset = _swig_property(_ama.MDSwapFixedFloatInfo_interest_accural_days_reset_get, _ama.MDSwapFixedFloatInfo_interest_accural_days_reset_set)
    __swig_setmethods__["first_interest_settle_date"] = _ama.MDSwapFixedFloatInfo_first_interest_settle_date_set
    __swig_getmethods__["first_interest_settle_date"] = _ama.MDSwapFixedFloatInfo_first_interest_settle_date_get
    if _newclass:first_interest_settle_date = _swig_property(_ama.MDSwapFixedFloatInfo_first_interest_settle_date_get, _ama.MDSwapFixedFloatInfo_first_interest_settle_date_set)
    __swig_setmethods__["payment_date_reset"] = _ama.MDSwapFixedFloatInfo_payment_date_reset_set
    __swig_getmethods__["payment_date_reset"] = _ama.MDSwapFixedFloatInfo_payment_date_reset_get
    if _newclass:payment_date_reset = _swig_property(_ama.MDSwapFixedFloatInfo_payment_date_reset_get, _ama.MDSwapFixedFloatInfo_payment_date_reset_set)
    __swig_setmethods__["fixed_payment_period"] = _ama.MDSwapFixedFloatInfo_fixed_payment_period_set
    __swig_getmethods__["fixed_payment_period"] = _ama.MDSwapFixedFloatInfo_fixed_payment_period_get
    if _newclass:fixed_payment_period = _swig_property(_ama.MDSwapFixedFloatInfo_fixed_payment_period_get, _ama.MDSwapFixedFloatInfo_fixed_payment_period_set)
    __swig_setmethods__["fixed_interest_basis"] = _ama.MDSwapFixedFloatInfo_fixed_interest_basis_set
    __swig_getmethods__["fixed_interest_basis"] = _ama.MDSwapFixedFloatInfo_fixed_interest_basis_get
    if _newclass:fixed_interest_basis = _swig_property(_ama.MDSwapFixedFloatInfo_fixed_interest_basis_get, _ama.MDSwapFixedFloatInfo_fixed_interest_basis_set)
    __swig_setmethods__["float_reference_rate"] = _ama.MDSwapFixedFloatInfo_float_reference_rate_set
    __swig_getmethods__["float_reference_rate"] = _ama.MDSwapFixedFloatInfo_float_reference_rate_get
    if _newclass:float_reference_rate = _swig_property(_ama.MDSwapFixedFloatInfo_float_reference_rate_get, _ama.MDSwapFixedFloatInfo_float_reference_rate_set)
    __swig_setmethods__["float_default_spread"] = _ama.MDSwapFixedFloatInfo_float_default_spread_set
    __swig_getmethods__["float_default_spread"] = _ama.MDSwapFixedFloatInfo_float_default_spread_get
    if _newclass:float_default_spread = _swig_property(_ama.MDSwapFixedFloatInfo_float_default_spread_get, _ama.MDSwapFixedFloatInfo_float_default_spread_set)
    __swig_setmethods__["first_interest_determin_date"] = _ama.MDSwapFixedFloatInfo_first_interest_determin_date_set
    __swig_getmethods__["first_interest_determin_date"] = _ama.MDSwapFixedFloatInfo_first_interest_determin_date_get
    if _newclass:first_interest_determin_date = _swig_property(_ama.MDSwapFixedFloatInfo_first_interest_determin_date_get, _ama.MDSwapFixedFloatInfo_first_interest_determin_date_set)
    __swig_setmethods__["float_payment_cycle"] = _ama.MDSwapFixedFloatInfo_float_payment_cycle_set
    __swig_getmethods__["float_payment_cycle"] = _ama.MDSwapFixedFloatInfo_float_payment_cycle_get
    if _newclass:float_payment_cycle = _swig_property(_ama.MDSwapFixedFloatInfo_float_payment_cycle_get, _ama.MDSwapFixedFloatInfo_float_payment_cycle_set)
    __swig_setmethods__["float_reset_frequency"] = _ama.MDSwapFixedFloatInfo_float_reset_frequency_set
    __swig_getmethods__["float_reset_frequency"] = _ama.MDSwapFixedFloatInfo_float_reset_frequency_get
    if _newclass:float_reset_frequency = _swig_property(_ama.MDSwapFixedFloatInfo_float_reset_frequency_get, _ama.MDSwapFixedFloatInfo_float_reset_frequency_set)
    __swig_setmethods__["interest_accrual_method"] = _ama.MDSwapFixedFloatInfo_interest_accrual_method_set
    __swig_getmethods__["interest_accrual_method"] = _ama.MDSwapFixedFloatInfo_interest_accrual_method_get
    if _newclass:interest_accrual_method = _swig_property(_ama.MDSwapFixedFloatInfo_interest_accrual_method_get, _ama.MDSwapFixedFloatInfo_interest_accrual_method_set)
    __swig_setmethods__["float_interest_basis"] = _ama.MDSwapFixedFloatInfo_float_interest_basis_set
    __swig_getmethods__["float_interest_basis"] = _ama.MDSwapFixedFloatInfo_float_interest_basis_get
    if _newclass:float_interest_basis = _swig_property(_ama.MDSwapFixedFloatInfo_float_interest_basis_get, _ama.MDSwapFixedFloatInfo_float_interest_basis_set)
    __swig_setmethods__["app_trag_item_cnt"] = _ama.MDSwapFixedFloatInfo_app_trag_item_cnt_set
    __swig_getmethods__["app_trag_item_cnt"] = _ama.MDSwapFixedFloatInfo_app_trag_item_cnt_get
    if _newclass:app_trag_item_cnt = _swig_property(_ama.MDSwapFixedFloatInfo_app_trag_item_cnt_get, _ama.MDSwapFixedFloatInfo_app_trag_item_cnt_set)
    __swig_setmethods__["app_trag_items"] = _ama.MDSwapFixedFloatInfo_app_trag_items_set
    __swig_getmethods__["app_trag_items"] = _ama.MDSwapFixedFloatInfo_app_trag_items_get
    if _newclass:app_trag_items = _swig_property(_ama.MDSwapFixedFloatInfo_app_trag_items_get, _ama.MDSwapFixedFloatInfo_app_trag_items_set)
    __swig_setmethods__["single_min_quote_volume"] = _ama.MDSwapFixedFloatInfo_single_min_quote_volume_set
    __swig_getmethods__["single_min_quote_volume"] = _ama.MDSwapFixedFloatInfo_single_min_quote_volume_get
    if _newclass:single_min_quote_volume = _swig_property(_ama.MDSwapFixedFloatInfo_single_min_quote_volume_get, _ama.MDSwapFixedFloatInfo_single_min_quote_volume_set)
    __swig_setmethods__["single_max_quote_volume"] = _ama.MDSwapFixedFloatInfo_single_max_quote_volume_set
    __swig_getmethods__["single_max_quote_volume"] = _ama.MDSwapFixedFloatInfo_single_max_quote_volume_get
    if _newclass:single_max_quote_volume = _swig_property(_ama.MDSwapFixedFloatInfo_single_max_quote_volume_get, _ama.MDSwapFixedFloatInfo_single_max_quote_volume_set)
    __swig_setmethods__["quote_per_unit_volume"] = _ama.MDSwapFixedFloatInfo_quote_per_unit_volume_set
    __swig_getmethods__["quote_per_unit_volume"] = _ama.MDSwapFixedFloatInfo_quote_per_unit_volume_get
    if _newclass:quote_per_unit_volume = _swig_property(_ama.MDSwapFixedFloatInfo_quote_per_unit_volume_get, _ama.MDSwapFixedFloatInfo_quote_per_unit_volume_set)
    __swig_setmethods__["realtime_takerover_indicator"] = _ama.MDSwapFixedFloatInfo_realtime_takerover_indicator_set
    __swig_getmethods__["realtime_takerover_indicator"] = _ama.MDSwapFixedFloatInfo_realtime_takerover_indicator_get
    if _newclass:realtime_takerover_indicator = _swig_property(_ama.MDSwapFixedFloatInfo_realtime_takerover_indicator_get, _ama.MDSwapFixedFloatInfo_realtime_takerover_indicator_set)
    __swig_setmethods__["unit_match_volume"] = _ama.MDSwapFixedFloatInfo_unit_match_volume_set
    __swig_getmethods__["unit_match_volume"] = _ama.MDSwapFixedFloatInfo_unit_match_volume_get
    if _newclass:unit_match_volume = _swig_property(_ama.MDSwapFixedFloatInfo_unit_match_volume_get, _ama.MDSwapFixedFloatInfo_unit_match_volume_set)
    def __init__(self): 
        this = _ama.new_MDSwapFixedFloatInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDSwapFixedFloatInfo
    __del__ = lambda self : None;
MDSwapFixedFloatInfo_swigregister = _ama.MDSwapFixedFloatInfo_swigregister
MDSwapFixedFloatInfo_swigregister(MDSwapFixedFloatInfo)

class SwapBasisAppTragItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SwapBasisAppTragItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SwapBasisAppTragItem, name)
    __repr__ = _swig_repr
    __swig_setmethods__["applicable_trdg_model"] = _ama.SwapBasisAppTragItem_applicable_trdg_model_set
    __swig_getmethods__["applicable_trdg_model"] = _ama.SwapBasisAppTragItem_applicable_trdg_model_get
    if _newclass:applicable_trdg_model = _swig_property(_ama.SwapBasisAppTragItem_applicable_trdg_model_get, _ama.SwapBasisAppTragItem_applicable_trdg_model_set)
    def __init__(self): 
        this = _ama.new_SwapBasisAppTragItem()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_SwapBasisAppTragItem
    __del__ = lambda self : None;
SwapBasisAppTragItem_swigregister = _ama.SwapBasisAppTragItem_swigregister
SwapBasisAppTragItem_swigregister(SwapBasisAppTragItem)

class MDSwapFixedFloatBasisContractInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDSwapFixedFloatBasisContractInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDSwapFixedFloatBasisContractInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["security_code"] = _ama.MDSwapFixedFloatBasisContractInfo_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDSwapFixedFloatBasisContractInfo_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDSwapFixedFloatBasisContractInfo_security_code_get, _ama.MDSwapFixedFloatBasisContractInfo_security_code_set)
    __swig_setmethods__["effective_date"] = _ama.MDSwapFixedFloatBasisContractInfo_effective_date_set
    __swig_getmethods__["effective_date"] = _ama.MDSwapFixedFloatBasisContractInfo_effective_date_get
    if _newclass:effective_date = _swig_property(_ama.MDSwapFixedFloatBasisContractInfo_effective_date_get, _ama.MDSwapFixedFloatBasisContractInfo_effective_date_set)
    __swig_setmethods__["product_type"] = _ama.MDSwapFixedFloatBasisContractInfo_product_type_set
    __swig_getmethods__["product_type"] = _ama.MDSwapFixedFloatBasisContractInfo_product_type_get
    if _newclass:product_type = _swig_property(_ama.MDSwapFixedFloatBasisContractInfo_product_type_get, _ama.MDSwapFixedFloatBasisContractInfo_product_type_set)
    __swig_setmethods__["app_trag_item_cnt"] = _ama.MDSwapFixedFloatBasisContractInfo_app_trag_item_cnt_set
    __swig_getmethods__["app_trag_item_cnt"] = _ama.MDSwapFixedFloatBasisContractInfo_app_trag_item_cnt_get
    if _newclass:app_trag_item_cnt = _swig_property(_ama.MDSwapFixedFloatBasisContractInfo_app_trag_item_cnt_get, _ama.MDSwapFixedFloatBasisContractInfo_app_trag_item_cnt_set)
    __swig_setmethods__["app_trag_items"] = _ama.MDSwapFixedFloatBasisContractInfo_app_trag_items_set
    __swig_getmethods__["app_trag_items"] = _ama.MDSwapFixedFloatBasisContractInfo_app_trag_items_get
    if _newclass:app_trag_items = _swig_property(_ama.MDSwapFixedFloatBasisContractInfo_app_trag_items_get, _ama.MDSwapFixedFloatBasisContractInfo_app_trag_items_set)
    __swig_setmethods__["single_min_quote_volume"] = _ama.MDSwapFixedFloatBasisContractInfo_single_min_quote_volume_set
    __swig_getmethods__["single_min_quote_volume"] = _ama.MDSwapFixedFloatBasisContractInfo_single_min_quote_volume_get
    if _newclass:single_min_quote_volume = _swig_property(_ama.MDSwapFixedFloatBasisContractInfo_single_min_quote_volume_get, _ama.MDSwapFixedFloatBasisContractInfo_single_min_quote_volume_set)
    __swig_setmethods__["single_max_quote_volume"] = _ama.MDSwapFixedFloatBasisContractInfo_single_max_quote_volume_set
    __swig_getmethods__["single_max_quote_volume"] = _ama.MDSwapFixedFloatBasisContractInfo_single_max_quote_volume_get
    if _newclass:single_max_quote_volume = _swig_property(_ama.MDSwapFixedFloatBasisContractInfo_single_max_quote_volume_get, _ama.MDSwapFixedFloatBasisContractInfo_single_max_quote_volume_set)
    __swig_setmethods__["quote_per_unit_volume"] = _ama.MDSwapFixedFloatBasisContractInfo_quote_per_unit_volume_set
    __swig_getmethods__["quote_per_unit_volume"] = _ama.MDSwapFixedFloatBasisContractInfo_quote_per_unit_volume_get
    if _newclass:quote_per_unit_volume = _swig_property(_ama.MDSwapFixedFloatBasisContractInfo_quote_per_unit_volume_get, _ama.MDSwapFixedFloatBasisContractInfo_quote_per_unit_volume_set)
    __swig_setmethods__["realtime_takerover_indicator"] = _ama.MDSwapFixedFloatBasisContractInfo_realtime_takerover_indicator_set
    __swig_getmethods__["realtime_takerover_indicator"] = _ama.MDSwapFixedFloatBasisContractInfo_realtime_takerover_indicator_get
    if _newclass:realtime_takerover_indicator = _swig_property(_ama.MDSwapFixedFloatBasisContractInfo_realtime_takerover_indicator_get, _ama.MDSwapFixedFloatBasisContractInfo_realtime_takerover_indicator_set)
    __swig_setmethods__["unit_match_volume"] = _ama.MDSwapFixedFloatBasisContractInfo_unit_match_volume_set
    __swig_getmethods__["unit_match_volume"] = _ama.MDSwapFixedFloatBasisContractInfo_unit_match_volume_get
    if _newclass:unit_match_volume = _swig_property(_ama.MDSwapFixedFloatBasisContractInfo_unit_match_volume_get, _ama.MDSwapFixedFloatBasisContractInfo_unit_match_volume_set)
    __swig_setmethods__["long_term_contract"] = _ama.MDSwapFixedFloatBasisContractInfo_long_term_contract_set
    __swig_getmethods__["long_term_contract"] = _ama.MDSwapFixedFloatBasisContractInfo_long_term_contract_get
    if _newclass:long_term_contract = _swig_property(_ama.MDSwapFixedFloatBasisContractInfo_long_term_contract_get, _ama.MDSwapFixedFloatBasisContractInfo_long_term_contract_set)
    __swig_setmethods__["short_term_contract"] = _ama.MDSwapFixedFloatBasisContractInfo_short_term_contract_set
    __swig_getmethods__["short_term_contract"] = _ama.MDSwapFixedFloatBasisContractInfo_short_term_contract_get
    if _newclass:short_term_contract = _swig_property(_ama.MDSwapFixedFloatBasisContractInfo_short_term_contract_get, _ama.MDSwapFixedFloatBasisContractInfo_short_term_contract_set)
    def __init__(self): 
        this = _ama.new_MDSwapFixedFloatBasisContractInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDSwapFixedFloatBasisContractInfo
    __del__ = lambda self : None;
MDSwapFixedFloatBasisContractInfo_swigregister = _ama.MDSwapFixedFloatBasisContractInfo_swigregister
MDSwapFixedFloatBasisContractInfo_swigregister(MDSwapFixedFloatBasisContractInfo)

class RDIQueryItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RDIQueryItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RDIQueryItem, name)
    __repr__ = _swig_repr
    __swig_setmethods__["security_code"] = _ama.RDIQueryItem_security_code_set
    __swig_getmethods__["security_code"] = _ama.RDIQueryItem_security_code_get
    if _newclass:security_code = _swig_property(_ama.RDIQueryItem_security_code_get, _ama.RDIQueryItem_security_code_set)
    def __init__(self): 
        this = _ama.new_RDIQueryItem()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_RDIQueryItem
    __del__ = lambda self : None;
RDIQueryItem_swigregister = _ama.RDIQueryItem_swigregister
RDIQueryItem_swigregister(RDIQueryItem)

class BondInfoInterbankList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BondInfoInterbankList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BondInfoInterbankList, name)
    __repr__ = _swig_repr
    __swig_setmethods__["data_cnt"] = _ama.BondInfoInterbankList_data_cnt_set
    __swig_getmethods__["data_cnt"] = _ama.BondInfoInterbankList_data_cnt_get
    if _newclass:data_cnt = _swig_property(_ama.BondInfoInterbankList_data_cnt_get, _ama.BondInfoInterbankList_data_cnt_set)
    __swig_setmethods__["data"] = _ama.BondInfoInterbankList_data_set
    __swig_getmethods__["data"] = _ama.BondInfoInterbankList_data_get
    if _newclass:data = _swig_property(_ama.BondInfoInterbankList_data_get, _ama.BondInfoInterbankList_data_set)
    def __init__(self): 
        this = _ama.new_BondInfoInterbankList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_BondInfoInterbankList
    __del__ = lambda self : None;
BondInfoInterbankList_swigregister = _ama.BondInfoInterbankList_swigregister
BondInfoInterbankList_swigregister(BondInfoInterbankList)

class ABSInfoList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ABSInfoList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ABSInfoList, name)
    __repr__ = _swig_repr
    __swig_setmethods__["data_cnt"] = _ama.ABSInfoList_data_cnt_set
    __swig_getmethods__["data_cnt"] = _ama.ABSInfoList_data_cnt_get
    if _newclass:data_cnt = _swig_property(_ama.ABSInfoList_data_cnt_get, _ama.ABSInfoList_data_cnt_set)
    __swig_setmethods__["data"] = _ama.ABSInfoList_data_set
    __swig_getmethods__["data"] = _ama.ABSInfoList_data_get
    if _newclass:data = _swig_property(_ama.ABSInfoList_data_get, _ama.ABSInfoList_data_set)
    def __init__(self): 
        this = _ama.new_ABSInfoList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_ABSInfoList
    __del__ = lambda self : None;
ABSInfoList_swigregister = _ama.ABSInfoList_swigregister
ABSInfoList_swigregister(ABSInfoList)

class ABSHistoryInfoList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ABSHistoryInfoList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ABSHistoryInfoList, name)
    __repr__ = _swig_repr
    __swig_setmethods__["data_cnt"] = _ama.ABSHistoryInfoList_data_cnt_set
    __swig_getmethods__["data_cnt"] = _ama.ABSHistoryInfoList_data_cnt_get
    if _newclass:data_cnt = _swig_property(_ama.ABSHistoryInfoList_data_cnt_get, _ama.ABSHistoryInfoList_data_cnt_set)
    __swig_setmethods__["data"] = _ama.ABSHistoryInfoList_data_set
    __swig_getmethods__["data"] = _ama.ABSHistoryInfoList_data_get
    if _newclass:data = _swig_property(_ama.ABSHistoryInfoList_data_get, _ama.ABSHistoryInfoList_data_set)
    def __init__(self): 
        this = _ama.new_ABSHistoryInfoList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_ABSHistoryInfoList
    __del__ = lambda self : None;
ABSHistoryInfoList_swigregister = _ama.ABSHistoryInfoList_swigregister
ABSHistoryInfoList_swigregister(ABSHistoryInfoList)

class ABSCreditRatingsList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ABSCreditRatingsList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ABSCreditRatingsList, name)
    __repr__ = _swig_repr
    __swig_setmethods__["data_cnt"] = _ama.ABSCreditRatingsList_data_cnt_set
    __swig_getmethods__["data_cnt"] = _ama.ABSCreditRatingsList_data_cnt_get
    if _newclass:data_cnt = _swig_property(_ama.ABSCreditRatingsList_data_cnt_get, _ama.ABSCreditRatingsList_data_cnt_set)
    __swig_setmethods__["data"] = _ama.ABSCreditRatingsList_data_set
    __swig_getmethods__["data"] = _ama.ABSCreditRatingsList_data_get
    if _newclass:data = _swig_property(_ama.ABSCreditRatingsList_data_get, _ama.ABSCreditRatingsList_data_set)
    def __init__(self): 
        this = _ama.new_ABSCreditRatingsList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_ABSCreditRatingsList
    __del__ = lambda self : None;
ABSCreditRatingsList_swigregister = _ama.ABSCreditRatingsList_swigregister
ABSCreditRatingsList_swigregister(ABSCreditRatingsList)

class PreIssuedBondInfoList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PreIssuedBondInfoList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PreIssuedBondInfoList, name)
    __repr__ = _swig_repr
    __swig_setmethods__["data_cnt"] = _ama.PreIssuedBondInfoList_data_cnt_set
    __swig_getmethods__["data_cnt"] = _ama.PreIssuedBondInfoList_data_cnt_get
    if _newclass:data_cnt = _swig_property(_ama.PreIssuedBondInfoList_data_cnt_get, _ama.PreIssuedBondInfoList_data_cnt_set)
    __swig_setmethods__["data"] = _ama.PreIssuedBondInfoList_data_set
    __swig_getmethods__["data"] = _ama.PreIssuedBondInfoList_data_get
    if _newclass:data = _swig_property(_ama.PreIssuedBondInfoList_data_get, _ama.PreIssuedBondInfoList_data_set)
    def __init__(self): 
        this = _ama.new_PreIssuedBondInfoList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_PreIssuedBondInfoList
    __del__ = lambda self : None;
PreIssuedBondInfoList_swigregister = _ama.PreIssuedBondInfoList_swigregister
PreIssuedBondInfoList_swigregister(PreIssuedBondInfoList)

class PreIPOBondInfoList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PreIPOBondInfoList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PreIPOBondInfoList, name)
    __repr__ = _swig_repr
    __swig_setmethods__["data_cnt"] = _ama.PreIPOBondInfoList_data_cnt_set
    __swig_getmethods__["data_cnt"] = _ama.PreIPOBondInfoList_data_cnt_get
    if _newclass:data_cnt = _swig_property(_ama.PreIPOBondInfoList_data_cnt_get, _ama.PreIPOBondInfoList_data_cnt_set)
    __swig_setmethods__["data"] = _ama.PreIPOBondInfoList_data_set
    __swig_getmethods__["data"] = _ama.PreIPOBondInfoList_data_get
    if _newclass:data = _swig_property(_ama.PreIPOBondInfoList_data_get, _ama.PreIPOBondInfoList_data_set)
    def __init__(self): 
        this = _ama.new_PreIPOBondInfoList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_PreIPOBondInfoList
    __del__ = lambda self : None;
PreIPOBondInfoList_swigregister = _ama.PreIPOBondInfoList_swigregister
PreIPOBondInfoList_swigregister(PreIPOBondInfoList)

class XBondTradeBondInfoList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, XBondTradeBondInfoList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, XBondTradeBondInfoList, name)
    __repr__ = _swig_repr
    __swig_setmethods__["data_cnt"] = _ama.XBondTradeBondInfoList_data_cnt_set
    __swig_getmethods__["data_cnt"] = _ama.XBondTradeBondInfoList_data_cnt_get
    if _newclass:data_cnt = _swig_property(_ama.XBondTradeBondInfoList_data_cnt_get, _ama.XBondTradeBondInfoList_data_cnt_set)
    __swig_setmethods__["data"] = _ama.XBondTradeBondInfoList_data_set
    __swig_getmethods__["data"] = _ama.XBondTradeBondInfoList_data_get
    if _newclass:data = _swig_property(_ama.XBondTradeBondInfoList_data_get, _ama.XBondTradeBondInfoList_data_set)
    def __init__(self): 
        this = _ama.new_XBondTradeBondInfoList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_XBondTradeBondInfoList
    __del__ = lambda self : None;
XBondTradeBondInfoList_swigregister = _ama.XBondTradeBondInfoList_swigregister
XBondTradeBondInfoList_swigregister(XBondTradeBondInfoList)

class PledgedConvertRateACInfoList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PledgedConvertRateACInfoList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PledgedConvertRateACInfoList, name)
    __repr__ = _swig_repr
    __swig_setmethods__["data_cnt"] = _ama.PledgedConvertRateACInfoList_data_cnt_set
    __swig_getmethods__["data_cnt"] = _ama.PledgedConvertRateACInfoList_data_cnt_get
    if _newclass:data_cnt = _swig_property(_ama.PledgedConvertRateACInfoList_data_cnt_get, _ama.PledgedConvertRateACInfoList_data_cnt_set)
    __swig_setmethods__["data"] = _ama.PledgedConvertRateACInfoList_data_set
    __swig_getmethods__["data"] = _ama.PledgedConvertRateACInfoList_data_get
    if _newclass:data = _swig_property(_ama.PledgedConvertRateACInfoList_data_get, _ama.PledgedConvertRateACInfoList_data_set)
    def __init__(self): 
        this = _ama.new_PledgedConvertRateACInfoList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_PledgedConvertRateACInfoList
    __del__ = lambda self : None;
PledgedConvertRateACInfoList_swigregister = _ama.PledgedConvertRateACInfoList_swigregister
PledgedConvertRateACInfoList_swigregister(PledgedConvertRateACInfoList)

class XRepoHierQuoteGroupInfoList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, XRepoHierQuoteGroupInfoList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, XRepoHierQuoteGroupInfoList, name)
    __repr__ = _swig_repr
    __swig_setmethods__["data_cnt"] = _ama.XRepoHierQuoteGroupInfoList_data_cnt_set
    __swig_getmethods__["data_cnt"] = _ama.XRepoHierQuoteGroupInfoList_data_cnt_get
    if _newclass:data_cnt = _swig_property(_ama.XRepoHierQuoteGroupInfoList_data_cnt_get, _ama.XRepoHierQuoteGroupInfoList_data_cnt_set)
    __swig_setmethods__["data"] = _ama.XRepoHierQuoteGroupInfoList_data_set
    __swig_getmethods__["data"] = _ama.XRepoHierQuoteGroupInfoList_data_get
    if _newclass:data = _swig_property(_ama.XRepoHierQuoteGroupInfoList_data_get, _ama.XRepoHierQuoteGroupInfoList_data_set)
    def __init__(self): 
        this = _ama.new_XRepoHierQuoteGroupInfoList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_XRepoHierQuoteGroupInfoList
    __del__ = lambda self : None;
XRepoHierQuoteGroupInfoList_swigregister = _ama.XRepoHierQuoteGroupInfoList_swigregister
XRepoHierQuoteGroupInfoList_swigregister(XRepoHierQuoteGroupInfoList)

class XRepoContractInfoList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, XRepoContractInfoList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, XRepoContractInfoList, name)
    __repr__ = _swig_repr
    __swig_setmethods__["data_cnt"] = _ama.XRepoContractInfoList_data_cnt_set
    __swig_getmethods__["data_cnt"] = _ama.XRepoContractInfoList_data_cnt_get
    if _newclass:data_cnt = _swig_property(_ama.XRepoContractInfoList_data_cnt_get, _ama.XRepoContractInfoList_data_cnt_set)
    __swig_setmethods__["data"] = _ama.XRepoContractInfoList_data_set
    __swig_getmethods__["data"] = _ama.XRepoContractInfoList_data_get
    if _newclass:data = _swig_property(_ama.XRepoContractInfoList_data_get, _ama.XRepoContractInfoList_data_set)
    def __init__(self): 
        this = _ama.new_XRepoContractInfoList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_XRepoContractInfoList
    __del__ = lambda self : None;
XRepoContractInfoList_swigregister = _ama.XRepoContractInfoList_swigregister
XRepoContractInfoList_swigregister(XRepoContractInfoList)

class SwapFixedFloatInfoList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SwapFixedFloatInfoList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SwapFixedFloatInfoList, name)
    __repr__ = _swig_repr
    __swig_setmethods__["data_cnt"] = _ama.SwapFixedFloatInfoList_data_cnt_set
    __swig_getmethods__["data_cnt"] = _ama.SwapFixedFloatInfoList_data_cnt_get
    if _newclass:data_cnt = _swig_property(_ama.SwapFixedFloatInfoList_data_cnt_get, _ama.SwapFixedFloatInfoList_data_cnt_set)
    __swig_setmethods__["data"] = _ama.SwapFixedFloatInfoList_data_set
    __swig_getmethods__["data"] = _ama.SwapFixedFloatInfoList_data_get
    if _newclass:data = _swig_property(_ama.SwapFixedFloatInfoList_data_get, _ama.SwapFixedFloatInfoList_data_set)
    def __init__(self): 
        this = _ama.new_SwapFixedFloatInfoList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_SwapFixedFloatInfoList
    __del__ = lambda self : None;
SwapFixedFloatInfoList_swigregister = _ama.SwapFixedFloatInfoList_swigregister
SwapFixedFloatInfoList_swigregister(SwapFixedFloatInfoList)

class SwapFixedFloatBasisContractInfoList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SwapFixedFloatBasisContractInfoList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SwapFixedFloatBasisContractInfoList, name)
    __repr__ = _swig_repr
    __swig_setmethods__["data_cnt"] = _ama.SwapFixedFloatBasisContractInfoList_data_cnt_set
    __swig_getmethods__["data_cnt"] = _ama.SwapFixedFloatBasisContractInfoList_data_cnt_get
    if _newclass:data_cnt = _swig_property(_ama.SwapFixedFloatBasisContractInfoList_data_cnt_get, _ama.SwapFixedFloatBasisContractInfoList_data_cnt_set)
    __swig_setmethods__["data"] = _ama.SwapFixedFloatBasisContractInfoList_data_set
    __swig_getmethods__["data"] = _ama.SwapFixedFloatBasisContractInfoList_data_get
    if _newclass:data = _swig_property(_ama.SwapFixedFloatBasisContractInfoList_data_get, _ama.SwapFixedFloatBasisContractInfoList_data_set)
    def __init__(self): 
        this = _ama.new_SwapFixedFloatBasisContractInfoList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_SwapFixedFloatBasisContractInfoList
    __del__ = lambda self : None;
SwapFixedFloatBasisContractInfoList_swigregister = _ama.SwapFixedFloatBasisContractInfoList_swigregister
SwapFixedFloatBasisContractInfoList_swigregister(SwapFixedFloatBasisContractInfoList)

class CFETSApi(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CFETSApi, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CFETSApi, name)
    __repr__ = _swig_repr
    __swig_getmethods__["GetBondInfoInterbank"] = lambda x: _ama.CFETSApi_GetBondInfoInterbank
    if _newclass:GetBondInfoInterbank = staticmethod(_ama.CFETSApi_GetBondInfoInterbank)
    __swig_getmethods__["GetABSInfo"] = lambda x: _ama.CFETSApi_GetABSInfo
    if _newclass:GetABSInfo = staticmethod(_ama.CFETSApi_GetABSInfo)
    __swig_getmethods__["GetABSHistoryInfo"] = lambda x: _ama.CFETSApi_GetABSHistoryInfo
    if _newclass:GetABSHistoryInfo = staticmethod(_ama.CFETSApi_GetABSHistoryInfo)
    __swig_getmethods__["GetABSCreditRatings"] = lambda x: _ama.CFETSApi_GetABSCreditRatings
    if _newclass:GetABSCreditRatings = staticmethod(_ama.CFETSApi_GetABSCreditRatings)
    __swig_getmethods__["GetPreIssuedBondInfo"] = lambda x: _ama.CFETSApi_GetPreIssuedBondInfo
    if _newclass:GetPreIssuedBondInfo = staticmethod(_ama.CFETSApi_GetPreIssuedBondInfo)
    __swig_getmethods__["GetPreIPOBondInfo"] = lambda x: _ama.CFETSApi_GetPreIPOBondInfo
    if _newclass:GetPreIPOBondInfo = staticmethod(_ama.CFETSApi_GetPreIPOBondInfo)
    __swig_getmethods__["GetXBondTradeBondInfo"] = lambda x: _ama.CFETSApi_GetXBondTradeBondInfo
    if _newclass:GetXBondTradeBondInfo = staticmethod(_ama.CFETSApi_GetXBondTradeBondInfo)
    __swig_getmethods__["GetPledgedConvertRateACInfo"] = lambda x: _ama.CFETSApi_GetPledgedConvertRateACInfo
    if _newclass:GetPledgedConvertRateACInfo = staticmethod(_ama.CFETSApi_GetPledgedConvertRateACInfo)
    __swig_getmethods__["GetXRepoHierQuoteGroupInfo"] = lambda x: _ama.CFETSApi_GetXRepoHierQuoteGroupInfo
    if _newclass:GetXRepoHierQuoteGroupInfo = staticmethod(_ama.CFETSApi_GetXRepoHierQuoteGroupInfo)
    __swig_getmethods__["GetXRepoContractInfo"] = lambda x: _ama.CFETSApi_GetXRepoContractInfo
    if _newclass:GetXRepoContractInfo = staticmethod(_ama.CFETSApi_GetXRepoContractInfo)
    __swig_getmethods__["GetSwapFixedFloatInfo"] = lambda x: _ama.CFETSApi_GetSwapFixedFloatInfo
    if _newclass:GetSwapFixedFloatInfo = staticmethod(_ama.CFETSApi_GetSwapFixedFloatInfo)
    __swig_getmethods__["GetSwapFixedFloatBasisContractInfo"] = lambda x: _ama.CFETSApi_GetSwapFixedFloatBasisContractInfo
    if _newclass:GetSwapFixedFloatBasisContractInfo = staticmethod(_ama.CFETSApi_GetSwapFixedFloatBasisContractInfo)
    def __init__(self): 
        this = _ama.new_CFETSApi()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_CFETSApi
    __del__ = lambda self : None;
CFETSApi_swigregister = _ama.CFETSApi_swigregister
CFETSApi_swigregister(CFETSApi)

def CFETSApi_GetBondInfoInterbank(*args):
  return _ama.CFETSApi_GetBondInfoInterbank(*args)
CFETSApi_GetBondInfoInterbank = _ama.CFETSApi_GetBondInfoInterbank

def CFETSApi_GetABSInfo(*args):
  return _ama.CFETSApi_GetABSInfo(*args)
CFETSApi_GetABSInfo = _ama.CFETSApi_GetABSInfo

def CFETSApi_GetABSHistoryInfo(*args):
  return _ama.CFETSApi_GetABSHistoryInfo(*args)
CFETSApi_GetABSHistoryInfo = _ama.CFETSApi_GetABSHistoryInfo

def CFETSApi_GetABSCreditRatings(*args):
  return _ama.CFETSApi_GetABSCreditRatings(*args)
CFETSApi_GetABSCreditRatings = _ama.CFETSApi_GetABSCreditRatings

def CFETSApi_GetPreIssuedBondInfo(*args):
  return _ama.CFETSApi_GetPreIssuedBondInfo(*args)
CFETSApi_GetPreIssuedBondInfo = _ama.CFETSApi_GetPreIssuedBondInfo

def CFETSApi_GetPreIPOBondInfo(*args):
  return _ama.CFETSApi_GetPreIPOBondInfo(*args)
CFETSApi_GetPreIPOBondInfo = _ama.CFETSApi_GetPreIPOBondInfo

def CFETSApi_GetXBondTradeBondInfo(*args):
  return _ama.CFETSApi_GetXBondTradeBondInfo(*args)
CFETSApi_GetXBondTradeBondInfo = _ama.CFETSApi_GetXBondTradeBondInfo

def CFETSApi_GetPledgedConvertRateACInfo(*args):
  return _ama.CFETSApi_GetPledgedConvertRateACInfo(*args)
CFETSApi_GetPledgedConvertRateACInfo = _ama.CFETSApi_GetPledgedConvertRateACInfo

def CFETSApi_GetXRepoHierQuoteGroupInfo(*args):
  return _ama.CFETSApi_GetXRepoHierQuoteGroupInfo(*args)
CFETSApi_GetXRepoHierQuoteGroupInfo = _ama.CFETSApi_GetXRepoHierQuoteGroupInfo

def CFETSApi_GetXRepoContractInfo(*args):
  return _ama.CFETSApi_GetXRepoContractInfo(*args)
CFETSApi_GetXRepoContractInfo = _ama.CFETSApi_GetXRepoContractInfo

def CFETSApi_GetSwapFixedFloatInfo(*args):
  return _ama.CFETSApi_GetSwapFixedFloatInfo(*args)
CFETSApi_GetSwapFixedFloatInfo = _ama.CFETSApi_GetSwapFixedFloatInfo

def CFETSApi_GetSwapFixedFloatBasisContractInfo(*args):
  return _ama.CFETSApi_GetSwapFixedFloatBasisContractInfo(*args)
CFETSApi_GetSwapFixedFloatBasisContractInfo = _ama.CFETSApi_GetSwapFixedFloatBasisContractInfo

class CFETSSpi(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CFETSSpi, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CFETSSpi, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _ama.delete_CFETSSpi
    __del__ = lambda self : None;
    def OnMDSpotTickExecution(self, *args): return _ama.CFETSSpi_OnMDSpotTickExecution(self, *args)
    def OnMDSpotSummarySnapshot(self, *args): return _ama.CFETSSpi_OnMDSpotSummarySnapshot(self, *args)
    def OnMDSpotXBondSnapshot(self, *args): return _ama.CFETSSpi_OnMDSpotXBondSnapshot(self, *args)
    def OnMDPledgeRepoTickExecution(self, *args): return _ama.CFETSSpi_OnMDPledgeRepoTickExecution(self, *args)
    def OnMDPledgeRepoSummarySnapshot(self, *args): return _ama.CFETSSpi_OnMDPledgeRepoSummarySnapshot(self, *args)
    def OnMDPledgeRepoInquirySnapshot(self, *args): return _ama.CFETSSpi_OnMDPledgeRepoInquirySnapshot(self, *args)
    def OnMDPledgeRepoDepositSnapshot(self, *args): return _ama.CFETSSpi_OnMDPledgeRepoDepositSnapshot(self, *args)
    def OnMDPledgeRepoXRepoSnapshot(self, *args): return _ama.CFETSSpi_OnMDPledgeRepoXRepoSnapshot(self, *args)
    def OnMDCeditLoanTickExecution(self, *args): return _ama.CFETSSpi_OnMDCeditLoanTickExecution(self, *args)
    def OnMDCeditLoanSnapshot(self, *args): return _ama.CFETSSpi_OnMDCeditLoanSnapshot(self, *args)
    def OnMDCeditLoanDepositSnapshot(self, *args): return _ama.CFETSSpi_OnMDCeditLoanDepositSnapshot(self, *args)
    def OnMDSwapFixedFloatTickExecution(self, *args): return _ama.CFETSSpi_OnMDSwapFixedFloatTickExecution(self, *args)
    def OnMDSwapFixedFloatSnapshot(self, *args): return _ama.CFETSSpi_OnMDSwapFixedFloatSnapshot(self, *args)
    def OnMDSwapXSwapSnapshot(self, *args): return _ama.CFETSSpi_OnMDSwapXSwapSnapshot(self, *args)
    def OnMDSwapXSwapBestOfferSnapshot(self, *args): return _ama.CFETSSpi_OnMDSwapXSwapBestOfferSnapshot(self, *args)
    def OnMDBondLoanTickExecution(self, *args): return _ama.CFETSSpi_OnMDBondLoanTickExecution(self, *args)
    def OnMDBondLoanUnderlyingSecurityRateSnapshot(self, *args): return _ama.CFETSSpi_OnMDBondLoanUnderlyingSecurityRateSnapshot(self, *args)
    def OnMDBondLoanTradingProductRateSnapshot(self, *args): return _ama.CFETSSpi_OnMDBondLoanTradingProductRateSnapshot(self, *args)
    def OnMDSpotMarketMakersQuoteSnapshot(self, *args): return _ama.CFETSSpi_OnMDSpotMarketMakersQuoteSnapshot(self, *args)
    def OnMDSpotDirectiveQuoteSnapshot(self, *args): return _ama.CFETSSpi_OnMDSpotDirectiveQuoteSnapshot(self, *args)
    def OnMDSpotXBondDepthQuoteSnapshot(self, *args): return _ama.CFETSSpi_OnMDSpotXBondDepthQuoteSnapshot(self, *args)
    def OnMDSpotXBondMatchQuoteSnapshot(self, *args): return _ama.CFETSSpi_OnMDSpotXBondMatchQuoteSnapshot(self, *args)
    def OnMDPledgeRepoXRepoDepthQuoteSnapshot(self, *args): return _ama.CFETSSpi_OnMDPledgeRepoXRepoDepthQuoteSnapshot(self, *args)
    def OnMDPledgeRepoXRepoBestOfferQuoteSnapshot(self, *args): return _ama.CFETSSpi_OnMDPledgeRepoXRepoBestOfferQuoteSnapshot(self, *args)
    def OnMDSwapXSwapDepthQuoteSnapshot(self, *args): return _ama.CFETSSpi_OnMDSwapXSwapDepthQuoteSnapshot(self, *args)
    def OnMDSwapXSwapTickExecution(self, *args): return _ama.CFETSSpi_OnMDSwapXSwapTickExecution(self, *args)
    def __init__(self): 
        if self.__class__ == CFETSSpi:
            _self = None
        else:
            _self = self
        this = _ama.new_CFETSSpi(_self, )
        try: self.this.append(this)
        except: self.this = this
    def __disown__(self):
        self.this.disown()
        _ama.disown_CFETSSpi(self)
        return weakref_proxy(self)
CFETSSpi_swigregister = _ama.CFETSSpi_swigregister
CFETSSpi_swigregister(CFETSSpi)

class MDHKExSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDHKExSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDHKExSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDHKExSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDHKExSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDHKExSnapshot_market_type_get, _ama.MDHKExSnapshot_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDHKExSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDHKExSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDHKExSnapshot_security_code_get, _ama.MDHKExSnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDHKExSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDHKExSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDHKExSnapshot_orig_time_get, _ama.MDHKExSnapshot_orig_time_set)
    __swig_setmethods__["pre_close_price"] = _ama.MDHKExSnapshot_pre_close_price_set
    __swig_getmethods__["pre_close_price"] = _ama.MDHKExSnapshot_pre_close_price_get
    if _newclass:pre_close_price = _swig_property(_ama.MDHKExSnapshot_pre_close_price_get, _ama.MDHKExSnapshot_pre_close_price_set)
    __swig_setmethods__["last_price"] = _ama.MDHKExSnapshot_last_price_set
    __swig_getmethods__["last_price"] = _ama.MDHKExSnapshot_last_price_get
    if _newclass:last_price = _swig_property(_ama.MDHKExSnapshot_last_price_get, _ama.MDHKExSnapshot_last_price_set)
    __swig_setmethods__["open_price"] = _ama.MDHKExSnapshot_open_price_set
    __swig_getmethods__["open_price"] = _ama.MDHKExSnapshot_open_price_get
    if _newclass:open_price = _swig_property(_ama.MDHKExSnapshot_open_price_get, _ama.MDHKExSnapshot_open_price_set)
    __swig_setmethods__["high_price"] = _ama.MDHKExSnapshot_high_price_set
    __swig_getmethods__["high_price"] = _ama.MDHKExSnapshot_high_price_get
    if _newclass:high_price = _swig_property(_ama.MDHKExSnapshot_high_price_get, _ama.MDHKExSnapshot_high_price_set)
    __swig_setmethods__["low_price"] = _ama.MDHKExSnapshot_low_price_set
    __swig_getmethods__["low_price"] = _ama.MDHKExSnapshot_low_price_get
    if _newclass:low_price = _swig_property(_ama.MDHKExSnapshot_low_price_get, _ama.MDHKExSnapshot_low_price_set)
    __swig_setmethods__["close_price"] = _ama.MDHKExSnapshot_close_price_set
    __swig_getmethods__["close_price"] = _ama.MDHKExSnapshot_close_price_get
    if _newclass:close_price = _swig_property(_ama.MDHKExSnapshot_close_price_get, _ama.MDHKExSnapshot_close_price_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDHKExSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDHKExSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDHKExSnapshot_total_volume_trade_get, _ama.MDHKExSnapshot_total_volume_trade_set)
    __swig_setmethods__["total_value_trade"] = _ama.MDHKExSnapshot_total_value_trade_set
    __swig_getmethods__["total_value_trade"] = _ama.MDHKExSnapshot_total_value_trade_get
    if _newclass:total_value_trade = _swig_property(_ama.MDHKExSnapshot_total_value_trade_get, _ama.MDHKExSnapshot_total_value_trade_set)
    __swig_setmethods__["short_volume_shares"] = _ama.MDHKExSnapshot_short_volume_shares_set
    __swig_getmethods__["short_volume_shares"] = _ama.MDHKExSnapshot_short_volume_shares_get
    if _newclass:short_volume_shares = _swig_property(_ama.MDHKExSnapshot_short_volume_shares_get, _ama.MDHKExSnapshot_short_volume_shares_set)
    __swig_setmethods__["short_value_turnover"] = _ama.MDHKExSnapshot_short_value_turnover_set
    __swig_getmethods__["short_value_turnover"] = _ama.MDHKExSnapshot_short_value_turnover_get
    if _newclass:short_value_turnover = _swig_property(_ama.MDHKExSnapshot_short_value_turnover_get, _ama.MDHKExSnapshot_short_value_turnover_set)
    __swig_setmethods__["variety_category"] = _ama.MDHKExSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDHKExSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDHKExSnapshot_variety_category_get, _ama.MDHKExSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDHKExSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDHKExSnapshot
    __del__ = lambda self : None;
MDHKExSnapshot_swigregister = _ama.MDHKExSnapshot_swigregister
MDHKExSnapshot_swigregister(MDHKExSnapshot)

class MDHKExListItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDHKExListItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDHKExListItem, name)
    __repr__ = _swig_repr
    __swig_setmethods__["order_price"] = _ama.MDHKExListItem_order_price_set
    __swig_getmethods__["order_price"] = _ama.MDHKExListItem_order_price_get
    if _newclass:order_price = _swig_property(_ama.MDHKExListItem_order_price_get, _ama.MDHKExListItem_order_price_set)
    __swig_setmethods__["order_volume"] = _ama.MDHKExListItem_order_volume_set
    __swig_getmethods__["order_volume"] = _ama.MDHKExListItem_order_volume_get
    if _newclass:order_volume = _swig_property(_ama.MDHKExListItem_order_volume_get, _ama.MDHKExListItem_order_volume_set)
    __swig_setmethods__["num_of_orders"] = _ama.MDHKExListItem_num_of_orders_set
    __swig_getmethods__["num_of_orders"] = _ama.MDHKExListItem_num_of_orders_get
    if _newclass:num_of_orders = _swig_property(_ama.MDHKExListItem_num_of_orders_get, _ama.MDHKExListItem_num_of_orders_set)
    def __init__(self): 
        this = _ama.new_MDHKExListItem()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDHKExListItem
    __del__ = lambda self : None;
MDHKExListItem_swigregister = _ama.MDHKExListItem_swigregister
MDHKExListItem_swigregister(MDHKExListItem)

class MDHKExOrderSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDHKExOrderSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDHKExOrderSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDHKExOrderSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDHKExOrderSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDHKExOrderSnapshot_market_type_get, _ama.MDHKExOrderSnapshot_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDHKExOrderSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDHKExOrderSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDHKExOrderSnapshot_security_code_get, _ama.MDHKExOrderSnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDHKExOrderSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDHKExOrderSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDHKExOrderSnapshot_orig_time_get, _ama.MDHKExOrderSnapshot_orig_time_set)
    __swig_setmethods__["bid_list"] = _ama.MDHKExOrderSnapshot_bid_list_set
    __swig_getmethods__["bid_list"] = _ama.MDHKExOrderSnapshot_bid_list_get
    if _newclass:bid_list = _swig_property(_ama.MDHKExOrderSnapshot_bid_list_get, _ama.MDHKExOrderSnapshot_bid_list_set)
    __swig_setmethods__["ask_list"] = _ama.MDHKExOrderSnapshot_ask_list_set
    __swig_getmethods__["ask_list"] = _ama.MDHKExOrderSnapshot_ask_list_get
    if _newclass:ask_list = _swig_property(_ama.MDHKExOrderSnapshot_ask_list_get, _ama.MDHKExOrderSnapshot_ask_list_set)
    __swig_setmethods__["variety_category"] = _ama.MDHKExOrderSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDHKExOrderSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDHKExOrderSnapshot_variety_category_get, _ama.MDHKExOrderSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDHKExOrderSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDHKExOrderSnapshot
    __del__ = lambda self : None;
MDHKExOrderSnapshot_swigregister = _ama.MDHKExOrderSnapshot_swigregister
MDHKExOrderSnapshot_swigregister(MDHKExOrderSnapshot)

class MDHKExDetailItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDHKExDetailItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDHKExDetailItem, name)
    __repr__ = _swig_repr
    __swig_setmethods__["level"] = _ama.MDHKExDetailItem_level_set
    __swig_getmethods__["level"] = _ama.MDHKExDetailItem_level_get
    if _newclass:level = _swig_property(_ama.MDHKExDetailItem_level_get, _ama.MDHKExDetailItem_level_set)
    __swig_setmethods__["broker_num"] = _ama.MDHKExDetailItem_broker_num_set
    __swig_getmethods__["broker_num"] = _ama.MDHKExDetailItem_broker_num_get
    if _newclass:broker_num = _swig_property(_ama.MDHKExDetailItem_broker_num_get, _ama.MDHKExDetailItem_broker_num_set)
    def __init__(self): 
        this = _ama.new_MDHKExDetailItem()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDHKExDetailItem
    __del__ = lambda self : None;
MDHKExDetailItem_swigregister = _ama.MDHKExDetailItem_swigregister
MDHKExDetailItem_swigregister(MDHKExDetailItem)

class MDHKExOrderBrokerSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDHKExOrderBrokerSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDHKExOrderBrokerSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDHKExOrderBrokerSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDHKExOrderBrokerSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDHKExOrderBrokerSnapshot_market_type_get, _ama.MDHKExOrderBrokerSnapshot_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDHKExOrderBrokerSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDHKExOrderBrokerSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDHKExOrderBrokerSnapshot_security_code_get, _ama.MDHKExOrderBrokerSnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDHKExOrderBrokerSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDHKExOrderBrokerSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDHKExOrderBrokerSnapshot_orig_time_get, _ama.MDHKExOrderBrokerSnapshot_orig_time_set)
    __swig_setmethods__["side"] = _ama.MDHKExOrderBrokerSnapshot_side_set
    __swig_getmethods__["side"] = _ama.MDHKExOrderBrokerSnapshot_side_get
    if _newclass:side = _swig_property(_ama.MDHKExOrderBrokerSnapshot_side_get, _ama.MDHKExOrderBrokerSnapshot_side_set)
    __swig_setmethods__["broker_flag"] = _ama.MDHKExOrderBrokerSnapshot_broker_flag_set
    __swig_getmethods__["broker_flag"] = _ama.MDHKExOrderBrokerSnapshot_broker_flag_get
    if _newclass:broker_flag = _swig_property(_ama.MDHKExOrderBrokerSnapshot_broker_flag_get, _ama.MDHKExOrderBrokerSnapshot_broker_flag_set)
    __swig_setmethods__["detail"] = _ama.MDHKExOrderBrokerSnapshot_detail_set
    __swig_getmethods__["detail"] = _ama.MDHKExOrderBrokerSnapshot_detail_get
    if _newclass:detail = _swig_property(_ama.MDHKExOrderBrokerSnapshot_detail_get, _ama.MDHKExOrderBrokerSnapshot_detail_set)
    __swig_setmethods__["variety_category"] = _ama.MDHKExOrderBrokerSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDHKExOrderBrokerSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDHKExOrderBrokerSnapshot_variety_category_get, _ama.MDHKExOrderBrokerSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDHKExOrderBrokerSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDHKExOrderBrokerSnapshot
    __del__ = lambda self : None;
MDHKExOrderBrokerSnapshot_swigregister = _ama.MDHKExOrderBrokerSnapshot_swigregister
MDHKExOrderBrokerSnapshot_swigregister(MDHKExOrderBrokerSnapshot)

class MDHKExTickExecution(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDHKExTickExecution, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDHKExTickExecution, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDHKExTickExecution_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDHKExTickExecution_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDHKExTickExecution_market_type_get, _ama.MDHKExTickExecution_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDHKExTickExecution_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDHKExTickExecution_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDHKExTickExecution_security_code_get, _ama.MDHKExTickExecution_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDHKExTickExecution_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDHKExTickExecution_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDHKExTickExecution_orig_time_get, _ama.MDHKExTickExecution_orig_time_set)
    __swig_setmethods__["appl_seq_num"] = _ama.MDHKExTickExecution_appl_seq_num_set
    __swig_getmethods__["appl_seq_num"] = _ama.MDHKExTickExecution_appl_seq_num_get
    if _newclass:appl_seq_num = _swig_property(_ama.MDHKExTickExecution_appl_seq_num_get, _ama.MDHKExTickExecution_appl_seq_num_set)
    __swig_setmethods__["side"] = _ama.MDHKExTickExecution_side_set
    __swig_getmethods__["side"] = _ama.MDHKExTickExecution_side_get
    if _newclass:side = _swig_property(_ama.MDHKExTickExecution_side_get, _ama.MDHKExTickExecution_side_set)
    __swig_setmethods__["exec_price"] = _ama.MDHKExTickExecution_exec_price_set
    __swig_getmethods__["exec_price"] = _ama.MDHKExTickExecution_exec_price_get
    if _newclass:exec_price = _swig_property(_ama.MDHKExTickExecution_exec_price_get, _ama.MDHKExTickExecution_exec_price_set)
    __swig_setmethods__["exec_volume"] = _ama.MDHKExTickExecution_exec_volume_set
    __swig_getmethods__["exec_volume"] = _ama.MDHKExTickExecution_exec_volume_get
    if _newclass:exec_volume = _swig_property(_ama.MDHKExTickExecution_exec_volume_get, _ama.MDHKExTickExecution_exec_volume_set)
    __swig_setmethods__["exec_type"] = _ama.MDHKExTickExecution_exec_type_set
    __swig_getmethods__["exec_type"] = _ama.MDHKExTickExecution_exec_type_get
    if _newclass:exec_type = _swig_property(_ama.MDHKExTickExecution_exec_type_get, _ama.MDHKExTickExecution_exec_type_set)
    __swig_setmethods__["cancel_flag"] = _ama.MDHKExTickExecution_cancel_flag_set
    __swig_getmethods__["cancel_flag"] = _ama.MDHKExTickExecution_cancel_flag_get
    if _newclass:cancel_flag = _swig_property(_ama.MDHKExTickExecution_cancel_flag_get, _ama.MDHKExTickExecution_cancel_flag_set)
    __swig_setmethods__["variety_category"] = _ama.MDHKExTickExecution_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDHKExTickExecution_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDHKExTickExecution_variety_category_get, _ama.MDHKExTickExecution_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDHKExTickExecution()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDHKExTickExecution
    __del__ = lambda self : None;
MDHKExTickExecution_swigregister = _ama.MDHKExTickExecution_swigregister
MDHKExTickExecution_swigregister(MDHKExTickExecution)

class MDHKExIndexSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDHKExIndexSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDHKExIndexSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDHKExIndexSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDHKExIndexSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDHKExIndexSnapshot_market_type_get, _ama.MDHKExIndexSnapshot_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDHKExIndexSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDHKExIndexSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDHKExIndexSnapshot_security_code_get, _ama.MDHKExIndexSnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDHKExIndexSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDHKExIndexSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDHKExIndexSnapshot_orig_time_get, _ama.MDHKExIndexSnapshot_orig_time_set)
    __swig_setmethods__["index_status"] = _ama.MDHKExIndexSnapshot_index_status_set
    __swig_getmethods__["index_status"] = _ama.MDHKExIndexSnapshot_index_status_get
    if _newclass:index_status = _swig_property(_ama.MDHKExIndexSnapshot_index_status_get, _ama.MDHKExIndexSnapshot_index_status_set)
    __swig_setmethods__["pre_close_price"] = _ama.MDHKExIndexSnapshot_pre_close_price_set
    __swig_getmethods__["pre_close_price"] = _ama.MDHKExIndexSnapshot_pre_close_price_get
    if _newclass:pre_close_price = _swig_property(_ama.MDHKExIndexSnapshot_pre_close_price_get, _ama.MDHKExIndexSnapshot_pre_close_price_set)
    __swig_setmethods__["open_price"] = _ama.MDHKExIndexSnapshot_open_price_set
    __swig_getmethods__["open_price"] = _ama.MDHKExIndexSnapshot_open_price_get
    if _newclass:open_price = _swig_property(_ama.MDHKExIndexSnapshot_open_price_get, _ama.MDHKExIndexSnapshot_open_price_set)
    __swig_setmethods__["high_price"] = _ama.MDHKExIndexSnapshot_high_price_set
    __swig_getmethods__["high_price"] = _ama.MDHKExIndexSnapshot_high_price_get
    if _newclass:high_price = _swig_property(_ama.MDHKExIndexSnapshot_high_price_get, _ama.MDHKExIndexSnapshot_high_price_set)
    __swig_setmethods__["low_price"] = _ama.MDHKExIndexSnapshot_low_price_set
    __swig_getmethods__["low_price"] = _ama.MDHKExIndexSnapshot_low_price_get
    if _newclass:low_price = _swig_property(_ama.MDHKExIndexSnapshot_low_price_get, _ama.MDHKExIndexSnapshot_low_price_set)
    __swig_setmethods__["close_price"] = _ama.MDHKExIndexSnapshot_close_price_set
    __swig_getmethods__["close_price"] = _ama.MDHKExIndexSnapshot_close_price_get
    if _newclass:close_price = _swig_property(_ama.MDHKExIndexSnapshot_close_price_get, _ama.MDHKExIndexSnapshot_close_price_set)
    __swig_setmethods__["last_price"] = _ama.MDHKExIndexSnapshot_last_price_set
    __swig_getmethods__["last_price"] = _ama.MDHKExIndexSnapshot_last_price_get
    if _newclass:last_price = _swig_property(_ama.MDHKExIndexSnapshot_last_price_get, _ama.MDHKExIndexSnapshot_last_price_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDHKExIndexSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDHKExIndexSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDHKExIndexSnapshot_total_volume_trade_get, _ama.MDHKExIndexSnapshot_total_volume_trade_set)
    __swig_setmethods__["total_value_trade"] = _ama.MDHKExIndexSnapshot_total_value_trade_set
    __swig_getmethods__["total_value_trade"] = _ama.MDHKExIndexSnapshot_total_value_trade_get
    if _newclass:total_value_trade = _swig_property(_ama.MDHKExIndexSnapshot_total_value_trade_get, _ama.MDHKExIndexSnapshot_total_value_trade_set)
    __swig_setmethods__["change"] = _ama.MDHKExIndexSnapshot_change_set
    __swig_getmethods__["change"] = _ama.MDHKExIndexSnapshot_change_get
    if _newclass:change = _swig_property(_ama.MDHKExIndexSnapshot_change_get, _ama.MDHKExIndexSnapshot_change_set)
    __swig_setmethods__["ratio_of_change"] = _ama.MDHKExIndexSnapshot_ratio_of_change_set
    __swig_getmethods__["ratio_of_change"] = _ama.MDHKExIndexSnapshot_ratio_of_change_get
    if _newclass:ratio_of_change = _swig_property(_ama.MDHKExIndexSnapshot_ratio_of_change_get, _ama.MDHKExIndexSnapshot_ratio_of_change_set)
    __swig_setmethods__["eas_value"] = _ama.MDHKExIndexSnapshot_eas_value_set
    __swig_getmethods__["eas_value"] = _ama.MDHKExIndexSnapshot_eas_value_get
    if _newclass:eas_value = _swig_property(_ama.MDHKExIndexSnapshot_eas_value_get, _ama.MDHKExIndexSnapshot_eas_value_set)
    __swig_setmethods__["variety_category"] = _ama.MDHKExIndexSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDHKExIndexSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDHKExIndexSnapshot_variety_category_get, _ama.MDHKExIndexSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDHKExIndexSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDHKExIndexSnapshot
    __del__ = lambda self : None;
MDHKExIndexSnapshot_swigregister = _ama.MDHKExIndexSnapshot_swigregister
MDHKExIndexSnapshot_swigregister(MDHKExIndexSnapshot)

class HKExSpi(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, HKExSpi, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, HKExSpi, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _ama.delete_HKExSpi
    __del__ = lambda self : None;
    def OnMDHKExSnapshot(self, *args): return _ama.HKExSpi_OnMDHKExSnapshot(self, *args)
    def OnMDHKExOrderSnapshot(self, *args): return _ama.HKExSpi_OnMDHKExOrderSnapshot(self, *args)
    def OnMDHKExOrderBrokerSnapshot(self, *args): return _ama.HKExSpi_OnMDHKExOrderBrokerSnapshot(self, *args)
    def OnMDHKExTickExecution(self, *args): return _ama.HKExSpi_OnMDHKExTickExecution(self, *args)
    def OnMDHKExIndexSnapshot(self, *args): return _ama.HKExSpi_OnMDHKExIndexSnapshot(self, *args)
    def __init__(self): 
        if self.__class__ == HKExSpi:
            _self = None
        else:
            _self = self
        this = _ama.new_HKExSpi(_self, )
        try: self.this.append(this)
        except: self.this = this
    def __disown__(self):
        self.this.disown()
        _ama.disown_HKExSpi(self)
        return weakref_proxy(self)
HKExSpi_swigregister = _ama.HKExSpi_swigregister
HKExSpi_swigregister(HKExSpi)

class Tools(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Tools, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Tools, name)
    __repr__ = _swig_repr
    __swig_getmethods__["SetUMSServers"] = lambda x: _ama.Tools_SetUMSServers
    if _newclass:SetUMSServers = staticmethod(_ama.Tools_SetUMSServers)
    __swig_getmethods__["GetUMSServers"] = lambda x: _ama.Tools_GetUMSServers
    if _newclass:GetUMSServers = staticmethod(_ama.Tools_GetUMSServers)
    __swig_getmethods__["CreateSubscribeItem"] = lambda x: _ama.Tools_CreateSubscribeItem
    if _newclass:CreateSubscribeItem = staticmethod(_ama.Tools_CreateSubscribeItem)
    __swig_getmethods__["DestroySubscribeItem"] = lambda x: _ama.Tools_DestroySubscribeItem
    if _newclass:DestroySubscribeItem = staticmethod(_ama.Tools_DestroySubscribeItem)
    __swig_getmethods__["CreateSubscribeCategoryItem"] = lambda x: _ama.Tools_CreateSubscribeCategoryItem
    if _newclass:CreateSubscribeCategoryItem = staticmethod(_ama.Tools_CreateSubscribeCategoryItem)
    __swig_getmethods__["DestroySubscribeCategoryItem"] = lambda x: _ama.Tools_DestroySubscribeCategoryItem
    if _newclass:DestroySubscribeCategoryItem = staticmethod(_ama.Tools_DestroySubscribeCategoryItem)
    __swig_getmethods__["SetSubscribeItem"] = lambda x: _ama.Tools_SetSubscribeItem
    if _newclass:SetSubscribeItem = staticmethod(_ama.Tools_SetSubscribeItem)
    __swig_getmethods__["GetSubscribeItemByIndex"] = lambda x: _ama.Tools_GetSubscribeItemByIndex
    if _newclass:GetSubscribeItemByIndex = staticmethod(_ama.Tools_GetSubscribeItemByIndex)
    __swig_getmethods__["SetSubscribeCategoryItem"] = lambda x: _ama.Tools_SetSubscribeCategoryItem
    if _newclass:SetSubscribeCategoryItem = staticmethod(_ama.Tools_SetSubscribeCategoryItem)
    __swig_getmethods__["GetSubscribeCategoryItemByIndex"] = lambda x: _ama.Tools_GetSubscribeCategoryItemByIndex
    if _newclass:GetSubscribeCategoryItemByIndex = staticmethod(_ama.Tools_GetSubscribeCategoryItemByIndex)
    __swig_getmethods__["CreateSubscribeOrderBookItem"] = lambda x: _ama.Tools_CreateSubscribeOrderBookItem
    if _newclass:CreateSubscribeOrderBookItem = staticmethod(_ama.Tools_CreateSubscribeOrderBookItem)
    __swig_getmethods__["DestroySubscribeOrderBookItem"] = lambda x: _ama.Tools_DestroySubscribeOrderBookItem
    if _newclass:DestroySubscribeOrderBookItem = staticmethod(_ama.Tools_DestroySubscribeOrderBookItem)
    __swig_getmethods__["SetSubscribeOrderBookItem"] = lambda x: _ama.Tools_SetSubscribeOrderBookItem
    if _newclass:SetSubscribeOrderBookItem = staticmethod(_ama.Tools_SetSubscribeOrderBookItem)
    __swig_getmethods__["GetSubscribeOrderBookItemByIndex"] = lambda x: _ama.Tools_GetSubscribeOrderBookItemByIndex
    if _newclass:GetSubscribeOrderBookItemByIndex = staticmethod(_ama.Tools_GetSubscribeOrderBookItemByIndex)
    __swig_getmethods__["CreateSubscribeDerivedDataItem"] = lambda x: _ama.Tools_CreateSubscribeDerivedDataItem
    if _newclass:CreateSubscribeDerivedDataItem = staticmethod(_ama.Tools_CreateSubscribeDerivedDataItem)
    __swig_getmethods__["DestroySubscribeDerivedDataItem"] = lambda x: _ama.Tools_DestroySubscribeDerivedDataItem
    if _newclass:DestroySubscribeDerivedDataItem = staticmethod(_ama.Tools_DestroySubscribeDerivedDataItem)
    __swig_getmethods__["SetSubscribeDerivedDataItem"] = lambda x: _ama.Tools_SetSubscribeDerivedDataItem
    if _newclass:SetSubscribeDerivedDataItem = staticmethod(_ama.Tools_SetSubscribeDerivedDataItem)
    __swig_getmethods__["GetSubscribeDerivedDataItemByIndex"] = lambda x: _ama.Tools_GetSubscribeDerivedDataItemByIndex
    if _newclass:GetSubscribeDerivedDataItemByIndex = staticmethod(_ama.Tools_GetSubscribeDerivedDataItemByIndex)
    __swig_getmethods__["CreateCodeTableRecordList"] = lambda x: _ama.Tools_CreateCodeTableRecordList
    if _newclass:CreateCodeTableRecordList = staticmethod(_ama.Tools_CreateCodeTableRecordList)
    __swig_getmethods__["DestroyCodeTableRecordList"] = lambda x: _ama.Tools_DestroyCodeTableRecordList
    if _newclass:DestroyCodeTableRecordList = staticmethod(_ama.Tools_DestroyCodeTableRecordList)
    __swig_getmethods__["CreateETFCodeTableRecordList"] = lambda x: _ama.Tools_CreateETFCodeTableRecordList
    if _newclass:CreateETFCodeTableRecordList = staticmethod(_ama.Tools_CreateETFCodeTableRecordList)
    __swig_getmethods__["DestroyETFCodeTableRecordList"] = lambda x: _ama.Tools_DestroyETFCodeTableRecordList
    if _newclass:DestroyETFCodeTableRecordList = staticmethod(_ama.Tools_DestroyETFCodeTableRecordList)
    __swig_getmethods__["CreateSubCodeTableItem"] = lambda x: _ama.Tools_CreateSubCodeTableItem
    if _newclass:CreateSubCodeTableItem = staticmethod(_ama.Tools_CreateSubCodeTableItem)
    __swig_getmethods__["DestroySubCodeTableItem"] = lambda x: _ama.Tools_DestroySubCodeTableItem
    if _newclass:DestroySubCodeTableItem = staticmethod(_ama.Tools_DestroySubCodeTableItem)
    __swig_getmethods__["GetSubCodeTableItemByIndex"] = lambda x: _ama.Tools_GetSubCodeTableItemByIndex
    if _newclass:GetSubCodeTableItemByIndex = staticmethod(_ama.Tools_GetSubCodeTableItemByIndex)
    __swig_getmethods__["SetSubCodeTableItem"] = lambda x: _ama.Tools_SetSubCodeTableItem
    if _newclass:SetSubCodeTableItem = staticmethod(_ama.Tools_SetSubCodeTableItem)
    __swig_getmethods__["CreateETFItem"] = lambda x: _ama.Tools_CreateETFItem
    if _newclass:CreateETFItem = staticmethod(_ama.Tools_CreateETFItem)
    __swig_getmethods__["DestroyETFItem"] = lambda x: _ama.Tools_DestroyETFItem
    if _newclass:DestroyETFItem = staticmethod(_ama.Tools_DestroyETFItem)
    __swig_getmethods__["SetETFItem"] = lambda x: _ama.Tools_SetETFItem
    if _newclass:SetETFItem = staticmethod(_ama.Tools_SetETFItem)
    __swig_getmethods__["GetETFItemByIndex"] = lambda x: _ama.Tools_GetETFItemByIndex
    if _newclass:GetETFItemByIndex = staticmethod(_ama.Tools_GetETFItemByIndex)
    __swig_getmethods__["CreateRDIQueryItem"] = lambda x: _ama.Tools_CreateRDIQueryItem
    if _newclass:CreateRDIQueryItem = staticmethod(_ama.Tools_CreateRDIQueryItem)
    __swig_getmethods__["DestroyRDIQueryItem"] = lambda x: _ama.Tools_DestroyRDIQueryItem
    if _newclass:DestroyRDIQueryItem = staticmethod(_ama.Tools_DestroyRDIQueryItem)
    __swig_getmethods__["SetRDIQueryItem"] = lambda x: _ama.Tools_SetRDIQueryItem
    if _newclass:SetRDIQueryItem = staticmethod(_ama.Tools_SetRDIQueryItem)
    __swig_getmethods__["GetRDIQueryItemByIndex"] = lambda x: _ama.Tools_GetRDIQueryItemByIndex
    if _newclass:GetRDIQueryItemByIndex = staticmethod(_ama.Tools_GetRDIQueryItemByIndex)
    __swig_getmethods__["GetSubTradingPhaseByIndex"] = lambda x: _ama.Tools_GetSubTradingPhaseByIndex
    if _newclass:GetSubTradingPhaseByIndex = staticmethod(_ama.Tools_GetSubTradingPhaseByIndex)
    __swig_getmethods__["GetInt64DataByIndex"] = lambda x: _ama.Tools_GetInt64DataByIndex
    if _newclass:GetInt64DataByIndex = staticmethod(_ama.Tools_GetInt64DataByIndex)
    __swig_getmethods__["GetDataSize"] = lambda x: _ama.Tools_GetDataSize
    if _newclass:GetDataSize = staticmethod(_ama.Tools_GetDataSize)
    __swig_getmethods__["GetDataByIndex"] = lambda x: _ama.Tools_GetDataByIndex
    if _newclass:GetDataByIndex = staticmethod(_ama.Tools_GetDataByIndex)
    __swig_getmethods__["Serialize"] = lambda x: _ama.Tools_Serialize
    if _newclass:Serialize = staticmethod(_ama.Tools_Serialize)
    __swig_getmethods__["FreeMemory"] = lambda x: _ama.Tools_FreeMemory
    if _newclass:FreeMemory = staticmethod(_ama.Tools_FreeMemory)
    __swig_getmethods__["GetEventLevelString"] = lambda x: _ama.Tools_GetEventLevelString
    if _newclass:GetEventLevelString = staticmethod(_ama.Tools_GetEventLevelString)
    __swig_getmethods__["GetEventCodeString"] = lambda x: _ama.Tools_GetEventCodeString
    if _newclass:GetEventCodeString = staticmethod(_ama.Tools_GetEventCodeString)
    __swig_getmethods__["ConvertTradingPhaseCode"] = lambda x: _ama.Tools_ConvertTradingPhaseCode
    if _newclass:ConvertTradingPhaseCode = staticmethod(_ama.Tools_ConvertTradingPhaseCode)
    def __init__(self): 
        this = _ama.new_Tools()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_Tools
    __del__ = lambda self : None;
Tools_swigregister = _ama.Tools_swigregister
Tools_swigregister(Tools)

def Tools_SetUMSServers(*args):
  return _ama.Tools_SetUMSServers(*args)
Tools_SetUMSServers = _ama.Tools_SetUMSServers

def Tools_GetUMSServers(*args):
  return _ama.Tools_GetUMSServers(*args)
Tools_GetUMSServers = _ama.Tools_GetUMSServers

def Tools_CreateSubscribeItem(*args):
  return _ama.Tools_CreateSubscribeItem(*args)
Tools_CreateSubscribeItem = _ama.Tools_CreateSubscribeItem

def Tools_DestroySubscribeItem(*args):
  return _ama.Tools_DestroySubscribeItem(*args)
Tools_DestroySubscribeItem = _ama.Tools_DestroySubscribeItem

def Tools_CreateSubscribeCategoryItem(*args):
  return _ama.Tools_CreateSubscribeCategoryItem(*args)
Tools_CreateSubscribeCategoryItem = _ama.Tools_CreateSubscribeCategoryItem

def Tools_DestroySubscribeCategoryItem(*args):
  return _ama.Tools_DestroySubscribeCategoryItem(*args)
Tools_DestroySubscribeCategoryItem = _ama.Tools_DestroySubscribeCategoryItem

def Tools_SetSubscribeItem(*args):
  return _ama.Tools_SetSubscribeItem(*args)
Tools_SetSubscribeItem = _ama.Tools_SetSubscribeItem

def Tools_GetSubscribeItemByIndex(*args):
  return _ama.Tools_GetSubscribeItemByIndex(*args)
Tools_GetSubscribeItemByIndex = _ama.Tools_GetSubscribeItemByIndex

def Tools_SetSubscribeCategoryItem(*args):
  return _ama.Tools_SetSubscribeCategoryItem(*args)
Tools_SetSubscribeCategoryItem = _ama.Tools_SetSubscribeCategoryItem

def Tools_GetSubscribeCategoryItemByIndex(*args):
  return _ama.Tools_GetSubscribeCategoryItemByIndex(*args)
Tools_GetSubscribeCategoryItemByIndex = _ama.Tools_GetSubscribeCategoryItemByIndex

def Tools_CreateSubscribeOrderBookItem(*args):
  return _ama.Tools_CreateSubscribeOrderBookItem(*args)
Tools_CreateSubscribeOrderBookItem = _ama.Tools_CreateSubscribeOrderBookItem

def Tools_DestroySubscribeOrderBookItem(*args):
  return _ama.Tools_DestroySubscribeOrderBookItem(*args)
Tools_DestroySubscribeOrderBookItem = _ama.Tools_DestroySubscribeOrderBookItem

def Tools_SetSubscribeOrderBookItem(*args):
  return _ama.Tools_SetSubscribeOrderBookItem(*args)
Tools_SetSubscribeOrderBookItem = _ama.Tools_SetSubscribeOrderBookItem

def Tools_GetSubscribeOrderBookItemByIndex(*args):
  return _ama.Tools_GetSubscribeOrderBookItemByIndex(*args)
Tools_GetSubscribeOrderBookItemByIndex = _ama.Tools_GetSubscribeOrderBookItemByIndex

def Tools_CreateSubscribeDerivedDataItem(*args):
  return _ama.Tools_CreateSubscribeDerivedDataItem(*args)
Tools_CreateSubscribeDerivedDataItem = _ama.Tools_CreateSubscribeDerivedDataItem

def Tools_DestroySubscribeDerivedDataItem(*args):
  return _ama.Tools_DestroySubscribeDerivedDataItem(*args)
Tools_DestroySubscribeDerivedDataItem = _ama.Tools_DestroySubscribeDerivedDataItem

def Tools_SetSubscribeDerivedDataItem(*args):
  return _ama.Tools_SetSubscribeDerivedDataItem(*args)
Tools_SetSubscribeDerivedDataItem = _ama.Tools_SetSubscribeDerivedDataItem

def Tools_GetSubscribeDerivedDataItemByIndex(*args):
  return _ama.Tools_GetSubscribeDerivedDataItemByIndex(*args)
Tools_GetSubscribeDerivedDataItemByIndex = _ama.Tools_GetSubscribeDerivedDataItemByIndex

def Tools_CreateCodeTableRecordList():
  return _ama.Tools_CreateCodeTableRecordList()
Tools_CreateCodeTableRecordList = _ama.Tools_CreateCodeTableRecordList

def Tools_DestroyCodeTableRecordList(*args):
  return _ama.Tools_DestroyCodeTableRecordList(*args)
Tools_DestroyCodeTableRecordList = _ama.Tools_DestroyCodeTableRecordList

def Tools_CreateETFCodeTableRecordList():
  return _ama.Tools_CreateETFCodeTableRecordList()
Tools_CreateETFCodeTableRecordList = _ama.Tools_CreateETFCodeTableRecordList

def Tools_DestroyETFCodeTableRecordList(*args):
  return _ama.Tools_DestroyETFCodeTableRecordList(*args)
Tools_DestroyETFCodeTableRecordList = _ama.Tools_DestroyETFCodeTableRecordList

def Tools_CreateSubCodeTableItem(*args):
  return _ama.Tools_CreateSubCodeTableItem(*args)
Tools_CreateSubCodeTableItem = _ama.Tools_CreateSubCodeTableItem

def Tools_DestroySubCodeTableItem(*args):
  return _ama.Tools_DestroySubCodeTableItem(*args)
Tools_DestroySubCodeTableItem = _ama.Tools_DestroySubCodeTableItem

def Tools_GetSubCodeTableItemByIndex(*args):
  return _ama.Tools_GetSubCodeTableItemByIndex(*args)
Tools_GetSubCodeTableItemByIndex = _ama.Tools_GetSubCodeTableItemByIndex

def Tools_SetSubCodeTableItem(*args):
  return _ama.Tools_SetSubCodeTableItem(*args)
Tools_SetSubCodeTableItem = _ama.Tools_SetSubCodeTableItem

def Tools_CreateETFItem(*args):
  return _ama.Tools_CreateETFItem(*args)
Tools_CreateETFItem = _ama.Tools_CreateETFItem

def Tools_DestroyETFItem(*args):
  return _ama.Tools_DestroyETFItem(*args)
Tools_DestroyETFItem = _ama.Tools_DestroyETFItem

def Tools_SetETFItem(*args):
  return _ama.Tools_SetETFItem(*args)
Tools_SetETFItem = _ama.Tools_SetETFItem

def Tools_GetETFItemByIndex(*args):
  return _ama.Tools_GetETFItemByIndex(*args)
Tools_GetETFItemByIndex = _ama.Tools_GetETFItemByIndex

def Tools_CreateRDIQueryItem(*args):
  return _ama.Tools_CreateRDIQueryItem(*args)
Tools_CreateRDIQueryItem = _ama.Tools_CreateRDIQueryItem

def Tools_DestroyRDIQueryItem(*args):
  return _ama.Tools_DestroyRDIQueryItem(*args)
Tools_DestroyRDIQueryItem = _ama.Tools_DestroyRDIQueryItem

def Tools_SetRDIQueryItem(*args):
  return _ama.Tools_SetRDIQueryItem(*args)
Tools_SetRDIQueryItem = _ama.Tools_SetRDIQueryItem

def Tools_GetRDIQueryItemByIndex(*args):
  return _ama.Tools_GetRDIQueryItemByIndex(*args)
Tools_GetRDIQueryItemByIndex = _ama.Tools_GetRDIQueryItemByIndex

def Tools_GetSubTradingPhaseByIndex(*args):
  return _ama.Tools_GetSubTradingPhaseByIndex(*args)
Tools_GetSubTradingPhaseByIndex = _ama.Tools_GetSubTradingPhaseByIndex

def Tools_GetInt64DataByIndex(*args):
  return _ama.Tools_GetInt64DataByIndex(*args)
Tools_GetInt64DataByIndex = _ama.Tools_GetInt64DataByIndex

def Tools_GetDataSize(*args):
  return _ama.Tools_GetDataSize(*args)
Tools_GetDataSize = _ama.Tools_GetDataSize

def Tools_GetDataByIndex(*args):
  return _ama.Tools_GetDataByIndex(*args)
Tools_GetDataByIndex = _ama.Tools_GetDataByIndex

def Tools_Serialize(*args):
  return _ama.Tools_Serialize(*args)
Tools_Serialize = _ama.Tools_Serialize

def Tools_FreeMemory(*args):
  return _ama.Tools_FreeMemory(*args)
Tools_FreeMemory = _ama.Tools_FreeMemory

def Tools_GetEventLevelString(*args):
  return _ama.Tools_GetEventLevelString(*args)
Tools_GetEventLevelString = _ama.Tools_GetEventLevelString

def Tools_GetEventCodeString(*args):
  return _ama.Tools_GetEventCodeString(*args)
Tools_GetEventCodeString = _ama.Tools_GetEventCodeString

def Tools_ConvertTradingPhaseCode(*args):
  return _ama.Tools_ConvertTradingPhaseCode(*args)
Tools_ConvertTradingPhaseCode = _ama.Tools_ConvertTradingPhaseCode

class IAMDApi(CFETSApi):
    __swig_setmethods__ = {}
    for _s in [CFETSApi]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IAMDApi, name, value)
    __swig_getmethods__ = {}
    for _s in [CFETSApi]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, IAMDApi, name)
    __repr__ = _swig_repr
    __swig_getmethods__["GetVersion"] = lambda x: _ama.IAMDApi_GetVersion
    if _newclass:GetVersion = staticmethod(_ama.IAMDApi_GetVersion)
    __swig_getmethods__["Init"] = lambda x: _ama.IAMDApi_Init
    if _newclass:Init = staticmethod(_ama.IAMDApi_Init)
    __swig_getmethods__["Join"] = lambda x: _ama.IAMDApi_Join
    if _newclass:Join = staticmethod(_ama.IAMDApi_Join)
    __swig_getmethods__["Release"] = lambda x: _ama.IAMDApi_Release
    if _newclass:Release = staticmethod(_ama.IAMDApi_Release)
    __swig_getmethods__["SubscribeData"] = lambda x: _ama.IAMDApi_SubscribeData
    if _newclass:SubscribeData = staticmethod(_ama.IAMDApi_SubscribeData)
    __swig_getmethods__["SubscribeOrderBookData"] = lambda x: _ama.IAMDApi_SubscribeOrderBookData
    if _newclass:SubscribeOrderBookData = staticmethod(_ama.IAMDApi_SubscribeOrderBookData)
    __swig_getmethods__["SubscribeDerivedData"] = lambda x: _ama.IAMDApi_SubscribeDerivedData
    if _newclass:SubscribeDerivedData = staticmethod(_ama.IAMDApi_SubscribeDerivedData)
    __swig_getmethods__["GetCodeTableList"] = lambda x: _ama.IAMDApi_GetCodeTableList
    if _newclass:GetCodeTableList = staticmethod(_ama.IAMDApi_GetCodeTableList)
    __swig_getmethods__["GetETFCodeTableList"] = lambda x: _ama.IAMDApi_GetETFCodeTableList
    if _newclass:GetETFCodeTableList = staticmethod(_ama.IAMDApi_GetETFCodeTableList)
    __swig_getmethods__["GetIMCExchangeRate"] = lambda x: _ama.IAMDApi_GetIMCExchangeRate
    if _newclass:GetIMCExchangeRate = staticmethod(_ama.IAMDApi_GetIMCExchangeRate)
    __swig_getmethods__["FreeMemory"] = lambda x: _ama.IAMDApi_FreeMemory
    if _newclass:FreeMemory = staticmethod(_ama.IAMDApi_FreeMemory)
    def __init__(self): 
        this = _ama.new_IAMDApi()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_IAMDApi
    __del__ = lambda self : None;
IAMDApi_swigregister = _ama.IAMDApi_swigregister
IAMDApi_swigregister(IAMDApi)

def IAMDApi_GetVersion():
  return _ama.IAMDApi_GetVersion()
IAMDApi_GetVersion = _ama.IAMDApi_GetVersion

def IAMDApi_Init(*args):
  return _ama.IAMDApi_Init(*args)
IAMDApi_Init = _ama.IAMDApi_Init

def IAMDApi_Join():
  return _ama.IAMDApi_Join()
IAMDApi_Join = _ama.IAMDApi_Join

def IAMDApi_Release():
  return _ama.IAMDApi_Release()
IAMDApi_Release = _ama.IAMDApi_Release

def IAMDApi_SubscribeData(*args):
  return _ama.IAMDApi_SubscribeData(*args)
IAMDApi_SubscribeData = _ama.IAMDApi_SubscribeData

def IAMDApi_SubscribeOrderBookData(*args):
  return _ama.IAMDApi_SubscribeOrderBookData(*args)
IAMDApi_SubscribeOrderBookData = _ama.IAMDApi_SubscribeOrderBookData

def IAMDApi_SubscribeDerivedData(*args):
  return _ama.IAMDApi_SubscribeDerivedData(*args)
IAMDApi_SubscribeDerivedData = _ama.IAMDApi_SubscribeDerivedData

def IAMDApi_GetCodeTableList(*args):
  return _ama.IAMDApi_GetCodeTableList(*args)
IAMDApi_GetCodeTableList = _ama.IAMDApi_GetCodeTableList

def IAMDApi_GetETFCodeTableList(*args):
  return _ama.IAMDApi_GetETFCodeTableList(*args)
IAMDApi_GetETFCodeTableList = _ama.IAMDApi_GetETFCodeTableList

def IAMDApi_GetIMCExchangeRate(*args):
  return _ama.IAMDApi_GetIMCExchangeRate(*args)
IAMDApi_GetIMCExchangeRate = _ama.IAMDApi_GetIMCExchangeRate

def IAMDApi_FreeMemory(*args):
  return _ama.IAMDApi_FreeMemory(*args)
IAMDApi_FreeMemory = _ama.IAMDApi_FreeMemory

class IAMDSpi(CFETSSpi,HKExSpi):
    __swig_setmethods__ = {}
    for _s in [CFETSSpi,HKExSpi]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IAMDSpi, name, value)
    __swig_getmethods__ = {}
    for _s in [CFETSSpi,HKExSpi]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, IAMDSpi, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _ama.delete_IAMDSpi
    __del__ = lambda self : None;
    def OnLog(self, *args): return _ama.IAMDSpi_OnLog(self, *args)
    def OnIndicator(self, *args): return _ama.IAMDSpi_OnIndicator(self, *args)
    def OnEvent(self, *args): return _ama.IAMDSpi_OnEvent(self, *args)
    def OnMDSnapshot(self, *args): return _ama.IAMDSpi_OnMDSnapshot(self, *args)
    def OnMDOptionSnapshot(self, *args): return _ama.IAMDSpi_OnMDOptionSnapshot(self, *args)
    def OnMDHKTSnapshot(self, *args): return _ama.IAMDSpi_OnMDHKTSnapshot(self, *args)
    def OnMDIndexSnapshot(self, *args): return _ama.IAMDSpi_OnMDIndexSnapshot(self, *args)
    def OnMDTickOrder(self, *args): return _ama.IAMDSpi_OnMDTickOrder(self, *args)
    def OnMDTickExecution(self, *args): return _ama.IAMDSpi_OnMDTickExecution(self, *args)
    def OnMDOrderQueue(self, *args): return _ama.IAMDSpi_OnMDOrderQueue(self, *args)
    def OnMDAfterHourFixedPriceSnapshot(self, *args): return _ama.IAMDSpi_OnMDAfterHourFixedPriceSnapshot(self, *args)
    def OnMDAfterHourFixedPriceTickExecution(self, *args): return _ama.IAMDSpi_OnMDAfterHourFixedPriceTickExecution(self, *args)
    def OnMDFutureSnapshot(self, *args): return _ama.IAMDSpi_OnMDFutureSnapshot(self, *args)
    def OnMDCSIIndexSnapshot(self, *args): return _ama.IAMDSpi_OnMDCSIIndexSnapshot(self, *args)
    def OnMDIndicatorOfTradingVolumeSnapshot(self, *args): return _ama.IAMDSpi_OnMDIndicatorOfTradingVolumeSnapshot(self, *args)
    def OnMDCnIndexSnapshot(self, *args): return _ama.IAMDSpi_OnMDCnIndexSnapshot(self, *args)
    def OnMDRefinancingTickOrder(self, *args): return _ama.IAMDSpi_OnMDRefinancingTickOrder(self, *args)
    def OnMDRefinancingTickExecution(self, *args): return _ama.IAMDSpi_OnMDRefinancingTickExecution(self, *args)
    def OnMDNegotiableTickOrder(self, *args): return _ama.IAMDSpi_OnMDNegotiableTickOrder(self, *args)
    def OnMDNegotiableTickExecution(self, *args): return _ama.IAMDSpi_OnMDNegotiableTickExecution(self, *args)
    def OnMDHKTRealtimeLimit(self, *args): return _ama.IAMDSpi_OnMDHKTRealtimeLimit(self, *args)
    def OnMDHKTProductStatus(self, *args): return _ama.IAMDSpi_OnMDHKTProductStatus(self, *args)
    def OnMDHKTVCM(self, *args): return _ama.IAMDSpi_OnMDHKTVCM(self, *args)
    def OnMDNEEQSnapshot(self, *args): return _ama.IAMDSpi_OnMDNEEQSnapshot(self, *args)
    def OnMDNEEQSecurityInfo(self, *args): return _ama.IAMDSpi_OnMDNEEQSecurityInfo(self, *args)
    def OnMDNEEQNonPublicTransDeclaredInfo(self, *args): return _ama.IAMDSpi_OnMDNEEQNonPublicTransDeclaredInfo(self, *args)
    def OnMDNEEQHierarchicalInfo(self, *args): return _ama.IAMDSpi_OnMDNEEQHierarchicalInfo(self, *args)
    def OnMDOrderBook(self, *args): return _ama.IAMDSpi_OnMDOrderBook(self, *args)
    def OnMDOrderBookSnapshot(self, *args): return _ama.IAMDSpi_OnMDOrderBookSnapshot(self, *args)
    def OnMDIOPVSnapshot(self, *args): return _ama.IAMDSpi_OnMDIOPVSnapshot(self, *args)
    def OnMDHKMarketStatus(self, *args): return _ama.IAMDSpi_OnMDHKMarketStatus(self, *args)
    def OnMDNEEQNegotiableDeclaredInfo(self, *args): return _ama.IAMDSpi_OnMDNEEQNegotiableDeclaredInfo(self, *args)
    def OnMDNEEQMarketMakerDeclaredInfo(self, *args): return _ama.IAMDSpi_OnMDNEEQMarketMakerDeclaredInfo(self, *args)
    def OnMDNEEQNonPublicTransferDealInfo(self, *args): return _ama.IAMDSpi_OnMDNEEQNonPublicTransferDealInfo(self, *args)
    def OnMDBondSnapshot(self, *args): return _ama.IAMDSpi_OnMDBondSnapshot(self, *args)
    def OnMDBondTickOrder(self, *args): return _ama.IAMDSpi_OnMDBondTickOrder(self, *args)
    def OnMDBondQuotedTickOrder(self, *args): return _ama.IAMDSpi_OnMDBondQuotedTickOrder(self, *args)
    def OnMDBondTickExecution(self, *args): return _ama.IAMDSpi_OnMDBondTickExecution(self, *args)
    def OnMDBondQuotedTickExecution(self, *args): return _ama.IAMDSpi_OnMDBondQuotedTickExecution(self, *args)
    def OnMDFundExpertSnapshot(self, *args): return _ama.IAMDSpi_OnMDFundExpertSnapshot(self, *args)
    def __init__(self): 
        if self.__class__ == IAMDSpi:
            _self = None
        else:
            _self = self
        this = _ama.new_IAMDSpi(_self, )
        try: self.this.append(this)
        except: self.this = this
    def __disown__(self):
        self.this.disown()
        _ama.disown_IAMDSpi(self)
        return weakref_proxy(self)
IAMDSpi_swigregister = _ama.IAMDSpi_swigregister
IAMDSpi_swigregister(IAMDSpi)

# This file is compatible with both classic and new-style classes.


